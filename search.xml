<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>树莓派初始化</title>
      <link href="/%E7%AC%94%E8%AE%B0/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
      <url>/%E7%AC%94%E8%AE%B0/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%9D%E5%A7%8B%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="格卡"><a href="#格卡" class="headerlink" title="格卡"></a>格卡</h1><p>用管理员权限打开 “SDFormatter.exe”</p><p>把对应的卡格式化</p><p>Option:</p><pre><code>FORMAT TYPE: QUICKFORMAT SIZE ADJUSTMENT: ON      // 对齐</code></pre><hr><h1 id="烧录"><a href="#烧录" class="headerlink" title="烧录"></a>烧录</h1><p>用管理员权限打开 “USB Image Tool.exe”</p><ul><li>左上角选项为: Device Mode</li></ul><blockquote><p>  Restore： 刷写、恢复系统<br>  Rescan： （刷多张卡的时候才会用得到）<br>  Backup： 备份系统（镜像快照？集群时用）</p></blockquote><br><p><strong>或直接使用 <a href="https://downloads.raspberrypi.org/imager/imager_latest.exe">树莓派官方烧录软件</a> 进行格卡和烧录</strong></p><p><code>建议自己下载镜像，官方的烧录软件要梯子 而且速度慢</code></p><ul><li><a href="https://www.raspberrypi.com/software/operating-systems/">Raspberry Pi OS 镜像</a></li><li><a href="https://cn.ubuntu.com/download/raspberry-pi">安装在树莓派上的Ubuntu</a></li></ul><hr><h1 id="进入系统"><a href="#进入系统" class="headerlink" title="进入系统"></a>进入系统</h1><p>正常安装，设置好 语言、WiFi、时区等</p><hr><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="su-认证"><a href="#su-认证" class="headerlink" title="su 认证"></a>su 认证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo passwd</span><br></pre></td></tr></table></figure><h2 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h2><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu-ports/">https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu-ports/</a></p><p>选择对应版本，复制粘贴</p><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt update</span><br><span class="line">$ sudo apt upgrade</span><br></pre></td></tr></table></figure><h2 id="安装-ssh"><a href="#安装-ssh" class="headerlink" title="安装 ssh"></a>安装 ssh</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install openssh-server</span><br></pre></td></tr></table></figure><p>查看是否ssh服务是否启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ps -e | grep ssh</span><br></pre></td></tr></table></figure><p>有sshd证明已经启动，没有则需要启动ssh服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service ssh start</span><br></pre></td></tr></table></figure><h2 id="生成公钥、私钥"><a href="#生成公钥、私钥" class="headerlink" title="生成公钥、私钥"></a>生成公钥、私钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建.ssh目录</span></span><br><span class="line">$ mkdir .ssh</span><br><span class="line">$ <span class="built_in">cd</span> .ssh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成公私钥</span></span><br><span class="line">$ ssh-keygen</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制一份公钥</span></span><br><span class="line">$ cp id_rsa.pub authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 authorized_keys 的权限</span></span><br><span class="line"><span class="comment"># $ chmod 755 ~</span></span><br><span class="line"><span class="comment"># $ chmod 700 ~/.ssh</span></span><br><span class="line"><span class="comment"># $ chmod 600 ~/.ssh/authorized_keys</span></span><br></pre></td></tr></table></figure><p>将要免密登录的电脑的公钥 追加到 <strong>authorized_keys</strong> 里即可</p><hr><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install git</span><br></pre></td></tr></table></figure><p><em><strong>注：这里往后基本上都是 root 在进行的，注意切换！</strong></em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置git用户</span></span><br><span class="line">$ adduser git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改权限</span></span><br><span class="line">$ chmod 740 /etc/sudoers</span><br><span class="line">$ vim /etc/sudoers</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 root ALL=(ALL:ALL) ALL 下面添加:</span></span><br><span class="line">git ALL=(ALL:ALL) ALL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 然后保存并退出，将 sudoers 文件权限改回原样：</span></span><br><span class="line">$ chmod 400 /etc/sudoers</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 git 用户的密码：</span></span><br><span class="line">$ sudo passwd git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到 git 用户，然后在 ~ 目录下创建 .ssh 文件夹</span></span><br><span class="line"><span class="comment"># 同上文 配置-&gt;生成公钥、私钥</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 authorized_keys 的权限</span></span><br></pre></td></tr></table></figure><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入到 git 用户</span></span><br><span class="line"><span class="comment"># $ su root</span></span><br><span class="line"><span class="comment"># $ cd /home/git</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 /home/git下创建新仓库 xxx.git</span></span><br><span class="line">$ git init --bare xxx.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给予 git 用户权限</span></span><br><span class="line">$ chown git:git -R blog.git</span><br></pre></td></tr></table></figure><h2 id="hooks"><a href="#hooks" class="headerlink" title="hooks"></a>hooks</h2><p>假设当前用户为：xld</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 xld 的目录下创建文件夹 xxx</span></span><br><span class="line">$ <span class="built_in">cd</span> </span><br><span class="line">$ mkdir xxx </span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加可写权限</span></span><br><span class="line">$ chmod 777 xxx/</span><br></pre></td></tr></table></figure><p>返回到git用户</p><p>在 <code>/home/git/xxx.git/hooks/</code> 下创建 <code>post-receive</code> 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> xxx.git/hooks/</span><br><span class="line">$ vim post-receive</span><br></pre></td></tr></table></figure><p>添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">git --work-tree=/home/xld/xxx --git-dir=/home/git/xxx.git checkout -f</span><br></pre></td></tr></table></figure><p>保存退出，添加可执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ chmod +x /home/git/xxx.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>这样就可以将提交到 <code>/home/git/xxx.git</code> 仓库里的内容，同步到 <code>/home/xld/xxx</code> 的文件夹下</p><hr><h1 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h1><h2 id="安装-nodejs"><a href="#安装-nodejs" class="headerlink" title="安装 nodejs"></a>安装 nodejs</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install nodejs</span><br></pre></td></tr></table></figure><p><strong>npm相关设置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ npm config ls <span class="comment"># 查看npm设置</span></span><br><span class="line">$ npm config get prefix<span class="comment"># 获取npm包安装路径</span></span><br><span class="line">$ npm config <span class="built_in">set</span> prefix<span class="comment"># 设置npm包安装路径</span></span><br><span class="line">$ npm config get cache<span class="comment"># 获取npm缓存</span></span><br><span class="line">$ npm config <span class="built_in">set</span> cache<span class="comment"># 设置npm缓存</span></span><br><span class="line">$ npm root -g    <span class="comment"># 查看npm全局路径的根目录</span></span><br></pre></td></tr></table></figure><h2 id="安装-nodejs-守护进程-forever"><a href="#安装-nodejs-守护进程-forever" class="headerlink" title="安装 nodejs 守护进程 forever"></a>安装 nodejs 守护进程 forever</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g forever</span><br></pre></td></tr></table></figure><p><strong>forever相关指令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># index.js是你要启动的js文件</span></span><br><span class="line">$ forever start index.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 会列出forever正在运行的服务脚本</span></span><br><span class="line">$ forever list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止服务运行</span></span><br><span class="line">$ forever stop index.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看帮助信息</span></span><br><span class="line">$ forever --<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最简单的启动方式</span></span><br><span class="line">$ forever start ./index.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定forever日志输出文件，默认路径~/.forever</span></span><br><span class="line">$ forever start -l forever.log ./index.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要注意，如果第一次启动带日志输出文件，以后启动都需要加上 -a 参数，forever默认不覆盖原文件</span></span><br><span class="line">$ forever start -l forever.log -a ../index.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定node.js应用的控制台输出文件和错误信息输出文件</span></span><br><span class="line">$ forever start -o out.log -e err.log ./index.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 监听当前目录下文件改动，如有改动，立刻重启应用，不推荐的做法！如有日志文件，日志文件是频繁更改的</span></span><br><span class="line">$ forever start -w ./index.js</span><br></pre></td></tr></table></figure><hr><h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><h2 id="安装-python"><a href="#安装-python" class="headerlink" title="安装 python"></a>安装 python</h2><h3 id="apt-安装"><a href="#apt-安装" class="headerlink" title="apt 安装"></a>apt 安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install python3.x</span><br></pre></td></tr></table></figure><h3 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h3><p>在<a href="https://www.python.org/downloads/source/">这里</a>选择版本，建议3.9.x</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">$ sudo apt-get install -y make build-essential libssl-dev zlib1g-dev   </span><br><span class="line">$ sudo apt-get install -y libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm </span><br><span class="line">$ sudo apt-get install -y libncurses5-dev  libncursesw5-dev xz-utils tk-dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载压缩包</span></span><br><span class="line">$ wget https://www.python.org/ftp/python/3.9.16/Python-3.9.16.tgz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">$ tar zxvf Python-3.9.16.tgz</span><br><span class="line">$ <span class="built_in">cd</span> Python-3.9.16 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译安装</span></span><br><span class="line">$ sudo ./configure &amp;&amp; sudo make -j4 &amp;&amp; sudo make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查</span></span><br><span class="line">$ python3 -V</span><br><span class="line">$ pip3 -V           <span class="comment"># python3.4 及 python2.7 以上版本内置了pip</span></span><br></pre></td></tr></table></figure><hr><h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h2 id="安装-JDK（二选一）"><a href="#安装-JDK（二选一）" class="headerlink" title="安装 JDK（二选一）"></a>安装 JDK（二选一）</h2><br><p>安装 openjdk</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 建议安装 jdk17 是LTS长期支持版本</span></span><br><span class="line">$ sudo apt install openjdk-17-jdk-headless</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">$ java -version</span><br></pre></td></tr></table></figure><br><p>安装 OracleJDK</p><p>可以到<a href="https://www.oracle.com/cn/java/technologies/downloads/">这里</a>选择版本安装，建议是jdk17</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载压缩包</span></span><br><span class="line">$ wget https://download.oracle.com/java/17/latest/jdk-17_linux-aarch64_bin.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">$ tar -zxvf jdk-17_linux-aarch64_bin.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换并新建jdk目录</span></span><br><span class="line">$ <span class="built_in">cd</span> /usr/lib</span><br><span class="line">$ sudo mkdir jdk</span><br><span class="line">$ sudo mv ~/download/jdk-17.0.5/ /usr/lib/jdk/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境</span></span><br><span class="line">$ sudo vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># set java env</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jdk/jdk-17.0.5</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使修改生效</span></span><br><span class="line">$ <span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">$ java -version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加软连接，部分软件会从/usr/bin下找java</span></span><br><span class="line"><span class="comment"># $ sudo update-alternatives --install /usr/bin/java  java  /usr/lib/jdk/jdk-17.0.5/bin/java 300   </span></span><br><span class="line"><span class="comment"># $ sudo update-alternatives --install /usr/bin/javac  javac  /usr/lib/jdk/jdk-17.0.5/bin/javac 300</span></span><br></pre></td></tr></table></figure><hr><h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><h2 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a>安装 docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">$ sudo apt install docker.io</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">$ sudo docker run hello-world</span><br></pre></td></tr></table></figure><h2 id="docker-命令免-sudo-执行"><a href="#docker-命令免-sudo-执行" class="headerlink" title="docker 命令免 sudo 执行"></a>docker 命令免 sudo 执行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建docker组</span></span><br><span class="line">$ sudo groupadd docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将用户添加到docker组</span></span><br><span class="line">$ sudo gpasswd -a <span class="variable">$&#123;USER&#125;</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启docker服务</span></span><br><span class="line">$ sudo systemctl restart docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出当前会话 重新登录即可</span></span><br><span class="line"><span class="comment"># 或切换当前会话到新 group </span></span><br><span class="line">$ newgrp - docker</span><br></pre></td></tr></table></figure><hr><h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><hr><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><hr><h1 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h1><hr><h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h1><hr><p><br><br><br></p><p>待续未完……</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>能一键备份的快捷方式</title>
      <link href="/%E6%8A%80%E6%9C%AF/%E8%83%BD%E4%B8%80%E9%94%AE%E5%A4%87%E4%BB%BD%E7%9A%84%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/"/>
      <url>/%E6%8A%80%E6%9C%AF/%E8%83%BD%E4%B8%80%E9%94%AE%E5%A4%87%E4%BB%BD%E7%9A%84%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="一键保存"><a href="#一键保存" class="headerlink" title="一键保存"></a>一键保存</h1><p>简单描述一下就是，在桌面生成一个bash命令的快捷方式，当拖动文件在这个快捷方式上打开时，就会自动将这个文件保存到你本地的MongoDB中。</p><p>我搞来就是想写东西的时候，保存顺便备份。。。</p><hr><h2 id="首先安装好MongoDB"><a href="#首先安装好MongoDB" class="headerlink" title="首先安装好MongoDB"></a>首先安装好MongoDB</h2><p>不懂直接菜鸟教程：<a href="https://www.runoob.com/mongodb/mongodb-window-install.html">Windows 平台安装 MongoDB</a></p><h2 id="然后装好npm"><a href="#然后装好npm" class="headerlink" title="然后装好npm"></a>然后装好npm</h2><p>这个使用node.js跑的</p><h2 id="接着搞个文件夹"><a href="#接着搞个文件夹" class="headerlink" title="接着搞个文件夹"></a>接着搞个文件夹</h2><p>创建两个文件，分别是： save.js 和 savefile.bat</p><p>然后上代码：</p><p>没有 <code>mongodb</code> 和 <code>node-cmd</code> 这两个库的先npm装一下嘛，不能懒哦~<br><del>（虽然我搞这玩意就是因为懒……）</del></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// save.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; MongoClient &#125; = <span class="built_in">require</span>(<span class="string">&#x27;mongodb&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> cmd = <span class="built_in">require</span>(<span class="string">&quot;node-cmd&quot;</span>)</span><br><span class="line"><span class="comment">// or as an es module:</span></span><br><span class="line"><span class="comment">// import &#123; MongoClient &#125; from &#x27;mongodb&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Connection URL</span></span><br><span class="line"><span class="keyword">const</span> url = <span class="string">&#x27;mongodb://localhost:27017&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> client = <span class="keyword">new</span> MongoClient(url);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Database Name</span></span><br><span class="line"><span class="keyword">const</span> dbName = <span class="string">&#x27;file&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">main</span>(<span class="params">path</span>) </span>&#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Use connect method to connect to the server</span></span><br><span class="line">    <span class="keyword">await</span> client.connect();</span><br><span class="line">    <span class="built_in">console</span>.log(<span class="string">&#x27;Connected successfully to server&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> db = client.db(dbName);</span><br><span class="line">    <span class="keyword">const</span> collection = db.collection(<span class="string">&#x27;file&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    path = path.replace(<span class="regexp">/\\/g</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    <span class="built_in">console</span>.log(path)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分割路径 + 文件名</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getDirName</span>(<span class="params">path</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> arr = path.split(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">        <span class="keyword">var</span> filename = arr[arr.length -<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">var</span> fileDir = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.length-<span class="number">1</span>; i++) &#123;</span><br><span class="line">            fileDir += arr[i] + <span class="string">&quot;/&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> [fileDir,filename]</span><br><span class="line">    &#125;</span><br><span class="line">    [fileDir,filename] = getDirName(path);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取文件大小</span></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">getSize</span>(<span class="params">path</span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> size;</span><br><span class="line">        <span class="keyword">var</span> fileMsg = fs.statSync(path);</span><br><span class="line">        <span class="keyword">if</span>(fileMsg.size &lt; <span class="number">1024</span>)                     size = fileMsg.size + <span class="string">&#x27;b&#x27;</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(fileMsg.size &lt; <span class="number">1024</span> * <span class="number">1024</span>)         size = (fileMsg.size/<span class="number">1024</span>).toFixed(<span class="number">2</span>) + <span class="string">&#x27;kb&#x27;</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(fileMsg.size &lt; <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">1024</span>)  size = (fileMsg.size/<span class="number">1024</span>/<span class="number">1024</span>).toFixed(<span class="number">2</span>) + <span class="string">&#x27;MB&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> size = getSize(path)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取文件数据</span></span><br><span class="line">    <span class="keyword">var</span> data = fs.readFileSync(path)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取当前时间</span></span><br><span class="line">    <span class="keyword">var</span> time = <span class="keyword">new</span> <span class="built_in">Date</span>().toLocaleString()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 插入数据</span></span><br><span class="line">    <span class="keyword">var</span> insertResult = <span class="keyword">await</span> collection.insert(</span><br><span class="line">        &#123; </span><br><span class="line">            path,</span><br><span class="line">            fileDir,</span><br><span class="line">            filename,  </span><br><span class="line">            data,</span><br><span class="line">            size,</span><br><span class="line">            time</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    <span class="built_in">console</span>.log(insertResult)</span><br><span class="line">    fs.appendFileSync(<span class="string">&quot;log&quot;</span>, time + <span class="string">&quot;\t:\t&quot;</span> + path + <span class="string">&quot;\t&quot;</span> + <span class="string">&quot;insertedCount:&quot;</span> + insertResult.insertedCount + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;done.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sleep</span>(<span class="params">ms</span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="built_in">Promise</span>(<span class="function"><span class="params">resolve</span>=&gt;</span><span class="built_in">setTimeout</span>(resolve, ms))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="function"><span class="keyword">function</span> <span class="title">pause</span>(<span class="params">ms</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">await</span> sleep(ms)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> args = process.argv.splice(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">var</span> path = args[<span class="number">0</span>]</span><br><span class="line"><span class="built_in">console</span>.log(path)</span><br><span class="line"></span><br><span class="line">main(path)</span><br><span class="line">    .then(<span class="built_in">console</span>.log)</span><br><span class="line">    .catch(<span class="built_in">console</span>.error)</span><br><span class="line">    .finally(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        client.close()</span><br><span class="line"></span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;MongoDB Server (MongoDB) 服务正在停止 .&quot;</span>)</span><br><span class="line">        cmd.run(<span class="string">&quot;net stop mongodb&quot;</span>)</span><br><span class="line">        <span class="built_in">console</span>.log(<span class="string">&quot;MongoDB Server (MongoDB) 服务已成功停止。&quot;</span>)</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;\nfinish\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">pause(<span class="number">2000</span>)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># savefile.bat</span></span><br><span class="line"></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> %1<span class="comment"># 打印这个文件的路径</span></span><br><span class="line">net start mongodb<span class="comment"># 启动MongoDB服务</span></span><br><span class="line">npm start %1<span class="comment"># 启动上面的save.js</span></span><br><span class="line"></span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>然后改一下这个<code>package.json</code> ，加个 <code>scripts</code> 上去，和bat中的start一起就能跑起来了。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># package.json</span><br><span class="line"></span><br><span class="line">&#123;</span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;mongodb&quot;</span>: <span class="string">&quot;^4.3.0&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;node-cmd&quot;</span>: <span class="string">&quot;^5.0.0&quot;</span></span><br><span class="line">  &#125;,</span><br><span class="line">  <span class="attr">&quot;main&quot;</span>: <span class="string">&quot;save.js&quot;</span>,</span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span>: &#123;</span><br><span class="line">    <span class="attr">&quot;start&quot;</span>: <span class="string">&quot;node save.js&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><hr><h2 id="然后，然后就没有然后了…"><a href="#然后，然后就没有然后了…" class="headerlink" title="然后，然后就没有然后了…"></a>然后，然后就没有然后了…</h2><p>那倒也不是，然后就是把 <code>savefile.bat</code> 创建桌面快捷方式，然后就可以把你的word文档呀，markdown呀，乱七八糟的东西，拖到桌面的快捷方式上去 松手，备份完毕，</p><p>至于怎么看嘛。。。</p><p>搞个cmd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mongo</span><br><span class="line">$ use file</span><br><span class="line">$ db.file.find(&#123;&#125;,&#123;data:0&#125;)<span class="comment"># 不看data，因为都是二进制数据</span></span><br><span class="line">$ db.file.find(&#123;&#125;,&#123;data:0&#125;).pretty()<span class="comment"># 格式化输出</span></span><br></pre></td></tr></table></figure><p>记录了文件名，大小，保存时间，还有保存时文件所在的路径。</p><p>而且还可以重复保存，也不会覆盖掉，时间不同嘛 就可以区分版本，所以我就搞来当备份用了</p><hr><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>还是再唠嗑一下吧，</p><p>用这个保存过之后，会在这个文件夹下生成一个log，你就能看到自己曾今保存了什么了。</p><p>还有就是，现在这玩意是二进制存储的，还可以搞一下压缩，读完文件之后 压缩完再丢进去，虽然说是MongoDB 存个几G几T都还行，但毕竟存在本地嘛…</p><p><del>但别人删你文件的时候，清空回收站，但其实还可以恢复，就很nice!</del></p><p><del>写论文，写文档的时候就很棒，还可以存点***那些东西咳咳… 隐藏文件夹什么的有什么用嘛，光明正大的白给</del></p><p>有时间再弄个恢复文档的客户端 <del>（什么叫在线点播呀，后仰.jpg）</del></p><hr><h2 id="再说个坑吧"><a href="#再说个坑吧" class="headerlink" title="再说个坑吧"></a>再说个坑吧</h2><p>就是，.bat 中 <code>%1</code> 代表传进去的第一个参数嘛，这个挺好理解的</p><p>然后就是跑了 <code> npm start %1</code>    这个时候，后面的都不生效了，跑完就直接闪退了…就很懵</p><p>本来我是想这样的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">net start mongodb<span class="comment"># 启动服务</span></span><br><span class="line">npm start %1<span class="comment"># 跑、存文件</span></span><br><span class="line">net stop mongodb<span class="comment"># 停止服务</span></span><br><span class="line">pause<span class="comment"># 任意键退出</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>但结果就是后面两步不执行，直接闪退…</p><p>如果是用start 启动node的话，他就相当于再新建了一个cmd来跑，跑完了就不能退了，就会留了个黑框得自己关，而且这可以算是一个异步过程，要是没存完就把服务关了，就很。。。</p><p>总之就不是我所想的那样。。。</p><p>所以我就把后面两步写在node里面了，用里面的 <code>node-cmd</code> 来跑算了 </p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 小玩意 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mongodb </tag>
            
            <tag> bash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu20.04下，搭建hexo个人博客</title>
      <link href="/%E6%8A%80%E6%9C%AF/Ubuntu20-04%E4%B8%8B%EF%BC%8C%E6%90%AD%E5%BB%BAhexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/%E6%8A%80%E6%9C%AF/Ubuntu20-04%E4%B8%8B%EF%BC%8C%E6%90%AD%E5%BB%BAhexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="一些说明和资源"><a href="#一些说明和资源" class="headerlink" title="一些说明和资源"></a>一些说明和资源</h1><p>所使用到的软件版本：</p><table><thead><tr><th align="center">Ubuntu</th><th align="center">Nginx</th><th align="center">Git</th><th align="center">hexo</th></tr></thead><tbody><tr><td align="center">20.04 LTS</td><td align="center">1.18.0</td><td align="center">2.25.1</td><td align="center">5.4.0.</td></tr></tbody></table><p>其他说明：这里所演示的是在 VirtualBox 中进行的，实际工作场景可以是云服务器上<br>（因为我通常在虚拟机折腾完之后再同步到服务器hhh）</p><hr><h1 id="大致的布局和思路"><a href="#大致的布局和思路" class="headerlink" title="大致的布局和思路"></a>大致的布局和思路</h1><p><img src="https://img-blog.csdnimg.cn/4b4a0a93d9cc4cf5b5c601a8e64e2878.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16" alt="大致的布局和思路"></p><hr><h1 id="安装Ubuntu-20-04-LTS"><a href="#安装Ubuntu-20-04-LTS" class="headerlink" title="安装Ubuntu 20.04 LTS"></a>安装Ubuntu 20.04 LTS</h1><p>这里先挖个坑，后续再补充文章…</p><p>这里可以参考这位老哥的：<a href="https://blog.csdn.net/weixin_45763600/article/details/114833521">安装Ubuntu 20.04 LTS服务器的图文教程</a><br><br></p><hr><h1 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h1><h2 id="安装并配置Nginx"><a href="#安装并配置Nginx" class="headerlink" title="安装并配置Nginx"></a><strong>安装并配置<code>Nginx</code></strong></h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><strong>先更新源：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 获得源上的软件包列表信息</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get update</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更新本地软件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get upgrade</span></span><br></pre></td></tr></table></figure><p><strong>然后安装：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> -y 表示yes</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install -y nginx</span></span><br></pre></td></tr></table></figure><p><strong>启动服务器：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> systemctl start nginx</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl <span class="built_in">enable</span> nginx</span></span><br></pre></td></tr></table></figure><p>nginx默认的配置文件的路径是：<code>/etc/nginx/ </code><br><br></p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>我们可以看到<code>/etc/nginx/ </code>目录下的文件<br><img src="https://img-blog.csdnimg.cn/e7965bea41a34ccc982d7a4450f7fd76.png" alt="/etc/nginx"><br>正常来说应该是 nginx.conf 这个文件，我们编辑它：<br> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo vim nginx.conf</span></span><br></pre></td></tr></table></figure></p><p> 打开后并没有在http下看到我们熟悉的server、listen这些熟悉的东西，但是会看到有这么两行： <img src="https://img-blog.csdnimg.cn/fa5c9882c0024755b25d80eb88faa797.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16" alt="nginx.conf"><br>所以我们可以在 <code>/etc/nginx/conf.d/*.conf</code>下进行配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo cp sites-available/default conf.d/default.conf</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo vim default.conf</span></span><br></pre></td></tr></table></figure><p><strong>IP改为自己的IP<br> root改为自己的资源路径，这里要与后面Git的勾子对应</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80 default_server;</span><br><span class="line">listen [::]:80 default_server;</span><br><span class="line">server_name 192.168.37.131;// 这里写自己的服务器IP</span><br><span class="line"></span><br><span class="line"># root /home/xld/hexo;</span><br><span class="line"># index index.html;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">root /home/xld/hexo;</span><br><span class="line">                index index.html;</span><br><span class="line">                autoindex on;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 还可以简单的配置监听多个端口（具体的可以看其他 nginx 的配置）</span><br><span class="line">// server &#123;</span><br><span class="line">//        listen 81;</span><br><span class="line">//        listen [::]:81;</span><br><span class="line">//        server_name 192.168.37.131;</span><br><span class="line">// </span><br><span class="line">//        root /home/xld/api;</span><br><span class="line">//        #index index.html;</span><br><span class="line">// </span><br><span class="line">//        location / &#123;</span><br><span class="line">//                 root /home/xld/api;</span><br><span class="line">//                 autoindex on;</span><br><span class="line">//        &#125;</span><br><span class="line">// &#125;</span><br></pre></td></tr></table></figure><p>配置完记得保存然后重新加载一下，这里列出几个常用的nginx命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> nginx -t// 查看nginx状态（用来测试配置是否正确）</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nginx -s reload// 重新载入配置文件</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nginx -s reopen// 重启 Nginx</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> nginx -s stop// 停止 Nginx</span></span><br></pre></td></tr></table></figure><p>*<strong>创建hexo文件夹</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mkdir hexo</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo chmod 775 hexo// 这里应该是权限问题我没搞懂，不改的话后面git钩子钩过来但权限不足，导致同步不了。</span></span><br></pre></td></tr></table></figure><br><h2 id="Git仓库"><a href="#Git仓库" class="headerlink" title="Git仓库"></a>Git仓库</h2><h3 id="Git安装和用户创建"><a href="#Git安装和用户创建" class="headerlink" title="Git安装和用户创建"></a>Git安装和用户创建</h3><p><strong>安装git：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo apt-get install git</span></span><br></pre></td></tr></table></figure><p>注：这里往后基本上都是root在进行的，注意切换！</p><p><strong>配置git用户：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> adduser git</span></span><br></pre></td></tr></table></figure><p><strong>修改权限：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> chmod 740 /etc/sudoers</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim /etc/sudoers</span></span><br></pre></td></tr></table></figure><p>定位到这里，加上 <code>git</code>用户这一行<br><img src="https://img-blog.csdnimg.cn/72e8a3081ab3405088041c29d27923b2.png" alt="/etc/sudoers"><br><strong>然后保存并退出，将sudoers文件权限改回原样：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> chmod 400 /etc/sudoers</span></span><br></pre></td></tr></table></figure><p><strong>设置git用户的密码：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> sudo passwd git</span></span><br></pre></td></tr></table></figure><p><strong>切换到git用户，然后在<code>~</code>目录下创建 <code>.ssh </code>文件夹：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> su git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mkdir .ssh</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> .ssh</span></span><br></pre></td></tr></table></figure><p><strong>生成公钥密钥文件：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ssh-keygen</span></span><br></pre></td></tr></table></figure><p><strong>将公钥文件复制一份：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cp id_rsa.pub authorized_keys</span></span><br></pre></td></tr></table></figure><p><strong>修改<code>authorized_keys</code>的权限：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> chmod 755 ~</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> chmod 700 ~/.ssh</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> chmod 600 ~/.ssh/authorized_keys</span></span><br></pre></td></tr></table></figure><p>然后保存并退出后，我们就可以利用ssh连接和登陆<code>git</code>用户啦~<br><br></p><h3 id="Git的勾子hooks"><a href="#Git的勾子hooks" class="headerlink" title="Git的勾子hooks"></a>Git的勾子hooks</h3><p><strong>创建仓库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> su root</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /home/git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> git init --bare blog.git// 在/home/git下创建新仓库blog.git</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> chown git:git -R blog.git// 给予git用户权限</span></span><br></pre></td></tr></table></figure><p>在<code> /home/git/blog.git/hooks</code> 下创建一个 <code>post-receive</code> 文件<br>把提交到 <code>/home/git/blog.git</code> 仓库里的文件同步到 <code> /home/xld/hexo</code>（上文nginx的root资源目录） 中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> blog.git/hooks/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> vim post-receive</span></span><br></pre></td></tr></table></figure><p>在 post-receive 中添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">git --work-tree=/home/xld/hexo --git-dir=/home/git/blog.git checkout -f</span><br></pre></td></tr></table></figure><p>保存退出，添加可执行权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /home/git/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>给 <code>/home/xld/hexo/</code> 添加写权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> /home/xld/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> chmod 777 hexo</span></span><br></pre></td></tr></table></figure><br><hr><h1 id="本地端"><a href="#本地端" class="headerlink" title="本地端"></a>本地端</h1><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装<code>node.js</code></h2><p>菜鸟教程，你值得拥有：<a href="https://www.runoob.com/nodejs/nodejs-install-setup.html">Node.js 安装配置</a><br><br></p><h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><p>进入到你的<code>blog</code>文件夹下（比如我是windows，就<code>cmd</code>进入到 <code>E:\blog</code> 目录下）</p><h3 id="安装-amp-初始化"><a href="#安装-amp-初始化" class="headerlink" title="安装&amp;初始化"></a>安装&amp;初始化</h3><p><strong>安装</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> npm install -g hexo-cli</span></span><br><span class="line"></span><br><span class="line">// 安装成功后可以查看相关信息</span><br><span class="line"><span class="meta">$</span><span class="bash"> hexo -v</span></span><br></pre></td></tr></table></figure><p><strong>初始化一个博客</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo init</span></span><br></pre></td></tr></table></figure><p><strong>启动博客</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo s</span></span><br></pre></td></tr></table></figure><p>启动之后我们就可以在浏览器输入<code>localhost:4000</code>进行访问了<br>然后你就可以看到 Hello World 文章和它的四个常用命令<br><br></p><h3 id="部署到服务端"><a href="#部署到服务端" class="headerlink" title="部署到服务端"></a>部署到服务端</h3><p><strong>打开文件夹下的 <code>_config.yml</code> 文件</strong>：</p><p>找到 <code>deploy</code> 这一项，然后按格式添加自己的仓库地址<br>（如果你有多个仓库的话，按格式接着写就能一次性git上去）<br><img src="https://img-blog.csdnimg.cn/7a4880c157cf4007891b18b1f5baa998.png" alt="deploy"><br>保存退出，然后顺便把服务端也停掉（上面的 <code>hexo s</code>）</p><p><strong>清除旧文件&amp;重新生成&amp;发布：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> hexo clean &amp; hexo g &amp; hexo d</span></span><br></pre></td></tr></table></figure><p>直接 <code>$ hexo d</code> 也行，只不过说一下可以这么用而已……</p><p>之后等他自动执行发布就好了，如果有提示你输入git用户/密码，照着输入就行<br>之后有ssh就会方便一点<br><br></p><h2 id="访问服务端进行浏览"><a href="#访问服务端进行浏览" class="headerlink" title="访问服务端进行浏览"></a>访问服务端进行浏览</h2><p>返回 <strong>Ubuntu LTS</strong> 上，在 <code>/home/xld/hexo</code> 应该能看到 <code>hexo</code> 自动发布的东西<br>如果你 <code>nginx</code> 没啥问题的话，这时在其他电脑的浏览器上，输入IP地址，就能访问到刚刚那篇 <strong>Hello World</strong> 文章啦~</p><p>再回过头来看开局的那张图。。。</p><p>这简陋的界面多少都有点接受不了吧…这时就可以去到hexo官网 找到一个自己喜欢的主题进行魔改吧~<br><br></p><hr><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="https://blog.csdn.net/weixin_45763600/article/details/114833521">安装Ubuntu 20.04 LTS服务器的图文教程</a></li><li><a href="https://blog.csdn.net/weixin_52154011/article/details/111402551">从零搭建Hexo博客并部署腾讯云服务器（宝宝级教学）</a></li><li><a href="https://hexo.io/">hexo官网</a></li><li><a href="https://www.php.cn/nginx/434058.html">nginx怎么配置</a></li><li><a href="https://www.git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90">Git 钩子</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> 博客 </tag>
            
            <tag> hexo </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型数据库（8）--- Kafka安装与配置</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Kafka%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Kafka%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>虚拟机：VirtualBox-6.1.18<br>操作系统：Ubuntu16.04LTS<br>集群情况：</p><table><thead><tr><th align="center">主机名称</th><th align="center">hadoop版本</th><th align="center">ZooKeeper版本</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">hadoop-master</td><td align="center">2.7.3</td><td align="center">3.6.3</td><td align="center">192.168.56.1</td></tr><tr><td align="center">hadoop-slave1</td><td align="center">2.7.3</td><td align="center">3.6.3</td><td align="center">192.168.56.2</td></tr><tr><td align="center">hadoop-slave2</td><td align="center">2.7.3</td><td align="center">3.6.3</td><td align="center">192.168.56.3</td></tr></tbody></table><h2 id="本次安装的Kafka"><a href="#本次安装的Kafka" class="headerlink" title="本次安装的Kafka"></a>本次安装的Kafka</h2><p>Kafka版本：2.13-2.8.0<br>下载地址：<a href="https://www.apache.org/dyn/closer.cgi?path=/kafka/2.8.1/kafka_2.13-2.8.1.tgz">kafka_2.13-2.8.1.tgz</a><br>其他：<a href="https://kafka.apache.org/">Kafka官网</a>  、<a href="https://kafka.apache.org/downloads">查看不同版本</a>、<a href="https://kafka.apache.org/documentation/#configuration">官方文档</a></p><p>都准备就绪后，我们就接着往下开始安装吧！<br>不知道怎么准备的，我之前的文章 也许可以给你带来一些参考哦 - - - ☞ <a href="https://blog.csdn.net/li1055107552/article/details/114767752">搭建hadoop集群</a><br> <a href="https://blog.csdn.net/li1055107552/article/details/120386759">大型数据库（6）— ZooKeeper安装与配置</a>.</p><hr><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><ol><li>我的两个基础软件Hadoop、Java 分别是在 /usr/hadoop 和 /usr/java下</li><li>其他的都安装在 ~/Hadoop 的文件夹下</li><li>Kafka 不仅需安装在<strong>hadoop-master</strong>下，还需部署在<strong>slave</strong>机上</li></ol><br><h2 id="安装并配置Kafka"><a href="#安装并配置Kafka" class="headerlink" title="安装并配置Kafka"></a>安装并配置Kafka</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/下载</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp kafka_2.13-2.8.0.tgz ~/Hadoop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -zxvf kafka_2.13-2.8.0.tgz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> kafka_2.13-2.8.0/conf</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="server-properties"><a href="#server-properties" class="headerlink" title="server.properties"></a>server.properties</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">将此处的注释去掉</span></span><br><span class="line"><span class="string">listeners=PLAINTEXT://hadoop-master:9092</span></span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">Zookeeper中的设置改为：</span></span><br><span class="line"><span class="string">zookeeper.connect=hadoop-master:2181,hadoop-slave1:2181,hadoop-slave2:2181</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="本机测试"><a href="#本机测试" class="headerlink" title="本机测试"></a>本机测试</h4><p>// 建议将master和slave都先开启zookeeper<br>此时，您可以在master主机上，稍微试试水…</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ~/Hadoop/kafka_2.13-2.8.0/bin</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./kafka-server-start.sh ../config/server.properties &amp;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>打印完一堆东西后，回车输入 <code>$ jps</code> 将会看到<br><img src="https://img-blog.csdnimg.cn/f9e02a727ef245cdad92c246ea01899e.png" alt="![成功启动](https://img-blog.csdnimg.cn/6b69477247b54134b6a553b586a86572.png"></p></blockquote><p>这样，你的master机基本上就配置好了！<br>我们先将其停掉 <code>$ ./kafka-server-stop.sh </code>，继续往后配置！</p><br><h3 id="将Kafka安装文件复制到Slave节点"><a href="#将Kafka安装文件复制到Slave节点" class="headerlink" title="将Kafka安装文件复制到Slave节点"></a>将Kafka安装文件复制到Slave节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> scp -r kafka_2.13-2.8.0/ hadoop-slave1:~/Hadoop/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> scp -r kafka_2.13-2.8.0/ hadoop-slave2:~/Hadoop/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="更改-slave-机上的-broker-id-值"><a href="#更改-slave-机上的-broker-id-值" class="headerlink" title="更改 slave 机上的 broker.id 值"></a>更改 slave 机上的 broker.id 值</h4><p>注：<strong>hadoop-master</strong> 中的 <strong>broker.id</strong> 默认应该为 0</p><p>进入到 <code>hadoop-slave1: ~/Hadoop/kafka_2.13-2.8.0/config</code> 将 <strong>server.properties</strong> 更改以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">broker.id=1 </span><br></pre></td></tr></table></figure><p>进入到 <code>hadoop-slave2: ~/Hadoop/kafka_2.13-2.8.0/config</code> 将 <strong>server.properties</strong> 更改以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">broker.id=2 </span><br></pre></td></tr></table></figure><br><h2 id="启动Kafka"><a href="#启动Kafka" class="headerlink" title="启动Kafka"></a>启动Kafka</h2><p>在各个机器上执行该命令，都应该能执行成功哦~ （不行的往下看 <strong>其他</strong> 部分）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> ~/Hadoop/kafka_2.13-2.8.0/bin</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./kafka-server-start.sh ../config/server.properties &amp;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p> 成功启动后，都应该能看到 <strong>Kafka</strong><br><img src="https://img-blog.csdnimg.cn/0bbfb8779427411585d88dc2913adb94.png" alt="在这里插入图片描述"></p></blockquote><br><h3 id="在-Master-上"><a href="#在-Master-上" class="headerlink" title="在 Master 上"></a>在 Master 上</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 创建一个topic</span><br><span class="line"><span class="meta">$</span><span class="bash"> ./kafka-topics.sh --create -zookeeper hadoop-master:2181 -replication-factor 1 -partitions 1 -topic <span class="built_in">test</span></span></span><br><span class="line"></span><br><span class="line">// 查看刚刚创建的topic</span><br><span class="line"><span class="meta">$</span><span class="bash"> ./kafka-topics.sh --list --zookeeper hadoop-master:2181</span></span><br><span class="line"></span><br><span class="line">// 开启生产者，发送消息</span><br><span class="line"><span class="meta">$</span><span class="bash"> ./kafka-console-producer.sh --broker-list hadoop-master:9092 --topic <span class="built_in">test</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="在-Slave-上"><a href="#在-Slave-上" class="headerlink" title="在 Slave 上"></a>在 Slave 上</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 开启消费者，接收消息</span><br><span class="line"><span class="meta">$</span><span class="bash"> ./kafka-console-producer.sh --broker-list hadoop-master:9092 --topic <span class="built_in">test</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>回到 <strong>Master</strong> 上，输入 ‘Hello World’ 见证历史吧！<br><img src="https://img-blog.csdnimg.cn/9da41fae01cf475f89027e7564a18463.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><br><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="启动时-zookeeper-报错"><a href="#启动时-zookeeper-报错" class="headerlink" title="启动时 zookeeper 报错"></a>启动时 zookeeper 报错</h2><p>出现了这一堆的报错时…(我是在slave上发现这个问题)<br><img src="https://img-blog.csdnimg.cn/511aaa9c898840a0a6a46e4a05a862db.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>是你Kafka运行的 zookeeper 版本不一样所导致的<br>首先看看最上面的打印的版本是什么<br><img src="https://img-blog.csdnimg.cn/0b90a5291f19484cb4d7c9fccf50ee97.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>再看看master上正常启动时的版本<br><img src="https://img-blog.csdnimg.cn/753d6d3829ae494f82a418c2806e46f6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="master正常启动"><br>再对比 <code>~/Hadoop/kafka_2.13-2.8.0/libs</code> 下 zookeeper 的 jar 包的版本<br>然后根据下面 <strong>path</strong> 把不能启动的机器下的 不同版本的 zookeeper的jar包 删掉即可<br>嗯…没错…就是这样…(我就是把它复制出来，匹配zookeeper一个个看…)<br><img src="https://img-blog.csdnimg.cn/b53ad982309a4235a00c9963b3915138.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="path"><br>我的话…在 <code>$HADOOP_HOME/share/hadoop/common/lib</code>下有一个<br>在 <code>$HADOOP_HOME/share/hadoop/yarn/lib</code>下也有一个<br>我的 <strong>slave</strong> 是把这两个删掉就可以正常启动了</p><br><h2 id="启动时-Cluster-ID-报错"><a href="#启动时-Cluster-ID-报错" class="headerlink" title="启动时 Cluster ID 报错"></a>启动时 Cluster ID 报错</h2><p><img src="https://img-blog.csdnimg.cn/a4c8ce4d86bb4227a905944549ab1a70.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="Cluster ID"><br>这个只需要打开 <code>$ /home/xld/test/kafka_2.13-2.8.0/config/server.properties</code> 查看 <strong>log.dirs</strong><br>将该路径下的文件夹删除，然后重启即可…<br>如：log.dirs=/tmp/kafka-logs     直接将 /tmp 目录下的 kafka-logs 这个文件夹整个直接删掉即可</p><br><h2 id="创建topic时失败"><a href="#创建topic时失败" class="headerlink" title="创建topic时失败"></a>创建topic时失败</h2><p>显示超时<br><img src="https://img-blog.csdnimg.cn/26a24b9a68d045eca59960105b00dfc5.png#pic_center" alt="显示超时"><br>很有可能是你 master 机的 zookeeper 还没启动哦~<br>把 zookeeper 启动后再试试就好了。</p><br><h2 id="其他骚话…"><a href="#其他骚话…" class="headerlink" title="其他骚话…"></a>其他骚话…</h2><p>他说的是2.8之后的版本去掉自带的zookeeper，但我这发现他还是依赖运行 kafka 下的 libs 下的 jar 包，就很迷…大概是我不会弄吧…</p><p>还有就是，我发现 slave 接收信息，不开启 kafka.server 也可以…只是会多出一个 ConsoleConsumer 的玩意…<br><img src="https://img-blog.csdnimg.cn/6fb1926d31fc42469c4e23973e9bb9ee.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>没搞明白…糊里糊涂，半桶水…</p><br><p><strong>参考文章：</strong><br><a href="https://www.cnblogs.com/silent2012/p/10045557.html">Kafka安装配置</a><br><a href="https://blog.csdn.net/u014039577/article/details/47731143">kafka的安装和配置</a></p><br><hr>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大型数据库 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型数据库（7）--- Storm安装与配置</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Storm%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Storm%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>虚拟机：VirtualBox-6.1.18<br>操作系统：Ubuntu16.04LTS<br>集群情况：</p><table><thead><tr><th align="center">主机名称</th><th align="center">hadoop版本</th><th align="center">ZooKeeper版本</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">hadoop-master</td><td align="center">2.7.3</td><td align="center">3.6.3</td><td align="center">192.168.56.1</td></tr><tr><td align="center">hadoop-slave1</td><td align="center">2.7.3</td><td align="center">3.6.3</td><td align="center">192.168.56.2</td></tr><tr><td align="center">hadoop-slave2</td><td align="center">2.7.3</td><td align="center">3.6.3</td><td align="center">192.168.56.3</td></tr></tbody></table><h2 id="本次安装的Storm"><a href="#本次安装的Storm" class="headerlink" title="本次安装的Storm"></a>本次安装的Storm</h2><p>Storm版本：2.3.6<br>下载地址：<a href="https://www.apache.org/dyn/closer.lua/storm/apache-storm-2.2.0/apache-storm-2.2.0.tar.gz">apache-storm-2.2.0.tar.gz</a><br>其他：<a href="https://storm.apache.org/">Storm官网</a>  、<a href="https://storm.apache.org/downloads.html">查看不同版本</a>、<a href="http://storm.apache.org/releases/2.2.0/Setting-up-a-Storm-cluster.html">官方文档</a></p><p>都准备就绪后，我们就接着往下开始安装吧！<br>不知道怎么准备的，我之前的文章 也许可以给你带来一些参考哦 - - - ☞ <a href="https://blog.csdn.net/li1055107552/article/details/114767752">搭建hadoop集群</a><br> <a href="https://blog.csdn.net/li1055107552/article/details/120386759">大型数据库（6）— ZooKeeper安装与配置</a>.</p><hr><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><ol><li>我的两个基础软件Hadoop、Java 分别是在/usr/hadoop 和 /usr/java下</li><li>其他的都安装在 ~/Hadoop 的文件夹下</li><li>Storm不仅需安装在<strong>hadoop-master</strong>下，还需部署在<strong>slave</strong>机上</li></ol><br><h2 id="安装并配置Storm"><a href="#安装并配置Storm" class="headerlink" title="安装并配置Storm"></a>安装并配置Storm</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/下载</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp apache-storm-2.2.0.tar.gz ~/Hadoop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -zxvf apache-storm-2.2.0.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mv apache-storm-2.2.0 storm-2.2.0</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> storm-2.2.0/conf</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="storm-yaml"><a href="#storm-yaml" class="headerlink" title="storm.yaml"></a>storm.yaml</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">将此处的部分改为：</span></span><br><span class="line"><span class="attr">storm.zookeeper.servers:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&quot;hadoop-master&quot;</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&quot;hadoop-slave1&quot;</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&quot;hadoop-slave2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">storm.local.dir:</span> <span class="string">&quot;/tmp/storm&quot;</span></span><br><span class="line"><span class="attr">nimbus.host:</span> <span class="string">&quot;hadoop-master&quot;</span></span><br><span class="line"><span class="attr">nimbus.seeds:</span> [<span class="string">&quot;hadoop-master&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">supervisor.slots.ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">6700</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">6701</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">6702</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">6703</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ui.port:</span> <span class="number">8888</span></span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">注意这里改为自己的master机名称，和slave机名称</span></span><br></pre></td></tr></table></figure><h4 id="本机测试"><a href="#本机测试" class="headerlink" title="本机测试"></a>本机测试</h4><p>此时，您可以在master主机上，稍微试试水…</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop/storm-2.2.0/bin</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./storm nimbus<span class="comment"># 后台托管 ./storm nimbus &gt;/dev/null 2&gt;&amp;1 &amp;</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./storm ui<span class="comment"># 后台托管 ./storm ui &gt;/dev/null 2&gt;&amp;1 &amp;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>输入 <code>$ jps</code> 将会看到<br><img src="https://img-blog.csdnimg.cn/6b69477247b54134b6a553b586a86572.png" alt="成功启动"><br>打开网页  <code>http://192.168.56.1:8888/</code> 可以看到<br><img src="https://img-blog.csdnimg.cn/9ccafd67df2e4e749b65a8619547a99c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="成功启动"></p></blockquote><p>这样，你的master机基本上就配置好了！<br>我们先将其停掉，继续往后配置！</p><br><h3 id="将Storm安装文件复制到Slave节点"><a href="#将Storm安装文件复制到Slave节点" class="headerlink" title="将Storm安装文件复制到Slave节点"></a>将Storm安装文件复制到Slave节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> scp -r storm-2.2.0/ hadoop-slave1:~/Hadoop/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> scp -r storm-2.2.0/ hadoop-slave2:~/Hadoop/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="启动Storm"><a href="#启动Storm" class="headerlink" title="启动Storm"></a>启动Storm</h3><p>// <strong>slave</strong> 单纯启动 <strong>supervisor</strong> 即可，UI 在 <strong>hadoop-master</strong> 查看</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// 首先是保证 各个机器 都开启了 zookeeper</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop/zookeeper-3.6.3/bin</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./zkServer.sh start</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// hadoop-master</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop/storm-2.2.0/bin</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./storm nimbus<span class="comment"># storm nimbus &gt;/dev/null 2&gt;&amp;1 &amp;</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./storm ui<span class="comment"># storm ui &gt;/dev/null 2&gt;&amp;1 &amp;</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./storm supervisor<span class="comment"># storm supervisor &gt;/dev/null 2&gt;&amp;1 &amp;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// hadoop-slave1、hadoop-slave2</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop/storm-2.2.0/bin</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./storm supervisor<span class="comment"># storm supervisor &gt;/dev/null 2&gt;&amp;1 &amp;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><strong>hadoop-master</strong> 成功启动<br><img src="https://img-blog.csdnimg.cn/805ba04dd29f47369be55f2afcb9d3b7.png" alt="成功启动"><br>浏览器打开 <code>http://192.168.56.1:16010</code> 往下滑 可以看到以下页面<br><img src="https://img-blog.csdnimg.cn/16c2c5a15a9241fa85df854cbd8ec4ec.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="成功启动"></p></blockquote><blockquote><p><strong>hadoop-slave1</strong>、<strong>hadoop-slave2</strong> 启动成功<br><img src="https://img-blog.csdnimg.cn/6d4ce13613644f2c87c821cbefebabc9.png" alt="启动成功"></p></blockquote><br><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>关于怎么结束掉上面几个的运行，好像没法像什么好的方法<br>我自己实验通常就暴力点 <code>$ kill -9 pid</code> 简单粗暴！</p><br><p><strong>参考文章：</strong><br><a href="https://www.w3cschool.cn/apache_storm/apache_storm_installation.html">W3Cschool Apache Storm安装</a><br><a href="https://www.cnblogs.com/panfeng412/archive/2012/11/30/how-to-install-and-deploy-storm-cluster.html">Storm集群安装部署步骤【详细版】</a></p><br><hr>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大型数据库 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Storm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型数据库（6）--- ZooKeeper安装与配置</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/ZooKeeper%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/ZooKeeper%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>虚拟机：VirtualBox-6.1.18<br>操作系统：Ubuntu16.04LTS<br>集群情况：</p><table><thead><tr><th align="center">主机名称</th><th align="center">hadoop版本</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">hadoop-master</td><td align="center">2.7.3</td><td align="center">192.168.56.1</td></tr><tr><td align="center">hadoop-slave1</td><td align="center">2.7.3</td><td align="center">192.168.56.2</td></tr><tr><td align="center">hadoop-slave2</td><td align="center">2.7.3</td><td align="center">192.168.56.3</td></tr></tbody></table><h2 id="本次安装的ZooKeeper"><a href="#本次安装的ZooKeeper" class="headerlink" title="本次安装的ZooKeeper"></a>本次安装的ZooKeeper</h2><p>ZooKeeper版本：3.6.3<br>下载地址：<a href="https://dlcdn.apache.org/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gz">apache-zookeeper-3.6.3-bin.tar.gz</a><br>其他：<a href="http://zookeeper.apache.org/">ZooKeeper官网</a>  、<a href="http://zookeeper.apache.org/releases.html#download">查看不同版本</a>、<a href="http://zookeeper.apache.org/doc/r3.6.3/zookeeperStarted.html">官方文档</a></p><p>都准备就绪后，我们就接着往下开始安装吧！<br>不知道怎么准备的，我之前的文章 也许可以给你带来一些参考哦 - - - ☞ <a href="https://blog.csdn.net/li1055107552/article/details/114767752">搭建hadoop集群</a></p><p>其实还是挺简单的，自己看文档就好啦~</p><hr><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><ol><li>我的两个基础软件Hadoop、Java 分别是在/usr/hadoop 和 /usr/java下</li><li>其他的都安装在 ~/Hadoop 的文件夹下</li><li>ZooKeeper 不仅需安装在 <strong>hadoop-master</strong> 下，还需部署在 <strong>slave</strong> 机上<br></li></ol><h2 id="安装并配置ZooKeeper"><a href="#安装并配置ZooKeeper" class="headerlink" title="安装并配置ZooKeeper"></a>安装并配置ZooKeeper</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/下载</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp apache-zookeeper-3.6.3-bin.tar.gz  ~/Hadoop/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -zxvf apache-zookeeper-3.6.3-bin.tar.gz</span> </span><br><span class="line"><span class="meta">$</span><span class="bash"> mv apache-zookeeper-3.6.3 zookeeper-3.6.3</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="zoo-cfg"><a href="#zoo-cfg" class="headerlink" title="zoo.cfg"></a>zoo.cfg</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 复制一份模版</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> zookeeper-3.6.3/conf</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp zoo_sample.cfg zoo.cfg</span></span><br><span class="line"></span><br><span class="line">// 修改其中的 dataDir 路径</span><br><span class="line">dataDir=/home/xld/Hadoop/zookeeper-3.6.3/tmp</span><br><span class="line"></span><br><span class="line">// 在文件最后添加以下内容，保存退出</span><br><span class="line">server.1=hadoop-master:2888:3888</span><br><span class="line">server.2=hadoop-slave1:2888:3888</span><br><span class="line">server.3=hadoop-slave2:2888:3888</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="myid"><a href="#myid" class="headerlink" title="myid"></a>myid</h4><p>根据上面设置的 <strong>dataDir</strong> 路径，创建 <strong>myid</strong> 文件<br><code>不建议使用默认的 dataDir=/tmp/zookeeper</code>，不然每次重启之后都要重新创建myid</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 创建tmp目录，并编辑myid</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop/zookeeper-3.6.3</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mkdir tmp</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> tmp</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> gedit myid</span></span><br><span class="line"></span><br><span class="line">// 在 myid 中添加数字&#x27;1&#x27;，保存并退出</span><br><span class="line">1</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="将ZooKeeper安装文件复制到Slave节点"><a href="#将ZooKeeper安装文件复制到Slave节点" class="headerlink" title="将ZooKeeper安装文件复制到Slave节点"></a>将ZooKeeper安装文件复制到Slave节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> scp -r zookeeper-3.6.3 hadoop-slave1:~/Hadoop/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> scp -r zookeeper-3.6.3 hadoop-slave2:~/Hadoop/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="更改-slave-机上的-myid-值"><a href="#更改-slave-机上的-myid-值" class="headerlink" title="更改 slave 机上的 myid 值"></a>更改 slave 机上的 myid 值</h4><p>进入到 <code>hadoop-slave1:Hadoop/zookeeper-3.6.3/tmp</code> 将 <strong>myid</strong> 文件里的值改为2<br>进入到 <code>hadoop-slave2:Hadoop/zookeeper-3.6.3/tmp</code> 将 <strong>myid</strong> 文件里的值改为3</p><br><h3 id="启动ZooKeeper"><a href="#启动ZooKeeper" class="headerlink" title="启动ZooKeeper"></a>启动ZooKeeper</h3><p><strong>Zookeeper</strong> 需要各自启动，每台机都要</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 先进入到master里</span><br><span class="line">// 这里有个说明:./zkServer.sh [--config &lt;conf-dir&gt;] &#123;start|start-foreground|stop|version|restart|status|print-cmd&#125;</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop/zookeeper-3.6.3/bin</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./zkServer.sh start-foreground<span class="comment"># start也可以，start-foreground 可以查看打印的日志</span></span></span><br><span class="line"></span><br><span class="line">// 进入到其他slave里</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop/zookeeper-3.6.3/bin</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./zkServer.sh start<span class="comment"># 直接启动就好，master机同理</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>master启动成功，可以看到那个大大的标志 <strong>ZooKeeper</strong><br><img src="https://img-blog.csdnimg.cn/ab917ec2b35d40b5bd36ab65c5d1e690.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="master启动成功"></p></blockquote><blockquote><p>输入 <code>$ jps</code> 可以看到 <strong>master</strong> 和 <strong>slave</strong> 都能看到 <strong><code>QuorumPeerMain</code></strong><br><img src="https://img-blog.csdnimg.cn/32e4de5f6f77435cbed0558894267441.png" alt="QuorumPeerMain"></p></blockquote><p>在 <strong>master</strong> 上，通过<code>start-foreground</code>看到 <strong>‘拒绝连接’</strong> ，是因为你的 <strong>Slave</strong> 还没开启哦~</p><br><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>通过<code>$ jps</code> 如果发现  <strong>QuorumPeerMain</strong> 开启之后 闪退<br>或是(启动/关闭)失败<br>很有可能是没有 <strong>myid</strong> 这个文件，或是里面的 id 数值不对哦！</p><br><hr>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大型数据库 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> Hadoop </tag>
            
            <tag> ZooKeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型数据库（5）--- Spark安装与配置</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Spark%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Spark%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>虚拟机：VirtualBox-6.1.18<br>操作系统：Ubuntu16.04LTS<br>集群情况：</p><table><thead><tr><th align="center">主机名称</th><th align="center">hadoop版本</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">hadoop-master</td><td align="center">2.7.3</td><td align="center">192.168.56.1</td></tr><tr><td align="center">hadoop-slave1</td><td align="center">2.7.3</td><td align="center">192.168.56.2</td></tr><tr><td align="center">hadoop-slave2</td><td align="center">2.7.3</td><td align="center">192.168.56.3</td></tr></tbody></table><h2 id="本次安装的Spark"><a href="#本次安装的Spark" class="headerlink" title="本次安装的Spark"></a>本次安装的Spark</h2><p>Spark版本：2.3.6<br>下载地址：<a href="https://www.apache.org/dyn/closer.lua/spark/spark-3.1.2/spark-3.1.2-bin-hadoop2.7.tgz">spark-3.1.2-bin-hadoop2.7.tgz</a><br>其他：<a href="https://spark.apache.org/">Spark官网</a>  、<a href="https://spark.apache.org/downloads.html">查看不同版本</a>、<a href="https://spark.apache.org/docs/3.1.2/">Spark3.1.2 官方文档</a></p><p>都准备就绪后，我们就接着往下开始安装吧！<br>不知道怎么准备的，我之前的文章 也许可以给你带来一些参考哦 - - - ☞ <a href="https://blog.csdn.net/li1055107552/article/details/114767752">搭建hadoop集群</a></p><hr><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><ol><li>我的两个基础软件Hadoop、Java 分别是在/usr/hadoop 和 /usr/java下</li><li>其他的都安装在 ~/Hadoop 的文件夹下</li><li>Spark仅需安装在<strong>hadoop-master</strong>下哦<br></li></ol><h2 id="安装并配置Spark"><a href="#安装并配置Spark" class="headerlink" title="安装并配置Spark"></a>安装并配置Spark</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/下载</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp spark-3.1.2-bin-hadoop2.7.tgz ~/Hadoop/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -zxvf spark-3.1.2-bin-hadoop2.7.tgz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mv spark-3.1.2-bin-hadoop2.7 spark-3.1.2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="slaves"><a href="#slaves" class="headerlink" title="slaves"></a>slaves</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 创建一个新的文件&quot;slaves&quot;</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> spark-3.1.2/conf/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> gedit slaves</span></span><br><span class="line"></span><br><span class="line">// 添加以下内容，保存退出</span><br><span class="line">hadoop-master</span><br><span class="line">hadoop-slave1</span><br><span class="line">hadoop-slave2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="spark-defaults-conf"><a href="#spark-defaults-conf" class="headerlink" title="spark-defaults.conf"></a>spark-defaults.conf</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 复制一份 spark-defaults.conf 并进行编辑</span><br><span class="line"><span class="meta">$</span><span class="bash"> cp spark-defaults.conf.template spark-defaults.conf</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> gedit spark-defaults.conf</span></span><br><span class="line"></span><br><span class="line">// 去掉底部的注释部分，改为以下内容</span><br><span class="line">spark.master                     spark://hadoop-master:7077</span><br><span class="line">spark.eventLog.enabled           true</span><br><span class="line">spark.eventLog.dir               dfs://hadoop-master:8020/spark-logs</span><br><span class="line">spark.history.fs.loDirectory     hdfs://hadoop-master:8020/spark-logs</span><br><span class="line">spark.serializer                 org.apache.spark.serializer.KryoSerializer</span><br><span class="line">spark.driver.memory              5g</span><br><span class="line">spark.executor.extraJavaOptions  -XX:+PrintGCDetails -Dkey=value -Dnumbers=&quot;one two three&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="spark-env-sh"><a href="#spark-env-sh" class="headerlink" title="spark-env.sh"></a>spark-env.sh</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// 复制一份 spark-env.sh 并进行编辑</span><br><span class="line"><span class="meta">$</span><span class="bash"> cp spark-env.sh.template spark-env.sh</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> gedit spark-env.sh</span></span><br><span class="line"></span><br><span class="line">// 在最后添加以下内容</span><br><span class="line">export JAVA_HOME=/usr/java</span><br><span class="line">export HADOOP_CONF_DIR=/usr/hadoop/etc/hadoop</span><br><span class="line">export SPARK_MASTER_IP=192.168.56.1</span><br><span class="line">export SPARK_MASTER_PORT=7077</span><br><span class="line">export SPARK_WORKER_MEMORY=1G</span><br><span class="line">export SPARK_WORKER_CORES=1</span><br><span class="line">export SPARK_EXECUTOR_MEMORY=1G</span><br><span class="line">export SPARK_EXECUTOR_CORES=1</span><br><span class="line">export SPARK_WORKER_TNSTANCES=1</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 我是添加在 /etc/profile</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo gedit /etc/profile</span></span><br><span class="line"></span><br><span class="line">// 然后在里面加入下面两句</span><br><span class="line"></span><br><span class="line">export SPARK_HOME=/home/xld/Hadoop/spark-3.1.2</span><br><span class="line">export PATH=$PATH:$SPARK_HOME/bin</span><br><span class="line"></span><br><span class="line">// 保存并退出，然后使其生效</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> .bash_profile</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="启动Spark"><a href="#启动Spark" class="headerlink" title="启动Spark"></a>启动Spark</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop/spark-3.1.2/sbin/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./mahout</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>成功启动，能看见下面一堆相关信息<br>输入 <code>$ jps</code> 可以看到 <strong>Worker</strong> 和 <strong>Master</strong><br><img src="https://img-blog.csdnimg.cn/291be9e39b1646c5bcff7d215084560e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="成功启动"></p></blockquote><p>用浏览器打开 <code>http://192.168.56.1:8080</code> 可以看到以下界面：<br><img src="https://img-blog.csdnimg.cn/40c5c9b01e3845e8b98860dff3a695b6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="浏览器打开"></p><br><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>最后，自己可以跑跑 <a href="https://spark.apache.org/docs/3.1.2/#running-the-examples-and-shell">官方文档 Running the Examples and Shell</a>  中的一些例子试试。</p><p>参考文章：<a href="https://blog.51cto.com/u_15127571/2888018">Spark-3.1.2搭建</a></p><br><hr>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大型数据库 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Spark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型数据库（4）--- Sqoop安装与配置</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Sqoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Sqoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>虚拟机：VirtualBox-6.1.18<br>操作系统：Ubuntu16.04LTS<br>Hadoop：2.7.3<br>MySQL：5.7.33-0ubuntu0.16.04.1 (Ubuntu)</p><h2 id="本次安装的Sqoop"><a href="#本次安装的Sqoop" class="headerlink" title="本次安装的Sqoop"></a>本次安装的Sqoop</h2><p>Sqoop版本：1.99.7<br>官方文档：<a href="http://sqoop.apache.org/docs/1.99.7/admin/Installation.html">sqoop-docs/1.99.7</a><br>下载地址：<a href="http://archive.apache.org/dist/sqoop/1.99.7/sqoop-1.99.7-bin-hadoop200.tar.gz">sqoop-1.99.7-bin-hadoop200.tar.gz</a><br>其他：<a href="http://sqoop.apache.org/">Sqoop官网</a>  、<a href="http://archive.apache.org/dist/sqoop/">查看不同版本</a>.</p><p>都准备就绪后，我们就接着往下开始安装吧！<br>不知道怎么准备的，我之前的文章 也许可以给你带来一些参考哦 - - - ☞ <a href="https://blog.csdn.net/li1055107552/article/details/114767752">传送门</a><br> <a href="https://blog.csdn.net/li1055107552/article/details/120359599">大型数据库（1）— Hive安装与配置</a>.</p><hr><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><ol><li>我的两个基础软件Hadoop、Java 分别是在/usr/hadoop 和 /usr/java下</li><li>其他的都安装在 ~/Hadoop 的文件夹下</li><li>Sqoop仅需安装在<strong>hadoop-master</strong>下哦<br></li></ol><h2 id="配置MySQL"><a href="#配置MySQL" class="headerlink" title="配置MySQL"></a>配置MySQL</h2><p>当前是root用户登录mysql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> database if <span class="keyword">exists</span> sqoop;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> database sqoop;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SET</span> <span class="keyword">GLOBAL</span> sql_mode <span class="operator">=</span> ANSI_QUOTES;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>再将连接器（mysql-connector-java-5.1.27-bin.jar）CV到 <code>$SQOOP_HOME/server/lib</code> 下</p><br><h2 id="安装并配置Sqoop"><a href="#安装并配置Sqoop" class="headerlink" title="安装并配置Sqoop"></a>安装并配置Sqoop</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/下载</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp sqoop-1.99.7-bin-hadoop200.tar.gz ~/Hadoop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -zxvf sqoop-1.99.7-bin-hadoop200.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mv sqoop-1.99.7-bin-hadoop200 sqoop-1.99.7</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> sqoop-1.99.7/conf/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="sqoop-properties"><a href="#sqoop-properties" class="headerlink" title="sqoop.properties"></a>sqoop.properties</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">// 将此处的JDBC改为mysql的</span><br><span class="line"><span class="meta">#</span><span class="bash"> JDBC repository provider configuration</span></span><br><span class="line">org.apache.sqoop.repository.jdbc.handler=org.apache.sqoop.repository.mysql.MySqlRepositoryHandler</span><br><span class="line">org.apache.sqoop.repository.jdbc.transaction.isolation=READ_COMMITTED</span><br><span class="line">org.apache.sqoop.repository.jdbc.maximum.connections=10</span><br><span class="line">org.apache.sqoop.repository.jdbc.url=jdbc:mysql://localhost:3306/sqoop</span><br><span class="line">org.apache.sqoop.repository.jdbc.driver=com.mysql.jdbc.Driver</span><br><span class="line">org.apache.sqoop.repository.jdbc.user=hadoop</span><br><span class="line">org.apache.sqoop.repository.jdbc.password=hadoop</span><br><span class="line"></span><br><span class="line">// 将此处的路径改为 自己的Hadoop的配置文件的路径</span><br><span class="line"><span class="meta">#</span><span class="bash"> Hadoop configuration directory</span></span><br><span class="line">org.apache.sqoop.submission.engine.mapreduce.configuration.directory=/usr/hadoop/etc/hadoop</span><br><span class="line"></span><br><span class="line">// 去掉安全部分的注释</span><br><span class="line"><span class="meta">#</span><span class="bash"> Authentication configuration</span></span><br><span class="line">org.apache.sqoop.security.authentication.type=SIMPLE</span><br><span class="line">org.apache.sqoop.security.authentication.handler=org.apache.sqoop.security.authentication.SimpleAuthenticationHandler</span><br><span class="line">org.apache.sqoop.security.authentication.anonymous=true</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="core-site-xml"><a href="#core-site-xml" class="headerlink" title="core-site.xml"></a>core-site.xml</h4><p>因为是sqoop2，所以我们还需要配置<code>$HADOOP_HOME/etc/hadoop</code>下的 <strong>core-site.xml</strong> 文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 在该文件中增加以下两个属性</span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.sqoop2.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.sqoop2.groups<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="container-executor-cfg"><a href="#container-executor-cfg" class="headerlink" title="container-executor.cfg"></a>container-executor.cfg</h4><p>添加能运行sqoop2服务器的用户<br>编辑<code>$HADOOP_HOME/etc/hadoop</code>下的 <strong>container-executor.cfg</strong> 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">allowed.system.users=xld// 这里&#x27;xld&#x27;改为自己登陆 Ubuntu 时的用户名</span><br></pre></td></tr></table></figure><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 这里直接是 /etc/profile ，当然你也可以加到 .bash_profile 下也行</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo gedit .bash_profile</span></span><br><span class="line"></span><br><span class="line">// 然后添加以下内容：</span><br><span class="line">export SQOOP_HOME=/home/xld/Hadoop/sqoop-1.99.7</span><br><span class="line">export PATH=$SQOOP_HOME/bin:$PATH</span><br><span class="line">export CATALINA_HOME=$SQOOP_HOME/server</span><br><span class="line">export SQOOP_SERVER_EXTRA_LIB=$SQOOP_HOME/server/lib</span><br><span class="line">export LOGDIR=$SQOOP_HOME/logs</span><br><span class="line"></span><br><span class="line">// 保存并退出，然后使其生效</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> .bash_profile</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="启动Sqoop"><a href="#启动Sqoop" class="headerlink" title="启动Sqoop"></a>启动Sqoop</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 启用工具进行验证</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop/sqoop-1.99.7/bin</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./sqoop2-tool verify</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>验证成功，可以看到下面有successful!<br><img src="https://img-blog.csdnimg.cn/e685e399a1e84f27a9cc6692f9259b6c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="验证成功"></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 验证成功后，可以开启服务器了</span><br><span class="line"><span class="meta">$</span><span class="bash"> ./sqoop2-server start</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>启动成功，可以看到 <strong>Sqoop2 server started.</strong><br>输入 <code>$ jps</code> 可以看到 <strong>SqoopJettyServer</strong>  <br><br><img src="https://img-blog.csdnimg.cn/6abc043350b348a48d5c496fd6cd354f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="启动成功"></p></blockquote><br><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p><strong>参考文章：</strong></p><ol><li><p><a href="https://blog.csdn.net/qq_36857730/article/details/85802920">sqoop1.99.7安装、使用及部分问题</a></p></li><li><p><a href="https://blog.csdn.net/miuiV5/article/details/83154370">sqoop2 初始化时 sql语法错误</a></p></li></ol><br><hr>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大型数据库 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Sqoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型数据库（3）--- Mahout安装与配置</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Mahout%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Mahout%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>虚拟机：VirtualBox-6.1.18<br>操作系统：Ubuntu16.04LTS<br>集群情况：</p><table><thead><tr><th align="center">主机名称</th><th align="center">hadoop版本</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">hadoop-master</td><td align="center">2.7.3</td><td align="center">192.168.56.1</td></tr><tr><td align="center">hadoop-slave1</td><td align="center">2.7.3</td><td align="center">192.168.56.2</td></tr><tr><td align="center">hadoop-slave2</td><td align="center">2.7.3</td><td align="center">192.168.56.3</td></tr></tbody></table><h2 id="本次安装的Mahout"><a href="#本次安装的Mahout" class="headerlink" title="本次安装的Mahout"></a>本次安装的Mahout</h2><p>Mahout版本：2.3.6<br>下载地址：<a href="http://archive.apache.org/dist/mahout/14.1/apache-mahout-distribution-14.1.tar.gz">apache-mahout-distribution-14.1.tar.gz</a><br>其他：<a href="http://mahout.apache.org/">Mahout官网</a>  、<a href="http://archive.apache.org/dist/mahout/">查看不同版本</a>.</p><p>都准备就绪后，我们就接着往下开始安装吧！<br>不知道怎么准备的，我之前的文章 也许可以给你带来一些参考哦 - - - ☞ <a href="https://blog.csdn.net/li1055107552/article/details/114767752">传送门</a><br> <a href="https://blog.csdn.net/li1055107552/article/details/120372265">大型数据库（2）— HBase安装与配置</a>.</p><hr><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><ol><li>我的两个基础软件Hadoop、Java 分别是在/usr/hadoop 和 /usr/java下</li><li>其他的都安装在 ~/Hadoop 的文件夹下</li><li>Mahout仅需安装在<strong>hadoop-master</strong>下哦<br></li></ol><h2 id="安装并配置Mahout"><a href="#安装并配置Mahout" class="headerlink" title="安装并配置Mahout"></a>安装并配置Mahout</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/下载</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp apache-mahout-distribution-14.1.tar.gz ~/Hadoop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mkdir mahout-14.1</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -zxvf hbase-2.3.6-bin.tar.gz -C ./mahout-14.1</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> mahout-14.1/bin</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="mahout"><a href="#mahout" class="headerlink" title="mahout"></a>mahout</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// 根据它的说明，我们在开头的注释下面添加以下内容：</span><br><span class="line"></span><br><span class="line">// 你的java所在路径</span><br><span class="line">MAHOUT_JAVA_HOME=/usr/java</span><br><span class="line">// 你的hadoop配置文件所在路径</span><br><span class="line">HADOOP_CONF_DIR=/usr/hadoop/etc/hadoop</span><br><span class="line">// 你的mahout配置文件所在路径</span><br><span class="line">MAHOUT_CONF_DIR=/home/xld/Hadoop/mahout-14.1/conf</span><br><span class="line"><span class="meta"></span></span><br><span class="line"><span class="meta">#</span><span class="bash">   MAHOUT_LOCAL       <span class="built_in">set</span> to anything other than an empty string to force</span></span><br><span class="line"><span class="meta">#</span><span class="bash">                      mahout to run locally even <span class="keyword">if</span></span></span><br><span class="line"><span class="meta">#</span><span class="bash">                      HADOOP_CONF_DIR and HADOOP_HOME are <span class="built_in">set</span></span></span><br><span class="line">// 设置为空，不为空则为本地模式</span><br><span class="line">MAHOUT_LOCAL=&quot;&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="准备example"><a href="#准备example" class="headerlink" title="准备example"></a>准备example</h4><p>14.1的版本好像没有自带的example，所以将待会所需的例子拖到<strong>mahout</strong>的根目录下就好了<br>本地下载：<br><a href="https://www.csdn.net/">mahout-examples-0.9.jar</a>.<br><a href="https://www.csdn.net/">mahout-examples-0.9-job.jar</a>.</p><p>网上还有其他例子，可以通过mvn构建<br>但在 $MAHOUT_HOME/example 下缺少 pom.xml 文件<br>官方的 pom.xml ：<a href="https://downloads.apache.org/mahout/14.1/apache-mahout-distribution-14.1.pom">apache-mahout-distribution-14.1.pom</a><br>需要的自己CV就好了</p><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 这里直接是 .bash_profile，当然你也可以加到 /etc/profile 下也行</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo gedit .bash_profile</span></span><br><span class="line"></span><br><span class="line">// 然后在里面加入下面两句</span><br><span class="line"></span><br><span class="line">export MAHOUT_HOME=/home/xld/Hadoop/mahout-14.1</span><br><span class="line">export PATH=$MAHOUT_HOME/bin:$PATH</span><br><span class="line">export CLASSPATH=$MAHOUT_HOME/lib</span><br><span class="line"></span><br><span class="line">// 保存并退出，然后使其生效</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> .bash_profile</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="启动mahout"><a href="#启动mahout" class="headerlink" title="启动mahout"></a>启动mahout</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop/mahout-14.1/bin</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./mahout</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>成功启动，能看见下面一堆相关信息<br><img src="https://img-blog.csdnimg.cn/5c614557fbcd43df8c47615ee4e33294.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p></blockquote><br><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>如果想要运行其他 jar包 的话，可以使用<code>$ hadoop jar xxx</code> 来运行哦</p><br><hr>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大型数据库 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Mahout </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型数据库（2）--- HBase安装与配置</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/HBase%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/HBase%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>虚拟机：VirtualBox-6.1.18<br>操作系统：Ubuntu16.04LTS<br>集群情况：</p><table><thead><tr><th align="center">主机名称</th><th align="center">hadoop版本</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">hadoop-master</td><td align="center">2.7.3</td><td align="center">192.168.56.1</td></tr><tr><td align="center">hadoop-slave1</td><td align="center">2.7.3</td><td align="center">192.168.56.2</td></tr><tr><td align="center">hadoop-slave2</td><td align="center">2.7.3</td><td align="center">192.168.56.3</td></tr></tbody></table><h2 id="本次安装的HBase"><a href="#本次安装的HBase" class="headerlink" title="本次安装的HBase"></a>本次安装的HBase</h2><p>HBase版本：2.3.6<br>下载地址：<a href="http://archive.apache.org/dist/hbase/stable/hbase-2.3.6-bin.tar.gz">hbase-2.3.6-bin.tar.gz</a><br>其他：<a href="http://hbase.apache.org/">HBase官网</a>  、<a href="http://archive.apache.org/dist/hbase/stable/">查看不同版本</a>.</p><p>都准备就绪后，我们就接着往下开始安装吧！<br>不知道怎么准备的，我之前的文章 也许可以给你带来一些参考哦 - - - ☞ <a href="https://blog.csdn.net/li1055107552/article/details/114767752">传送门</a><br> <a href="https://blog.csdn.net/li1055107552/article/details/120359599">大型数据库（1）— Hive安装与配置</a>.</p><hr><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><ol><li>我的两个基础软件Hadoop、Java 分别是在/usr/hadoop 和 /usr/java下</li><li>其他的都安装在 ~/Hadoop 的文件夹下</li><li>本次没有Zookeeper，使用的是自带的zk</li><li>HBase不仅需安装在<strong>hadoop-master</strong>下，还需部署在<strong>slave</strong>机上</li></ol><br><h2 id="安装并配置HBase"><a href="#安装并配置HBase" class="headerlink" title="安装并配置HBase"></a>安装并配置HBase</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/下载</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp hbase-2.3.6-bin.tar.gz ~/Hadoop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -zxvf hbase-2.3.6-bin.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> hbase-2.3.6/conf</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="hbase-env-sh"><a href="#hbase-env-sh" class="headerlink" title="hbase-env.sh"></a>hbase-env.sh</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// 将下面的注释去掉，改为：</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">export</span> JAVA_HOME=/usr/java/jdk1.8.0/</span></span><br><span class="line">export JAVA_HOME=/usr/java// 自己Java所在位置</span><br><span class="line"></span><br><span class="line">// 将下面的注释去掉，改为：</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">export</span> HBASE_CLASSPATH=</span></span><br><span class="line">export HBASE_CLASSPATH=/usr/hadoop// 自己hadoop所在位置</span><br><span class="line"></span><br><span class="line">// 这里是后面装的zookeeper,可以不写</span><br><span class="line">export HBASE_CLASSPATH=/home/xld/Hadoop/zookeeper-3.6.3/conf</span><br><span class="line"></span><br><span class="line">// 将下面的注释去掉，改为：</span><br><span class="line"><span class="meta">#</span><span class="bash"> <span class="built_in">export</span> HBASE_OPTS</span></span><br><span class="line">export HBASE_OPTS=&quot;-XX:+UseConcMarkSweepGC&quot;</span><br><span class="line"></span><br><span class="line">// 将下面的注释去掉即可，若使用自己的zookeeper，则改为false</span><br><span class="line">export HBASE_MANAGES_ZK=true</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="hbase-site-xml"><a href="#hbase-site-xml" class="headerlink" title="hbase-site.xml"></a>hbase-site.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">// 将以下内容</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.cluster.distributed<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>./tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.unsafe.stream.capability.enforce<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// 改为这些内容</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.cluster.distributed<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.rootdir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://hadoop-master:9000/hbase<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.zookeeper.quorum<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop-slave1,hadoop-slave2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// 注意这里改为自己的master机名称，和slave机名称</span><br></pre></td></tr></table></figure><h4 id="regionservers"><a href="#regionservers" class="headerlink" title="regionservers"></a>regionservers</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 将里面的localhost，改为自己slave机的名称即可</span><br><span class="line">hadoop-slave1</span><br><span class="line">hadoop-slave2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 这里直接是 .bash_profile，当然你也可以加到 /etc/profile 下也行</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo gedit .bash_profile</span></span><br><span class="line"></span><br><span class="line">// 然后在里面加入下面两句</span><br><span class="line"></span><br><span class="line">export HBASE_HOME=/home/xld/Hadoop/hbase-2.3.6</span><br><span class="line">export HADOOP_CLASSPATH=$HBASE_HOME/lib/*</span><br><span class="line">export PATH=$HBASE_HOME/bin:$PATH</span><br><span class="line"></span><br><span class="line">// 保存并退出，然后使其生效</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> .bash_profile</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="将HBase安装文件复制到Slave节点"><a href="#将HBase安装文件复制到Slave节点" class="headerlink" title="将HBase安装文件复制到Slave节点"></a>将HBase安装文件复制到Slave节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> Hadoop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> scp -r hbase-2.3.6 hadoop-slave1:~/Hadoop/</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> scp -r hbase-2.3.6 hadoop-slave2:~/Hadoop/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="启动HBase"><a href="#启动HBase" class="headerlink" title="启动HBase"></a>启动HBase</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop/hbase-2.3.6/bin</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> ./start-hbase.sh</span></span><br><span class="line"></span><br><span class="line">// 可以使用 $ jps 查看</span><br><span class="line">// hadoop-master：HMaster</span><br><span class="line">// hadoop-slave1、hadoop-slave2 ：HRegionServer、HQuorumPeer</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>成功启动<br><img src="https://img-blog.csdnimg.cn/37d8d16502004273bd5c477156fe8d8b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="成功启动"><br><img src="https://img-blog.csdnimg.cn/805ba04dd29f47369be55f2afcb9d3b7.png#pic_center" alt="成功启动"></p></blockquote><p>浏览器打开 <code>http://192.168.56.1:16010</code> 可以看到以下页面<br><img src="https://img-blog.csdnimg.cn/cd6f34e88e8242c7bfc08169fb7df61d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16" alt="成功启动"></p><br><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="若需使用自己安装的zookeeper"><a href="#若需使用自己安装的zookeeper" class="headerlink" title="若需使用自己安装的zookeeper"></a>若需使用自己安装的zookeeper</h2><p> 需要更改 hbase-env.sh 以下配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 添加</span><br><span class="line">export HBASE_CLASSPATH=/home/xld/Hadoop/zookeeper-3.6.3/conf</span><br><span class="line"></span><br><span class="line">// true 改为 false</span><br><span class="line">export HBASE_MANAGES_ZK=false</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动时，需要先将每一台机器的zookeeper都启动后，再启动hbase</p><br><hr>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大型数据库 </tag>
            
            <tag> HBase </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型数据库（1）--- Hive安装与配置</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Hive%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Hive%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>虚拟机：VirtualBox-6.1.18<br>操作系统：Ubuntu16.04LTS</p><h2 id="基础软件"><a href="#基础软件" class="headerlink" title="基础软件"></a>基础软件</h2><p>JDK：jdk-8u281-linux-x64.tar.gz<br>hadoop：hadoop2.7.3<br>MySQL：Server version: 5.7.33-0ubuntu0.16.04.1 (Ubuntu)</p><p>集群情况：</p><table><thead><tr><th align="center">主机名称</th><th align="center">hadoop版本</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">hadoop-master</td><td align="center">2.7.3</td><td align="center">192.168.56.1</td></tr><tr><td align="center">hadoop-slave1</td><td align="center">2.7.3</td><td align="center">192.168.56.2</td></tr><tr><td align="center">hadoop-slave2</td><td align="center">2.7.3</td><td align="center">192.168.56.3</td></tr></tbody></table><h2 id="本次安装的Hive"><a href="#本次安装的Hive" class="headerlink" title="本次安装的Hive"></a>本次安装的Hive</h2><p>Hive版本：3.1.2<br>下载地址：<a href="https://apache.website-solution.net/hive/hive-3.1.2/apache-hive-3.1.2-bin.tar.gz">apache-hive-3.1.2-bin.tar.gz</a>.<br>其他：<a href="https://hive.apache.org/">Hive官网</a>  、<a href="https://apache.website-solution.net/hive/">查看不同版本</a>.</p><p>都准备就绪后，我们就接着往下开始安装吧！<br>不知道怎么准备的，我之前的文章 也许可以给你带来一些参考哦 - - - ☞ <a href="https://blog.csdn.net/li1055107552/article/details/114767752">传送门</a></p><hr><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><p>我的两个基础软件Hadoop、Java 分别是在/usr/hadoop 和 /usr/java下<br>其他的都安装在 ~/Hadoop 的文件夹下<br>Hive的安装仅在<strong>hadoop-master</strong>下安装即可，无需在slave机上部署</p><br><h2 id="配置MySQL"><a href="#配置MySQL" class="headerlink" title="配置MySQL"></a>配置MySQL</h2><p>没安装的直接用<code>apt install </code>安装即可，一搜一大把<br>当前是root用户登录mysql</p><p>1.创建hadoop用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> hadoop@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;hadoop&#x27;</span>;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> hadoop@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;hadoop&#x27;</span>;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> hadoop@<span class="string">&#x27;hadoop-master&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;hadoop&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> mysql<span class="operator">&gt;</span> <span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;hadoop&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;hadoop&#x27;</span> <span class="keyword">with</span> <span class="keyword">grant</span> option;</span><br></pre></td></tr></table></figure><p>2.刷新权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>3.创建Hive数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database hive</span><br></pre></td></tr></table></figure><p>重启mysql服务：<code>$ sudo service mysql restart</code></p><br><h2 id="安装并配置Hive"><a href="#安装并配置Hive" class="headerlink" title="安装并配置Hive"></a>安装并配置Hive</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/下载</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> cp apache-hive-3.1.2-bin.tar.gz ~/Hadoop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -zxvf apache-hive-3.1.2-bin.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> mv apache-hive-3.1.2-bin hive-3.1.2</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> hive-3.1.2/conf</span></span><br></pre></td></tr></table></figure><br><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="hive-env-sh"><a href="#hive-env-sh" class="headerlink" title="hive-env.sh"></a>hive-env.sh</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 复制一份 hive-env.sh 的模版</span><br><span class="line"><span class="meta">$</span><span class="bash"> cp hive-env.sh.template hive-env.sh</span></span><br><span class="line"></span><br><span class="line">// hive-env.sh 将第48行注释去掉，改为</span><br><span class="line">HADOOP_HOME=/usr/hadoop（你hadoop安装的位置）</span><br></pre></td></tr></table></figure><h4 id="hive-site-xml"><a href="#hive-site-xml" class="headerlink" title="hive-site.xml"></a>hive-site.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">// 创建一个新文件 hive-site.xml</span><br><span class="line">$ gedit hive-site.xml</span><br><span class="line"></span><br><span class="line">// 添加以下内容</span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot;?&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet type=&quot;text/xsl&quot; href=&quot;configuration.xsl&quot;?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.metastore.local<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://192.168.56.1:3306/hive?createDatabaseIfNotExist=true<span class="symbol">&amp;amp;</span>characterEncoding=UTF-8<span class="symbol">&amp;amp;</span>serverTimezone=GMT<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>datanucleus.schema.autoCreateAll<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.metastore.schema.verification<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// 注意这里本机(hadoop-master)的ip是192.168.56.1</span><br><span class="line">// 连接mysql时用的hadoop用户和密码</span><br></pre></td></tr></table></figure><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 这里直接是 /etc/profile，当然你也可以加到 .bash_profile 下也行</span><br><span class="line"><span class="meta">$</span><span class="bash"> sudo gedit /etc/profile</span></span><br><span class="line"></span><br><span class="line">// 然后在里面加入下面两句</span><br><span class="line"></span><br><span class="line">export HIVE_HOME=/home/xld/Hadoop/hive</span><br><span class="line">export PATH=$HIVE_HOME/bin:$PATH</span><br><span class="line"></span><br><span class="line">// 保存并退出，然后使其生效</span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">source</span> /etc/profile</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="导入mysql-connector"><a href="#导入mysql-connector" class="headerlink" title="导入mysql-connector"></a>导入mysql-connector</h3><p>直接将mysql-connector的jar包丢到 <code>~/Hadoop/hive-3.1.2/lib</code> 目录下就好了<br>这里用的是 mysql-connector-java-5.1.27-bin.jar，当然很多版本都可以啦，支持当前mysql版本都行<br>下载地址：<a href="https://cdn.mysql.com/archives/mysql-connector-java-5.1/mysql-connector-java-5.1.27.tar.gz">mysql-connector-java-5.1.27.tar.gz</a></p><br><h3 id="启动hive"><a href="#启动hive" class="headerlink" title="启动hive"></a>启动hive</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> hive</span></span><br><span class="line"></span><br><span class="line">// 成功进入到hive页面后</span><br><span class="line"><span class="meta">hive&gt;</span><span class="bash"> show databases;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>成功启动<br><img src="https://img-blog.csdnimg.cn/76d8e2c755704f8791072aa5772465c7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p></blockquote><br><hr><h1 id="其他错误"><a href="#其他错误" class="headerlink" title="其他错误"></a>其他错误</h1><h2 id="hive启动Failed-to-get-schema-version报错"><a href="#hive启动Failed-to-get-schema-version报错" class="headerlink" title="hive启动Failed to get schema version报错"></a>hive启动Failed to get schema version报错</h2><p>推荐参考：<a href="https://blog.csdn.net/liliblue/article/details/102594664">hive安装Failed to get schema version报错</a><br>解决方法：注释掉  /etc/mysql/mysql.conf.d/mysqld.cnf   里面的这一句    bind-address = 127.0.0.1 </p><br><h2 id="显示有“拒绝连接”"><a href="#显示有“拒绝连接”" class="headerlink" title="显示有“拒绝连接”"></a>显示有“拒绝连接”</h2><p>推荐参考：<a href="https://blog.csdn.net/weixin_45627031/article/details/104554136">Exception in thread “main” java.lang.RuntimeException: java.net.ConnectException错误问题</a><br>解决方法：启动Hadoop集群</p><br><hr>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大型数据库 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用命令语句</title>
      <link href="/%E7%AC%94%E8%AE%B0/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AF%AD%E5%8F%A5/"/>
      <url>/%E7%AC%94%E8%AE%B0/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">新建文件夹</span><br><span class="line">进入文件夹，右击git bash here</span><br><span class="line"> $ git init</span><br><span class="line">    #（添加用户名+email）方法在底下 #</span><br><span class="line"> $ git remote add origin XXX// 添加远程仓库地址</span><br><span class="line"> $ git pull</span><br><span class="line">  -$ git add 文件名// 工作区→暂存区</span><br><span class="line">  -$ git commit -m &#x27;描述&#x27;// 暂存区→Git仓库</span><br><span class="line"> $ git push origin main</span><br><span class="line"> $ git push -u origin main</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>$ git clone -b dev origin     // 拉取特定分支(dev:分支名称)<br>$ git fetch origin dev<br>$ git pull origin dev</p><p>$ git checkout -b main        // 切换到main分支上（没有则创建）<br>$ git branch        // 展示分支<br>$ git merge master        // 将master分支合并到main上<br>$ gie branch -d master        // 将master分支删除</p><p>$ git push origin main    // 推到main分支上</p><p>$ git remote -v        // 查看远程仓库详细信息，可以看到仓库名称<br>$ git remote remove orign    // 删除orign仓库（如果把origin拼写成orign，删除错误名称仓库）<br>$ git remote add origin XXX    // 重新添加远程仓库地址</p><p>$ gti push -u origin master    // 提交到远程仓库的master主干<br>$ git push -f origin master    // 强制上传覆盖</p><p>$ git config –global user.name ‘username’<br>$ git config –global user.email ‘<a href="mailto:&#x79;&#111;&#x75;&#114;&#x5f;&#x65;&#x6d;&#x61;&#x69;&#108;&#64;&#x78;&#120;&#x2e;&#99;&#111;&#x6d;">&#x79;&#111;&#x75;&#114;&#x5f;&#x65;&#x6d;&#x61;&#x69;&#108;&#64;&#x78;&#120;&#x2e;&#99;&#111;&#x6d;</a>‘<br>$ git config –list        // 查看设置<br>$ git config  credential.helper store    // 不用每次push都输入账号密码</p><p>$ git status         // 查看当前文件的状况（工作区/暂存区）<br>$ git add 文件名        // 工作区→暂存区<br>$ git commit -m ‘描述’    // 暂存区→Git仓库</p><p>//查<br>git config –global –list<br>git config –global user.name<br>git remote -v</p><p>//增<br>git config  –global –add user.name xld<br>git remote set-url –add origin “XXX”    // 添加多个仓库地址</p><p>//删<br>git config  –global –unset user.name</p><p>//改<br>git config –global user.name xld</p><p>//开VPN代理，push失败 但能打开页面<br>$ git config http.proxy</p><p><a href="https://www.runoob.com/git/git-basic-operations.html">https://www.runoob.com/git/git-basic-operations.html</a></p><p>npm换源：<br>$ npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></p><p>运行单独的Vue页面<br>$ npm install -g @vue/cli-service-global<br>$ vue serve</p><ol><li>下载安装 Node.js </li><li>npm 换源</li><li>npm安装Vue</li><li>运行</li></ol><p>哪个命令不能用，就删掉哪个 *.ps1 的文件<br>C:\Users\asus\AppData\Roaming\npm</p><h3 id="github-com"><a href="#github-com" class="headerlink" title="github.com"></a>github.com</h3><p>13.114.40.48<br>13.250.177.223<br>13.229.188.59<br>52.74.223.119<br>52.192.72.89<br>140.82.112.4<br>192.30.255.113</p><h2 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h2><p>$ <strong>npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></strong>     // 更换成淘宝的源</p><h2 id="vsCode："><a href="#vsCode：" class="headerlink" title="vsCode："></a>vsCode：</h2><p>File(文件)-&gt;Preferences(首选项)-&gt;Usersettings(设置)<br>搜索encoding，修改默认编码</p><p><strong>终端：</strong><br>write-host “hello world” -foregroundcolor “green”    // 打印颜色</p><p><strong>右键菜单：</strong></p><ol><li>win-R  “regedit”</li><li>“ 计算机\HKEY_CLASSES_ROOT\Directory\Background\shell “</li></ol><p><strong>linux：</strong><br>$ ps -e | grep apt</p><p><strong>服务端网卡：</strong><br>$ sudo dhclient enp0s8<br>$ sudo dhclient enp0s3</p><p><strong>Ubuntu桌面：</strong></p><ol><li><p>在命令行运行以下命令更新<br>$ apt-get update<br>$ apt-get upgrade</p></li><li><p>安装桌面<br>$ apt-get install -y ubuntu-desktop</p></li><li><p>安装xrdp<br>$ apt-get install -y xrdp<br>安装完成后，即可使用Windows远程桌面工具登录Ubuntu。</p></li></ol><p><strong>Ubuntu换源：</strong><br>$ sudo vim /etc/apt/sources.list<br>将     <a href="http://cn.archive.ubuntu.com/ubuntu">http://cn.archive.ubuntu.com/ubuntu</a><br>换成    <a href="https://mirrors.aliyun.com/ubuntu/">https://mirrors.aliyun.com/ubuntu/</a></p><p>ubuntu查看处理器和系统架构：<br>$ uname -a;<br>$ uname -m;<br>$ dpkg –print-architecture；<br>$ getconf LONG_BIT;<br>$ file /sbin/init;</p><p>清华开源镜像站<br><a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu-ports/">https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu-ports/</a></p><p>关于 cdn.jsdelivr.net 挂了：<br>（npm版本）<br>将：<a href="https://cdn.jsdelivr.net/npm">https://cdn.jsdelivr.net/npm</a><br>更换为：       <a href="https://unpkg.com/">https://unpkg.com</a><br>国内镜像源：<a href="https://unpkg.zhimg.com/">https://unpkg.zhimg.com/</a><br>（gh版本）<br>自重吧！</p><p>Ubuntu删除无用的dpkg包<br>dpkg -l 命令可以查看所有安装的包，其中rc状态的包是卸载了包但配置文件还在，可以使用以下命令进行清理：<br>$ dpkg -l | grep ^rc | cut -d’ ‘ -f3 | sudo xargs dpkg –purge</p><p>包管理 dpkg 解释<br><a href="https://blog.csdn.net/qiuchangyong/article/details/97505379">https://blog.csdn.net/qiuchangyong/article/details/97505379</a><br>$ sudo dpkg –add-architecture arm64    (当前状态，不行就remove掉)<br>$ sudo dpkg –remove-architecture arm64</p><p>21.04 hirsute<br>20.04 focal<br>18.04 bionic<br>16.04 xenial<br>14.04 trusty<br>12.04 precise</p><p>MongoDB</p><p>修复mongodb启动失败问题（service mongodb start）：<a href="https://blog.csdn.net/qq_41420747/article/details/82988472">https://blog.csdn.net/qq_41420747/article/details/82988472</a><br>sudo pkill mongod                              # 杀死mongod服务<br>sudo mongod -f /etc/mongod.conf –fork –auth  # –auth 表示以认证模式启动服务，不加则关闭</p><p>树莓派安装非官方系统没有raspi-config命令的解决方法：<br>1、安装依赖<br>sudo apt install whiptail parted lua5.1 alsa-utils psmisc<br>2、从Raspberrypi官网下载最新的deb安装包<br>wget <a href="http://archive.raspberrypi.org/debian/pool/main/r/raspi-config/raspi-config_20200707_all.deb">http://archive.raspberrypi.org/debian/pool/main/r/raspi-config/raspi-config_20200707_all.deb</a><br>3、安装Deb安装包<br>sudo dpkg -i raspi-config_20200707_all.deb<br>4、装好软件还是提示缺少依赖执行错误<br>sudo apt install -f -y<br>5、运行raspi-config，需要sudo或以上权限<br>sudo raspi-config</p><p>树莓派通过raspi-config启动摄像头时，出错:Your firmwave appears to be out of date (no start_x.elf). Please update：<br>1、查看boot分区所在的设备号，设备号可能是：/dev/mmcblk0p1<br>df -h<br>2、将该设备号挂载在/boot上<br>mount /dev/mmcblk0p1 /boot</p><p>Windows创建软连接:<br>$ mklink 目标文件夹路径 文件夹实际存储路径<br>eg: <a href="https://blog.csdn.net/sg_knight/article/details/121202084">微信开发者工具更换存储目录将C盘数据User Data迁移到D盘</a></p><p>Windows快速复制/移动 大量文件（多线程）<br><code>$ robocopy D:\备份 J:\D\备份 *.* /mt /z /move /e</code></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="//about/"/>
      <url>//about/</url>
      
        <content type="html"><![CDATA[<p>欢迎光临来到本小站~</p><p>这里是细粒丁の个人博客哦~</p><hr><h2 id="先介绍下自己吧"><a href="#先介绍下自己吧" class="headerlink" title="先介绍下自己吧~"></a>先介绍下自己吧~</h2><p>这里细粒丁，坐标广东广州，是个男孩纸~</p><p>昂有很多个名字哦，嗯…有… 细粒丁、来自火星の细粒丁、女娲&amp;兔兔</p><p>关于我的称呼还挺多的，比如：细粒丁、粒粒、丁丁、兔兔 ……</p><p>至于为什么嘛。。。呃…本兔也不知道呢！</p><h3 id="技术方面嘛"><a href="#技术方面嘛" class="headerlink" title="技术方面嘛"></a>技术方面嘛</h3><p>目前还是个小白了啦~<br>玩前端比较多，之前玩的小程序，然后就玩了会儿uni-app（Vue），现在就搞搞博客这样咯~</p><hr><h2 id="再说说这个博客"><a href="#再说说这个博客" class="headerlink" title="再说说这个博客"></a>再说说这个博客</h2><p>建个人博客是从我刚学前端没多久，就想做的一件事了啦，因为自己有个炫酷的网站真的好像挺帅气的。</p><p>当时刚开始接触三件套，就想着 要不就建一个静态的吧，把内容都写死在html里不就好了，当时真的挺天真的~</p><p>后来到了暑期，玩了小程序之后，技术有个小阶梯的飞跃吧，后面再学Vue还是挺容易的，然后就想，要不建个动态的吧，就用Vue！这也就是这个博客的初态。</p><p>我大概已经构思好了怎么用Vue来搭建了，然后在我做完两三个页面之后，发现问题了……虽然说动态是好，完整搭出来可能和做一个完整小程序差不多，但…真的有这个必要吗？一个博客最多就是像个朋友圈一样，能实时展示最新的消息，但好像没这个必要：</p><ol><li>首先是时效性。博客只是像单纯的写文章、写日记、做笔记差不多，并不需要很高的时效性，有些内容迟一天发和早一天发，甚至可以说没影响</li><li>资源问题。如果用Vue，从前端-云开发（云函数+云数据库），前端可以挂静态托管，但后端的资源消耗会很大。我做过小程序，如果所有服务都通过云函数调用获取，资源都存储在云存储和云数据库中，这个每天或是每个月的消耗还是挺大的，最起码免费的不够用。</li><li>管理问题。动态的可以说使用方便，但需要有人去管理，管理的成本也不少，一旦说哪一环出现问题了，都要自己去维护，对于我一个学生党来说挺花时间的。相反静态就不怎么需要维护了，放着就好了……</li></ol><p>所以就想到了用hexo，直接打包成静态的发布，维护小、成本低…….就它了！</p><hr><h2 id="关于本站"><a href="#关于本站" class="headerlink" title="关于本站"></a>关于本站</h2><h4 id="2022-09-12"><a href="#2022-09-12" class="headerlink" title="2022-09-12"></a>2022-09-12</h4><ol><li>Twikoo评论部署迁移。<blockquote><p>腾讯！云开发！真的！太贵了！</p><p><del>39元/月</del> 19.9元/月的套餐费用 + 按量付费<br><del>(他还给我打折，还给我一个月缓冲操作时间，他真的，我哭死)</del></p><p>然后日志还要收钱，CDN 云函数调用 容量 还涨价<br><del>(虽然说套餐的不一定用得完，毕竟寒舍嘛)</del></p><p>然后，我用docker不香嘛……</p></blockquote></li></ol><h4 id="2022-06-05"><a href="#2022-06-05" class="headerlink" title="2022-06-05"></a>2022-06-05</h4><ol><li>将国外的CDN资源迁移至国内或本地<blockquote><p>这也无奈呀~ 怎么会有人不封github 反倒把github的CDN封了，秘制操作……</p></blockquote></li></ol><h4 id="2021-7-19"><a href="#2021-7-19" class="headerlink" title="2021-7-19"></a>2021-7-19</h4><ol><li>本站的大致结构基本形成，并发布在了github的个人主页上进行测试</li><li>本站采用的是hexo框架-butterfly主题</li><li>本站设置了评论系统，可邮箱通知最新消息</li><li>设置了贡献面板</li><li>不知道了啦……太多了……</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言实现TCP/IP连接</title>
      <link href="/%E6%8A%80%E6%9C%AF/C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0TCPIP%E8%BF%9E%E6%8E%A5/"/>
      <url>/%E6%8A%80%E6%9C%AF/C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0TCPIP%E8%BF%9E%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言实现TCP-IP连接"><a href="#C语言实现TCP-IP连接" class="headerlink" title="C语言实现TCP/IP连接"></a>C语言实现TCP/IP连接</h1><p>利用C语言，实现TCP/IP连接。其中采用CS模式+套接字的方式。    </p><p>先上代码：</p><h3 id="Server-c-服务端"><a href="#Server-c-服务端" class="headerlink" title="Server.c    服务端"></a>Server.c    服务端</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Server.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ws2tcpip.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SERVER_PORT 6666</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 套接字连接--全局</span></span><br><span class="line"><span class="keyword">int</span> client;</span><br><span class="line"><span class="comment">// 调用socket函数返回的文件描述符</span></span><br><span class="line"><span class="keyword">int</span> serverSocket;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> buffer[<span class="number">200</span>]; <span class="comment">//存储 发送和接收的信息</span></span><br><span class="line"><span class="keyword">int</span> iDataNum;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化服务端，等待客户端连接</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sockInit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">监听后，一直处于accept阻塞状态，</span></span><br><span class="line"><span class="comment">直到有客户端连接，</span></span><br><span class="line"><span class="comment">当客户端如数quit后，断开与客户端的连接</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//声明两个套接字sockaddr_in结构体变量，分别表示客户端和服务器</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">server_addr</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">clientAddr</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> addr_len = <span class="keyword">sizeof</span>(clientAddr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//必须先初始化</span></span><br><span class="line">WSADATA wsaData;</span><br><span class="line">WSAStartup(MAKEWORD(<span class="number">2</span>, <span class="number">2</span>), &amp;wsaData);</span><br><span class="line"><span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">2</span> || HIBYTE(wsaData.wVersion) != <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;require version fail!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//socket函数，失败返回-1</span></span><br><span class="line"><span class="comment">//int socket(int domain, int type, int protocol);</span></span><br><span class="line"><span class="comment">//第一个参数表示使用的地址类型，一般都是ipv4，AF_INET</span></span><br><span class="line"><span class="comment">//第二个参数表示套接字类型：tcp：面向连接的稳定数据传输SOCK_STREAM</span></span><br><span class="line"><span class="comment">//第三个参数设置为0</span></span><br><span class="line"><span class="comment">//建立socket</span></span><br><span class="line"><span class="keyword">if</span> ((serverSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">&quot;socket&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化 server_addr</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;server_addr, <span class="number">0</span>, <span class="keyword">sizeof</span>(server_addr));</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化服务器端的套接字，并用htons和htonl将端口和地址转成网络字节序</span></span><br><span class="line">server_addr.sin_family = AF_INET;</span><br><span class="line">server_addr.sin_port = htons(SERVER_PORT);</span><br><span class="line"></span><br><span class="line"><span class="comment">//ip可是是本服务器的ip，也可以用宏INADDR_ANY代替，代表0.0.0.0，表明所有地址</span></span><br><span class="line">server_addr.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class="line"></span><br><span class="line"><span class="comment">//对于bind，accept之类的函数，里面套接字参数都是需要强制转换成(struct sockaddr *)</span></span><br><span class="line"><span class="comment">//bind三个参数：服务器端的套接字的文件描述符，</span></span><br><span class="line"><span class="keyword">if</span> (bind(serverSocket, (struct sockaddr *)&amp;server_addr, <span class="keyword">sizeof</span>(server_addr)) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">&quot;connect&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置服务器上的socket为监听状态</span></span><br><span class="line"><span class="keyword">if</span> (listen(serverSocket, <span class="number">5</span>) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">&quot;listen&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n监听端口: %d\n&quot;</span>, SERVER_PORT);</span><br><span class="line"><span class="comment">//调用accept函数后，会进入阻塞状态</span></span><br><span class="line"><span class="comment">//accept返回一个套接字的文件描述符，这样服务器端便有两个套接字的文件描述符，</span></span><br><span class="line"><span class="comment">//serverSocket和client。</span></span><br><span class="line"><span class="comment">//serverSocket仍然继续在监听状态，client则负责接收和发送数据</span></span><br><span class="line"><span class="comment">//clientAddr是一个传出参数，accept返回时，传出客户端的地址和端口号</span></span><br><span class="line"><span class="comment">//addr_len是一个传入-传出参数，传入的是调用者提供的缓冲区的clientAddr的长度，以避免缓冲区溢出。</span></span><br><span class="line"><span class="comment">//传出的是客户端地址结构体的实际长度。</span></span><br><span class="line"><span class="comment">//出错返回-1</span></span><br><span class="line">client = accept(serverSocket, (struct sockaddr *)&amp;clientAddr, (<span class="keyword">socklen_t</span> *)&amp;addr_len);</span><br><span class="line"><span class="keyword">if</span> (client &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">&quot;accept&quot;</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// inet_ntoa ip地址转换函数，将网络字节序IP转换为点分十进制IP</span></span><br><span class="line"><span class="comment">// 表达式：char *inet_ntoa (struct in_addr);</span></span><br><span class="line"><span class="comment">// printf(&quot;IP is %s\n&quot;, inet_ntoa(clientAddr.sin_addr)); //把来访问的客户端的IP地址打出来</span></span><br><span class="line"><span class="comment">// printf(&quot;Port is %d\n\n&quot;, htons(clientAddr.sin_port));</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;host: %s:%d\n\n&quot;</span>, inet_ntoa(clientAddr.sin_addr), htons(clientAddr.sin_port));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">get_msg</span><span class="params">()</span></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 接收数据</span></span><br><span class="line"><span class="built_in">memset</span>(buffer, <span class="number">0</span>, <span class="keyword">sizeof</span>(buffer));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;等待信息...\n&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">iDataNum = recv(client, buffer, <span class="keyword">sizeof</span>(buffer), <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (iDataNum &gt;= <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">buffer[iDataNum] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;收到的信息：%s\n\n&quot;</span>,buffer);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送信息</span></span><br><span class="line"><span class="built_in">memset</span>(buffer, <span class="number">0</span>, <span class="keyword">sizeof</span>(buffer));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入发送的内容：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;buffer);</span><br><span class="line">        send(client, buffer, <span class="built_in">strlen</span>(buffer), <span class="number">0</span>); <span class="comment">//向服务端发送消息</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">sockInit();</span><br><span class="line">get_msg();</span><br><span class="line">getchar();</span><br><span class="line">close(serverSocket);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Client-c-客户端"><a href="#Client-c-客户端" class="headerlink" title="Client.c    客户端"></a>Client.c    客户端</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Client.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;ws2tcpip.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> SERVER_PORT 6666</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 套接字连接--全局</span></span><br><span class="line"><span class="comment">// 客户端只需要一个套接字文件描述符，用于和服务器通信</span></span><br><span class="line"><span class="keyword">int</span> serverSocket;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">char</span> buffer[<span class="number">200</span>]; <span class="comment">//存储 发送的信息</span></span><br><span class="line"><span class="keyword">int</span> iDataNum;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接服务端</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">sockInit</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//描述服务器的socket</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">serverAddr</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面代码初始化</span></span><br><span class="line">WSADATA wsaData;</span><br><span class="line">WSAStartup(MAKEWORD(<span class="number">2</span>, <span class="number">2</span>), &amp;wsaData);</span><br><span class="line"><span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">2</span> || HIBYTE(wsaData.wVersion) != <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;require version fail!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((serverSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">&quot;socket&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">serverAddr.sin_family = AF_INET;</span><br><span class="line">serverAddr.sin_port = htons(SERVER_PORT);</span><br><span class="line"></span><br><span class="line"><span class="comment">//指定服务器端的ip，本地测试：127.0.0.1</span></span><br><span class="line"><span class="comment">//inet_addr()函数，将点分十进制IP转换成网络字节序IP</span></span><br><span class="line">serverAddr.sin_addr.s_addr = inet_addr(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (connect(serverSocket, (struct sockaddr *)&amp;serverAddr, <span class="keyword">sizeof</span>(serverAddr)) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">&quot;connect&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (sockInit() != <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n连接成功...\n\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送信息</span></span><br><span class="line"><span class="built_in">memset</span>(buffer, <span class="number">0</span>, <span class="keyword">sizeof</span>(buffer));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入发送的内容：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;buffer);</span><br><span class="line">        send(serverSocket, buffer, <span class="built_in">strlen</span>(buffer), <span class="number">0</span>); <span class="comment">//向服务端发送消息</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收数据</span></span><br><span class="line"><span class="built_in">memset</span>(buffer, <span class="number">0</span>, <span class="keyword">sizeof</span>(buffer));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;等待信息...\n&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">iDataNum = recv(serverSocket, buffer, <span class="keyword">sizeof</span>(buffer), <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (iDataNum &gt;= <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">buffer[iDataNum] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;收到的信息：%s\n\n&quot;</span>,buffer);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getchar();</span><br><span class="line">close(serverSocket);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中，send()是用来发送数据的，recv()是用来接收数据的</p><p><strong>接收数据</strong>的时候，通常情况下是不知道大小的，所以使用的是缓冲区的大小<em>sizeof(buffer)</em></p><p>但在<strong>发送数据</strong>的时候，是可以知道数据的长度/大小的，所以可以直接用*strlen(buffer)*来获取和确定要发送的长度</p><p>注：直接在cmd用gcc编译时，记得加上 -lwsock32    (当前是Windows 10)</p><p><code>$ gcc .\Server.c -o .\Server.exe -lwsock32</code></p><hr><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>还有一点需要注意的是，我试过：先写好客户端只发送数据，服务端只接收数据</p><p>然后利用Client端 连续不间断地向Server端发送长度较大的数据，这时在Server端打印接收到的数据时，往往会显示（接收）不完全，或许是recv()中的数据并没有被完全读进buffer中去。</p><p>怎么说呢，就像是我Server端要接收一大串的数据，我这一大串(来自recv的)数据还没有读到尾(‘\0’) 内存还没读完，buffer就要被拿去printf了，printf完就被填充全0，准备下一次的数据接收。</p><p>那怎么办呢，要确保Server端完整读取发送过来的数据呀，那我加延时呗 等内存读完呗，延时完再打印和初始化buffer。</p><p>实验结果发现，确实可以，但！这个延时加在Server端却没用，对于Server端来说 每一条语句执行的顺序都是一样的，速度也是相当的，你不可能说加了个延时它就不接收数据了呀，对吧。</p><p>然后我把延时加在了Client端发送那里，确保每次发送都有一段不会太短的时间间隔，这样Server端就能完整读取完数据再处理下一次的接收。</p><p>真是非常的amazing啊，当初我还是搞网安玩加密的时候试出来的，调了半天，以为是因为加密后乱码 发过去了读不出来，结果才发现可能是内存没读完导致的，郁闷了两天（托腮.jpg）</p><p>不过这也只不过是我猜测的啦，真正具体是什么原因导致读不完我还不怎么清楚了啦……(蹲个大佬 我插个眼)</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 笔记 </tag>
            
            <tag> TCP </tag>
            
            <tag> 网络编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS闭包异步问题</title>
      <link href="/%E6%8A%80%E6%9C%AF/JS%E9%97%AD%E5%8C%85%E5%BC%82%E6%AD%A5%E9%97%AE%E9%A2%98/"/>
      <url>/%E6%8A%80%E6%9C%AF/JS%E9%97%AD%E5%8C%85%E5%BC%82%E6%AD%A5%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="JS闭包异步问题"><a href="#JS闭包异步问题" class="headerlink" title="JS闭包异步问题"></a>JS闭包异步问题</h1><p>假设我们现在想要先执行f2，执行完f2之后在紧跟执行f1。我们应该这样写：👇</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>( <span class="function">()=&gt;</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">&quot;this is f1&quot;</span>,<span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line">  &#125;,<span class="number">2000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params">callback</span>)</span>&#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>( <span class="function">()=&gt;</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">&quot;this is f2&quot;</span>,<span class="keyword">new</span> <span class="built_in">Date</span>())</span><br><span class="line">     callback()</span><br><span class="line">  &#125;,<span class="number">2000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;start time:&quot;</span>,<span class="keyword">new</span> <span class="built_in">Date</span>())</span><br><span class="line">f2(f1)</span><br></pre></td></tr></table></figure><p>这样他会先打印”start time”，过两秒后打印”f2”的时间，再过2s后再打印”f1”</p><p><img src="image-20210713003026939.png" alt="image-20210713003026939"></p><img src="image-20210713003317016.png" alt="image-20210713003317016"  /><hr><p>若换一种写法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> <span class="function"><span class="keyword">function</span> <span class="title">f1</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>( <span class="function">()=&gt;</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">&quot;this is f1&quot;</span>,<span class="keyword">new</span> <span class="built_in">Date</span>());</span><br><span class="line">  &#125;,<span class="number">2000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f2</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>( <span class="function">()=&gt;</span>&#123;</span><br><span class="line">     <span class="built_in">console</span>.log(<span class="string">&quot;this is f2&quot;</span>,<span class="keyword">new</span> <span class="built_in">Date</span>())</span><br><span class="line">  &#125;,<span class="number">2000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">console</span>.log(<span class="string">&quot;start time:&quot;</span>,<span class="keyword">new</span> <span class="built_in">Date</span>())</span><br><span class="line"></span><br><span class="line">f2()</span><br><span class="line">f1()</span><br></pre></td></tr></table></figure><p>这样并不能达到异步的效果，它会先打印”start time”，之后在接下来的语句中，它会执行f2()、f1() ，f1打印的时间应该和f2打印的时间是一样的</p><p>解释：这里f1的执行，并不需要等待f2执行完 跳出来之后再执行，这里就像是解析语句一般，解析完“要执行f2()”，之后解析“要执行f1()”，它两之间就几个微秒的间隔</p><p><img src="image-20210713004030715.png" alt="image-20210713004030715"></p><hr><div class="mermaid">sequenceDiagramNote over 主 线: 解析&quot;start time&quot;Note over 主 线: 解析f2()主 线-&gt;&gt;+支线1: 给我去执行f2()Note over 支线1: 执行f2()Note over 主 线: 解析f1()主 线-&gt;&gt;+支线2: 给我去执行f1()Note over 支线2: 执行f1()</div><ol><li><p>主线先解析”start time”</p></li><li><p>主线解析“要执行f2()”，然后把f2的具体内容交给支线1去执行，支线1与主线互不干扰，两者并行</p></li><li><p>主线解析“要执行f1()”，然后把f1的具体内容交给支线2去执行，支线2与主线互不干扰，两者并行</p><p>（与此同时，支线1继续执行f2的内容，理论上应该还没执行完f2  因为主线从解析f2()到解析f1()仅需大概6微秒左右[视芯片而定吧]）</p></li></ol><p>这里用 <code>new Date().getTime()</code> 打印了时间戳，</p><p>“start time” 与f2 相差 2012ms，也就是2s + 12ms</p><p>f2和f1的时间就差了1ms</p><p><img src="image-20210713010648477.png" alt="image-20210713010648477"></p><hr><p>若直接用 <code>new Date().getMilliseconds()</code> 打印ms：</p><p><img src="image-20210713011331809.png" alt="image-20210713011331809"><img src="image-20210713011353347.png" alt="image-20210713011353347"></p><p>大概就是看进位吧？！</p><p>反正就是两者的间隔时间很短，并不会出现执行完f2()在执行f1()的情况</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> JS </tag>
            
            <tag> 异步 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机+Ubuntu，搭建hadoop集群</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/%E8%99%9A%E6%8B%9F%E6%9C%BA+Ubuntu%EF%BC%8C%E6%90%AD%E5%BB%BAhadoop%E9%9B%86%E7%BE%A4/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/%E8%99%9A%E6%8B%9F%E6%9C%BA+Ubuntu%EF%BC%8C%E6%90%AD%E5%BB%BAhadoop%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="一些说明和资源"><a href="#一些说明和资源" class="headerlink" title="一些说明和资源"></a>一些说明和资源</h1><p>虚拟机：VirtualBox-6.1.18<br>Ubuntu：16.04桌面版<br>JDK：<a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">jdk-8u281-linux-x64.tar.gz</a><br>hadoop：<a href="http://archive.apache.org/dist/hadoop/core/hadoop-2.7.3/hadoop-2.7.3.tar.gz">hadoop2.7.3</a><br>可能用到的资源：<a href="https://download.csdn.net/download/li1055107552/15776196">hadoop-instead</a></p><hr><h2 id="安装虚拟机和Ubuntu16-04"><a href="#安装虚拟机和Ubuntu16-04" class="headerlink" title="安装虚拟机和Ubuntu16.04"></a>安装虚拟机和Ubuntu16.04</h2><p>传送门：<a href="https://blog.csdn.net/li1055107552/article/details/114766651">下载及安装教程</a></p><blockquote><p> 稍有不同的地方：<br><img src="https://img-blog.csdnimg.cn/20210313233828663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></blockquote><hr><h2 id="安装hadoop"><a href="#安装hadoop" class="headerlink" title="安装hadoop"></a>安装hadoop</h2><br/><h4 id="1-配置虚拟机网卡"><a href="#1-配置虚拟机网卡" class="headerlink" title="1. 配置虚拟机网卡"></a>1. 配置虚拟机网卡</h4><pre><code>     1. 打开VirtualBox     2. 点击右上角 管理 --&gt; 主机网络管理器 --&gt; 创建网卡    </code></pre><p><img src="https://img-blog.csdnimg.cn/img_convert/c8c9b55601207655f98a85d995350e45.png#pic_center" alt="在这里插入图片描述"></p><br/><h4 id="2-配置主机网卡"><a href="#2-配置主机网卡" class="headerlink" title="2. 配置主机网卡"></a>2. 配置主机网卡</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/f47ddb53bc42e835fb6e7a75c4d37d92.png#pic_center" alt="在这里插入图片描述"></p><br/><h4 id="3-进入到Ubuntu"><a href="#3-进入到Ubuntu" class="headerlink" title="3.进入到Ubuntu"></a>3.进入到Ubuntu</h4><p><font size=3>以下操作在 hadoop-master 下完成</font></p><h5 id="3-1-配置hosts文件"><a href="#3-1-配置hosts文件" class="headerlink" title="3.1 配置hosts文件"></a>3.1 配置hosts文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/hosts</span><br></pre></td></tr></table></figure><blockquote><p>//  配置如下，后面的ipv6部分无需更改：<br/><br><img src="https://img-blog.csdnimg.cn/20210314030323120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></blockquote><br/><h5 id="3-2-下载和配置Java"><a href="#3-2-下载和配置Java" class="headerlink" title="3.2 下载和配置Java"></a>3.2 下载和配置Java</h5><p>JDK下载：<a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">官方下载地址</a><br>本地下载：<a href="https://download.csdn.net/download/li1055107552/15773067">jdk-8u281-linux-x64.tar.gz</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 进入到jdk的存放位置 解压</span><br><span class="line">$ tar -xvf jdk-8u281-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line">// 将文件夹复制到/usr/java 目录下</span><br><span class="line">$ sudo cp -r jdk1.8.0_281/ /usr/java</span><br></pre></td></tr></table></figure><p>接着配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/profile</span><br></pre></td></tr></table></figure><p>在 profile 中添加以下内容：</p><pre><code>export JAVA_HOME=/usr/javaexport CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATHexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATHexport JRE_HOME=$JAVA_HOME/jre# 下面是 后面hadoop的环境变量# export HADOOP_HOME=/usr/hadoop# export CLASSPATH=$($HADOOP_HOME/bin/hadoop classpath):$CLASSPATH# export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native# export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin</code></pre><p>然后是保存 并使profile文件立即生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p>接着可以输入以下命令查看是否安装成功：</p><pre><code>$ java -version</code></pre><p>若能成功打印版本信息则为成功。</p><br/><h5 id="3-3-下载和配置Hadoop"><a href="#3-3-下载和配置Hadoop" class="headerlink" title="3.3 下载和配置Hadoop"></a>3.3 下载和配置Hadoop</h5><p>官方地址：<a href="http://archive.apache.org/dist/hadoop/core/">传送门</a><br>一步到位：<a href="http://archive.apache.org/dist/hadoop/core/hadoop-2.7.3/hadoop-2.7.3.tar.gz">hadoop-2.7.3.tar.gz</a></p><pre><code>整体的布局：NameNode：hadoop-masterDataNode：hadoop-master、hadoop-slave1、hadoop-slave2ResourceManager：hadoop-masterNodeManager：hadoop-master</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 进入到目录下解压</span><br><span class="line">$ tar -xvf hadoop-2.7.3.tar.gz</span><br><span class="line"></span><br><span class="line">// 将文件夹复制到/usr/hadoop 目录下</span><br><span class="line">$ sudo cp -r hadoop-2.7.3/ /usr/hadoop </span><br></pre></td></tr></table></figure><p>配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 把上面刚刚Java的环境变量 hadoop部分注释去掉即可</span><br><span class="line">$ sudo vim /etc/profile</span><br><span class="line"></span><br><span class="line">// 同样使profile文件立即生效：</span><br><span class="line">$ <span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p>接下来需要更改几个文件的内容：</p><p><img src="https://img-blog.csdnimg.cn/20210314021000410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>注：mapred-site.xml 没有此文件，将mapred-site.xml.template复制一份改即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">// hadoop-env.sh 将java的目录改为绝对路径，以免启动hadoop时找不到Java目录而报错</span><br><span class="line"># The java implementation to use.</span><br><span class="line">export JAVA_HOME=/usr/java</span><br><span class="line"></span><br><span class="line">// slaves 修改为以下内容，三台主机的名称：</span><br><span class="line">hadoop-master</span><br><span class="line">hadoop-slave1</span><br><span class="line">hadoop-slave2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// core-site.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/usr/hadoop/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://hadoop-master:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// hdfs-site.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop-master:50090<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/usr/hadoop/tmp/dfs/name<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/usr/hadoop/tmp/dfs/data<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// mapred-site.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop-master:10020<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.webapp.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop-master:19888<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// yarn-site.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop-master<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.log-aggregation-enable<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.log-dirs<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;yarn.log.dir&#125;/userlogs<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">故意写在后面：</span><br><span class="line">懒人专属：当你懒到一定程度时，可以直接利用 hadoop-instead 里的文件替换掉 /usr/.../etc/hadoop 里的文件就好了</span><br></pre></td></tr></table></figure><p>配置好之后，保存并关闭该主机 hadoop-master 。<br>复制另外两台主机，分别名为hadoop-slave1、hadoop-slave2</p><p>复制好之后，启动三台主机。</p><br/><h5 id="3-4-分别更改三台主机的网络配置"><a href="#3-4-分别更改三台主机的网络配置" class="headerlink" title="3.4 分别更改三台主机的网络配置"></a>3.4 分别更改三台主机的网络配置</h5><br/><h5 id="3-4-1-hadoop-master"><a href="#3-4-1-hadoop-master" class="headerlink" title="3.4.1 hadoop-master"></a>3.4.1 hadoop-master</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ifconfig -a</span><br></pre></td></tr></table></figure><p>应该能看到一个网卡是没有ip地址的，那就是需要配置的。（如：enp0s8）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/network/interfaces</span><br></pre></td></tr></table></figure><p>在后面添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">auto enp0s8</span><br><span class="line">iface enp0s8 inet static</span><br><span class="line">address 192.168.56.1</span><br><span class="line">netmask 255.255.255.0</span><br></pre></td></tr></table></figure><blockquote><p>// /etc/network/interfaces：<br/><br><img src="https://img-blog.csdnimg.cn/20210314031531869.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></blockquote><p>开启网卡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ifup enp0s8</span><br></pre></td></tr></table></figure><p>开启后，再次查看状态，应该是有ip地址的，如192.168.56.1</p><br/><h5 id="3-4-2-hadoop-slave1、hadoop-slave2"><a href="#3-4-2-hadoop-slave1、hadoop-slave2" class="headerlink" title="3.4.2 hadoop-slave1、hadoop-slave2"></a>3.4.2 hadoop-slave1、hadoop-slave2</h5><p>更改一下设备名称，不然host不认…</p><p><img src="https://img-blog.csdnimg.cn/20210314032451455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210314032451368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>其他操作与 3.4.1 同理。<br>配置好之后，三台主机之间，应该是可以成功ping通的。</p><br/><h5 id="3-5-配置SSH免密登录"><a href="#3-5-配置SSH免密登录" class="headerlink" title="3.5 配置SSH免密登录"></a>3.5 配置SSH免密登录</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 若没有安装ssh的可以先下载更新一下(所有主机都要)</span><br><span class="line">$ sudo apt-get install openssh-server openssh-client</span><br></pre></td></tr></table></figure><p>回到我们的 hadoop-master 主机上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line">// 分发到不同主机上</span><br><span class="line">$ ssh-copy-id username@hadoop-slave1</span><br><span class="line">$ ssh-copy-id username@hadoop-slave2</span><br><span class="line"></span><br><span class="line">// 本机免密登录</span><br><span class="line">$ <span class="built_in">cd</span> ~/.ssh</span><br><span class="line">$ cat id_rsa.pub &gt;&gt; authorized_keys</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注：链接时提示输入密码，是需要链接的主机的密码，不是本机的密码。<br>连接后，若想要退出链接，可以执行 <code>$exit</code></p><hr><h2 id="启动hadoop"><a href="#启动hadoop" class="headerlink" title="启动hadoop"></a>启动hadoop</h2><p>三台主机都开启后，在 master主机 上执行指令，格式化HDFS文件系统：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hdfs namenode -format</span><br></pre></td></tr></table></figure><p>在master节点启动hadoop集群</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ start-all.sh</span><br><span class="line">或</span><br><span class="line">$ start-dfs.sh</span><br><span class="line">$ start-yarn.sh</span><br></pre></td></tr></table></figure><p>然后可以通过<code>$ jps</code> 查看信息，各主机的信息 应该与上文中 3.3 的整体的布局相一致</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">还可以通过以下命令查看hadoop集群系统的状态：</span><br><span class="line">$ hdfs dfsadmin -report</span><br><span class="line"></span><br><span class="line">或直接打开网页，查看更详细的信息：</span><br><span class="line">http://192.168.56.1:50070</span><br></pre></td></tr></table></figure><hr><h2 id="启动程序"><a href="#启动程序" class="headerlink" title="启动程序"></a>启动程序</h2><p>先跑个demo，算个π</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hadoop jar /usr/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi 10 10</span><br></pre></td></tr></table></figure><p>第一次执行，时间会较长，可能需要2-5分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 试过一次好像启动的时候报错了，说要把这个关掉，先写在这吧：</span><br><span class="line">$ hdfs dfsadmin -safemode leave</span><br></pre></td></tr></table></figure><br/><p>其他：（我在另一本书上看到的，大家也可以拿来试着跑一下）</p><ul><li>日志分析：<br>  github：<a href="https://github.com/bdintro/bdintro.git">https://github.com/bdintro/bdintro.git</a><br> 编译源代码采用mvn package，测试数据为hadoop-user-datanode-dell119.log.zip<br> 在测试前先把对应数据上传到HDFS集群中，把使用mvn package编译好的jar包 <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 上传日志到hadoop</span><br><span class="line">$ hadoop fs -copyFromLocal hadoop-yangyaru-datanode-dell119.log /</span><br><span class="line"></span><br><span class="line">// 启动</span><br><span class="line">$ hadoop jar 打包好的jar包路径/bigdata-0.0.1.jar bigdata.bigdaba.Grep WARN 需分析的日志路径/hadoop-user-datanode-dell119.log 结果输出的路径/output</span><br></pre></td></tr></table></figure></li><li>交通流量分析：<br>   github：<a href="https://github.com/bdintro/bdintro.git">https://github.com/bdintro/bdintro.git</a><br>   详细的交通流量数据格式描述如网站所述：<a href="https://www.kaggle.com/jana36/us-traffic-violations-montgomery-county-poliet">https://www.kaggle.com/jana36/us-traffic-violations-montgomery-county-poliet</a><br>  编译源代码采用mvn package，测试数据为Traffic_Violations.csv.zip<br>  在测试前先把对应数据上传到HDFS集群中，把使用mvn package编译好的jar包  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 上传交通记录到hadoop</span><br><span class="line">$ hadoop fs -copyFromLocal Traffic_Violations.csv /</span><br><span class="line"></span><br><span class="line">// 启动</span><br><span class="line">$ hadoop jar 打包好的jar包路径/bigdata-0.0.1.jar bigdata.bigdaba.TrafficTotal WARN 需分析的日志路径/Traffic_Violations.csv 结果输出的路径/output</span><br></pre></td></tr></table></figure></li></ul><br/><hr><h2 id="完"><a href="#完" class="headerlink" title="完"></a>完</h2>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VirtualBox安装Ubuntu16.04</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/VirtualBox%E5%AE%89%E8%A3%85Ubuntu16.04/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/VirtualBox%E5%AE%89%E8%A3%85Ubuntu16.04/</url>
      
        <content type="html"><![CDATA[<h1 id="VirtualBox安装Ubuntu16-04"><a href="#VirtualBox安装Ubuntu16-04" class="headerlink" title="VirtualBox安装Ubuntu16.04"></a>VirtualBox安装Ubuntu16.04</h1><hr><h2 id="一、VirtualBox的安装"><a href="#一、VirtualBox的安装" class="headerlink" title="一、VirtualBox的安装"></a>一、VirtualBox的安装</h2><p>下载地址：<a href="https://download.virtualbox.org/virtualbox/">官方下载地址</a><br>一键下载：<a href="https://download.virtualbox.org/virtualbox/6.1.18/VirtualBox-6.1.18-142142-Win.exe">VirtualBox-6.1.18-142142-Win.exe</a></p><p>然后就是傻瓜式安装……</p><hr><h2 id="二、安装Ubuntu16-04"><a href="#二、安装Ubuntu16-04" class="headerlink" title="二、安装Ubuntu16.04"></a>二、安装Ubuntu16.04</h2><p>之前VMware上我也出过一篇，大家直接去看就好了。</p><p>传送门：<a href="https://blog.csdn.net/li1055107552/article/details/108478620">虚拟机上安装Ubuntu16.04及ROS</a></p><blockquote><p><img src="https://img-blog.csdnimg.cn/20210313235018808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">点击下一步</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20210313235220779.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">这里看自己的配置，建议最小2GB，我这里是4GB</p></blockquote><blockquote><p>磁盘：<img src="https://img-blog.csdnimg.cn/20210313235414288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">下一步<img src="https://img-blog.csdnimg.cn/20210313235508195.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">下一步<img src="https://img-blog.csdnimg.cn/2021031323553961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">这里看自己吧<img src="https://img-blog.csdnimg.cn/20210313235623128.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">建议20GB，10GB也不是不行</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机上安装Ubuntu及ROS</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85Ubuntu16.04%E5%8F%8AROS/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85Ubuntu16.04%E5%8F%8AROS/</url>
      
        <content type="html"><![CDATA[<h1 id="虚拟机上安装Ubuntu及ROS"><a href="#虚拟机上安装Ubuntu及ROS" class="headerlink" title="虚拟机上安装Ubuntu及ROS"></a>虚拟机上安装Ubuntu及ROS</h1><p>使用的虚拟机 VMware为15.x的版本<br>Ubuntu的版本为16.04的版本</p><hr><h2 id="Ubuntu的安装"><a href="#Ubuntu的安装" class="headerlink" title="Ubuntu的安装"></a>Ubuntu的安装</h2><ul><li><p>安装好虚拟机VMware</p></li><li><p>下载 Ubuntu-16.04.7-desktop-amd64 镜像源</p><blockquote><p>官网：<a href="https://releases.ubuntu.com/16.04/">https://releases.ubuntu.com/16.04/</a><br>官方镜像源：<a href="https://releases.ubuntu.com/16.04/ubuntu-16.04.7-desktop-amd64.iso">点击下载官方镜像源</a><br>阿里云镜像源：<a href="http://mirrors.aliyun.com/ubuntu-releases/16.04/ubuntu-16.04.7-desktop-amd64.iso">点击下载阿里云镜像源</a><br>该文档的PDF：<a href="https://download.csdn.net/download/li1055107552/12829008">下载</a></p></blockquote></li><li><p>安装Ubuntu-16.04.7-desktop-amd64</p></li></ul><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908223146462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="选择自定义，点击下一步"><br>选择自定义，点击下一步</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908224802632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="点击下一步"><br>点击下一步</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908225124372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="选择“稍后安装操作系统”，点击下一步"><br>选择“稍后安装操作系统”，点击下一步</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908225215382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="选择“Linux”，版本选择“Ubuntu 64位”，点击下一步"><br>选择“Linux”，版本选择“Ubuntu 64位”，点击下一步</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908225314218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="选择该虚拟机的安装位置，点击下一步"><br>选择该虚拟机的安装位置，点击下一步</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908225350572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><img src="https://img-blog.csdnimg.cn/20200908225412144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>根据自己的电脑，选择相应的配置，建议不低于2核2G内存</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908225502494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="这里选择NAT即可"><br>这里选择NAT即可。（安装好Ubuntu之后，选择右上角，点击“自动以太网”即可）</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908225548299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20200908225558141.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>这里选择默认推荐的即可，点击下一步</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908230931724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><img src="https://img-blog.csdnimg.cn/20200908231010709.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>如图，点击下一步</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908231311332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><img src="https://img-blog.csdnimg.cn/2020090823133270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>选择好磁盘文件存储的位置之后，点击下一步，即可看到大致的配置信息，点击完成</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908232849729.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>点击完成后，点击该虚拟机的CD/DVD</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/2020090823293182.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>    - 选择CD/DVD（SATA），选择“使用ISO映像文件”，选择上一步骤下载的镜像源<br>    - 同时您还可以把“打印机”移除<br>    - 设置好之后，点击确定<br>    - 点击 开启此虚拟机</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908233040219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>    拉到最下面，选择中文（简体）</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908233114680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>    点击“安装Ubuntu”</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908233423384.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>    不做选择，点击“继续”</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908233510512.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>    选择“清除整个磁盘并安装Ubuntu”，点击现在安装</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908233625651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>    弹出提示，点击继续</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908233648901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>时间选择shanghai即可，点击继续</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908233715890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>选择“汉语-汉语”，点击继续</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908233742933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>设置好用户名以及密码，点击继续</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908233811864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><img src="https://img-blog.csdnimg.cn/20200908233841416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>    - 稍等片刻，即可安装完成<br>    - 安装完毕，点击现在重启。（若出现一行命令行后没反应，关闭虚拟机重启）</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908234032864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>现在已经安装好Ubuntu了，登录刚刚设置的密码即可。</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908234108519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>    成功进入到Ubuntu主界面，您可以把这几项从启动器解锁</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908234149401.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>打开第一项的搜索，打开终端</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908234204463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>打开一个终端，并锁定到启动器</p></blockquote><blockquote><p>运行终端，输入su命令，当你输入刚才登录的密码时发现su：认证失败。<br>你可以输入 $ sudo passwd root     更新密码（可以与原来相同）<br><img src="https://img-blog.csdnimg.cn/20200908234432239.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>设置完成后，在此输入su，输入密码即可认证成功。</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908234530775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>接下来打开 设置—系统 软件和更新，如图设置好即可。</p></blockquote><p>届时，你的Ubuntu 已经完全配置好了。</p><hr><h2 id="ROS的安装"><a href="#ROS的安装" class="headerlink" title="ROS的安装"></a>ROS的安装</h2><ol><li>首先添加ROS的镜像源（此处使用‘中国科学技术大学’的镜像源）</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> sudo sh –c <span class="string">&#x27;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.ustc.edu.cn/ros/ubuntu/ $DISTRIB_CODENAME main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>添加密钥</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116</span><br></pre></td></tr></table></figure><blockquote><p><img src="https://img-blog.csdnimg.cn/20200909233036934.png#pic_center" alt="Alt"></p></blockquote><ol start="3"><li>更新软件源<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> sudo apt<span class="literal">-get</span> update</span><br></pre></td></tr></table></figure><blockquote><p><img src="https://img-blog.csdnimg.cn/20200909233257485.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>接下来就是漫长的等待.. …（有条件的可以连个VPN，会快很多）</p></blockquote></li></ol><blockquote><p>若上方的 ‘ $ sudo apt-get update ‘ 更新失败了，<br>可以打开“设置-系统 软件和更新”，随意勾选一项 然后提示输入密码，接着再还原勾选的选项 点击“关闭”，即会提示以下信息<br><img src="https://img-blog.csdnimg.cn/20200909233705924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>保证联网后，点击重新载入 便会出现如下界面。只需等待自动更新即可。<br><img src="https://img-blog.csdnimg.cn/20200909233824310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>4. 安装ROS桌面完整版</p></blockquote><p>执行完上面的步骤后，执行命令安装ROS的桌面完整版</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> sudo apt<span class="literal">-get</span> install ros<span class="literal">-kinetic</span><span class="literal">-desktop</span><span class="literal">-full</span></span><br></pre></td></tr></table></figure><p>可能有包无法下载，所以执行完之后，输入命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> sudo apt<span class="literal">-get</span> install ros<span class="literal">-kinetic</span><span class="literal">-desktop</span><span class="literal">-full</span> –fix<span class="literal">-missing</span></span><br></pre></td></tr></table></figure><p>将检查是否有漏的包，并且自动进行相关的设置</p><blockquote><p><img src="https://img-blog.csdnimg.cn/20200909234101581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>5. 初始化rosdep</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> sudo rosdep init</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> rosdep update</span><br></pre></td></tr></table></figure><blockquote><p><img src="https://img-blog.csdnimg.cn/20200909234436782.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alr"><img src="https://img-blog.csdnimg.cn/20200909234446771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"></p></blockquote><ol start="6"><li>设置环境变量</li></ol><p>（默认）终端为bash的：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> <span class="built_in">echo</span> <span class="string">&quot;source /opt/ros/kinetic/setup.bash&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="variable">$</span> source ~/.bashrc</span><br></pre></td></tr></table></figure><p>zsh终端的：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> <span class="built_in">echo</span> <span class="string">&quot;source /opt/ros/kinetic/setup.zsh&quot;</span> &gt;&gt; ~/.zshrc</span><br><span class="line"><span class="variable">$</span> source ~/.zshrc</span><br></pre></td></tr></table></figure><blockquote><p>若不知道自己是什么终端的，可以输入 <code>$ env</code> 查看<br><img src="https://img-blog.csdnimg.cn/20200909234808788.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>7. （选）你还可以安装 rosinsall  ROS中的一个常用工具，来便于后续的开发</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> sudo apt<span class="literal">-get</span> install python<span class="literal">-rosinstall</span> python<span class="literal">-rosinstall</span><span class="literal">-generator</span> python<span class="literal">-wstool</span> <span class="built_in">build-essential</span></span><br></pre></td></tr></table></figure><blockquote><p><img src="https://img-blog.csdnimg.cn/20200909235002169.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"></p></blockquote><p><strong>附：<code>$ apt-cache search package</code>   可以用来查询是否已经安装某个package</strong></p><p> <strong>到此，ROS 也已经安装完成了。</strong></p><p>输入 <strong><code>$ roscore</code></strong>  即可启动ROS了</p><blockquote><p><img src="https://img-blog.csdnimg.cn/20200909235148976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"></p></blockquote><hr><h2 id="运行小海龟"><a href="#运行小海龟" class="headerlink" title="运行小海龟"></a>运行小海龟</h2><ol><li><p>启动ROS。先打开一个终端，然后输入命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> roscore</span><br></pre></td></tr></table></figure></li><li><p>启动turtlesim仿真节点。再打开一个终端，输入命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> rosrun turtlesim turtlesim_node</span><br></pre></td></tr></table></figure></li><li><p>再打开一个终端，使得可以用键盘上的方向键操控小乌龟：</p></li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> rosrun turtlesim turtle_teleop_key</span><br></pre></td></tr></table></figure><blockquote><p><img src="https://img-blog.csdnimg.cn/20200909235510599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"></p></blockquote><h3 id="到此，你的ROS已经能够正常运行啦！"><a href="#到此，你的ROS已经能够正常运行啦！" class="headerlink" title="到此，你的ROS已经能够正常运行啦！"></a>到此，你的ROS已经能够正常运行啦！</h3><p><strong>开始进阶学习吧~</strong> </p><hr>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> ROS </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
