<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>包含块</title>
      <link href="//study/%E5%89%8D%E7%AB%AF/%E5%8C%85%E5%90%AB%E5%9D%97/"/>
      <url>//study/%E5%89%8D%E7%AB%AF/%E5%8C%85%E5%90%AB%E5%9D%97/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表</title>
      <link href="//study/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/"/>
      <url>//study/%E7%AE%97%E6%B3%95/%E9%93%BE%E8%A1%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="链表"><a href="#链表" class="headerlink" title="链表"></a>链表</h1>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数组</title>
      <link href="//study/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/"/>
      <url>//study/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/</url>
      
        <content type="html"><![CDATA[<h1 id="数组"><a href="#数组" class="headerlink" title="数组"></a>数组</h1><h2 id="二分查找法"><a href="#二分查找法" class="headerlink" title="二分查找法"></a>二分查找法</h2><p><a href="https://leetcode.cn/problems/binary-search/description/">LeetCode 704</a></p><p>遵循原则：左闭右开（推荐） | 左闭右闭 | 左开 可以但不推荐</p><p>[left, right]|<u>[left, right)</u>| (left, right] | (left, right)</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">left = <span class="number">0</span></span><br><span class="line">right = num.<span class="property">size</span> - <span class="number">1</span></span><br><span class="line"><span class="comment">// num = [1,1]</span></span><br><span class="line"><span class="comment">// 这里面填什么符号，应当先考虑遵循上面的什么原则</span></span><br><span class="line"><span class="comment">// 如果是左闭右闭 [left, right], 考虑 left == right 区间是否合法成立, 成立就可以填&#x27;=&#x27;号</span></span><br><span class="line"><span class="comment">// 同理如果是左闭右开 [left, right), left == right 时 区间不合法，所以不可以填&#x27;=&#x27;号</span></span><br><span class="line"><span class="keyword">while</span>(left __ right)&#123;</span><br><span class="line">    middle = (left+right)/<span class="number">2</span><span class="comment">// 这里需要考虑是否会溢出越界</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">// target在middle的左边，需要更新 左区间的右边界 right</span></span><br><span class="line">    <span class="keyword">if</span>(nums[middle] &gt; target)&#123;</span><br><span class="line">        <span class="comment">// 这里同样需要考虑遵循什么原则</span></span><br><span class="line">        right = middle - <span class="number">1</span>  <span class="comment">// 左闭右闭的话, 当前循环已经考虑过了nums[middle]这个位置了, 所以在下一次循环的时候就不再需要考虑nums[middle], 直接从middle的前一位开始考虑</span></span><br><span class="line">    right = middle <span class="comment">// 左闭右开的话, 当前循环还未考虑nums[middle]这个位置了, 所以在下一次循环的时候需要考虑nums[middle]</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// target在middle的右边，需要更新 右区间的左边界 left</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span>(nums[middle] &lt; target)&#123;</span><br><span class="line">        left = middle + <span class="number">1</span><span class="comment">// 因为都是左闭, 所以middle位置当前循环已经考虑过了, 所以从下一位开始考虑</span></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">return</span> middle</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> -<span class="number">1</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 算法 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CSS 属性计算过程</title>
      <link href="//study/%E5%89%8D%E7%AB%AF/CSS%20%E5%B1%9E%E6%80%A7%E8%AE%A1%E7%AE%97%E8%BF%87%E7%A8%8B/"/>
      <url>//study/%E5%89%8D%E7%AB%AF/CSS%20%E5%B1%9E%E6%80%A7%E8%AE%A1%E7%AE%97%E8%BF%87%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS-属性计算过程"><a href="#CSS-属性计算过程" class="headerlink" title="CSS 属性计算过程"></a>CSS 属性计算过程</h1><p>总的来讲，属性值的计算过程，分为如下这么 4 个步骤:</p><ol><li>确定声明值</li><li>层叠冲突</li><li>使用继承</li><li>使用默认值</li></ol><p><em>MDN:</em> <a href="https://developer.mozilla.org/zh-CN/docs/Learn/CSS/Building_blocks/">层叠、优先级与继承</a></p><h2 id="确定声明值"><a href="#确定声明值" class="headerlink" title="确定声明值"></a>确定声明值</h2><p>所谓声明值就是作者自己所书写的 CSS 样式, 例如:</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里我们声明了 p 元素为红色，那么就会应用此属性设置。</p><p>当然，除了作者样式表，一般浏览器还会存在 <strong>用户代理样式表 User agent Stylesheet</strong> (即浏览器默认的样式表), 简单来讲就是浏览器 内置 了一套样式表。</p><p>![元素样式](E:_Project_git仓库\ImageHost\ImageHost\CSS 属性计算过程\2022-08-13-063500.png)</p><p>在图中，作者样式表中设置了 color 属性，而用户代理样式表中设置了像这些值：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attribute">display</span></span><br><span class="line">    <span class="attribute">margin-block-start</span></span><br><span class="line">    <span class="attribute">margin-block-end</span></span><br><span class="line">    <span class="attribute">margin-inline-start</span></span><br><span class="line">    <span class="attribute">margin-inline-end</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这些值目前来讲也没有什么冲突，因此最终就会应用这些属性值。</p><h2 id="层叠冲突"><a href="#层叠冲突" class="headerlink" title="层叠冲突"></a>层叠冲突</h2><p>在确定声明值时，可能出现一种情况，那就是声明的样式规则发生了冲突。</p><p>此时会进入解决层叠冲突的流程。而这一步又可以细分为下面这三个步骤：</p><ul><li>比较源的重要性<ul><li>比较优先级<ul><li>比较次序</li></ul></li></ul></li></ul><h3 id="比较源的重要性"><a href="#比较源的重要性" class="headerlink" title="比较源的重要性"></a>比较源的重要性</h3><p>整体来讲有三种来源：</p><ul><li>浏览器会有一个基本的样式表来给任何网页设置默认样式。这些样式统称 <strong>用户代理样式</strong> 。</li><li>网页的作者可以定义文档的样式，这是最常见的样式表，称之为 <strong>页面作者样式</strong> 。</li><li>浏览器的用户，可以使用自定义样式表定制使用体验，称之为 <strong>用户样式</strong> 。</li></ul><p>对应的重要性顺序依次为：页面作者样式 &gt; 用户样式 &gt; 用户代理样式</p><p>更详细的来源重要性比较，可以参阅 <em>MDN</em>：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Cascade">CSS 层叠样式表 CSS层叠</a></p><table><thead><tr><th></th><th>来源</th><th>重要程度</th></tr></thead><tbody><tr><td>1</td><td>用户代理</td><td>普通</td></tr><tr><td>2</td><td>用户</td><td>普通</td></tr><tr><td>3</td><td>页面作者</td><td>普通</td></tr><tr><td>4</td><td>CSS 动画</td><td>见下节</td></tr><tr><td>5</td><td>页面作者</td><td>!important</td></tr><tr><td>6</td><td>用户</td><td>!important</td></tr><tr><td>7</td><td>用户代理</td><td>!important</td></tr><tr><td>8</td><td>css 过渡 (css transitions)</td><td></td></tr></tbody></table><h3 id="比较优先级"><a href="#比较优先级" class="headerlink" title="比较优先级"></a>比较优先级</h3><p>源的重要性是相同的，此时会以 <strong>选择器的权重</strong> 来比较重要性</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.test</span> <span class="selector-tag">h1</span>&#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很明显，上面的选择器的权重要大于下面的选择器，因此最终标题呈现为 <em>50px</em>。</p><p>在浏览器中可以看到，落败的作者样式在 <em>Elements&gt;Styles</em> 中会被划掉。</p><p>关于选择器的权重计算方式，可以查阅 <em>MDN</em>：<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Specificity">CSS：层叠样式表 - 优先级</a></p><table><thead><tr><th></th><th>选择器类型</th><th>例子</th></tr></thead><tbody><tr><td>1</td><td>类型选择器</td><td><code>h1</code></td></tr><tr><td></td><td>伪元素</td><td><code>::before</code></td></tr><tr><td>2</td><td>类选择器</td><td><code>.example</code></td></tr><tr><td></td><td>属性选择器</td><td><code>[type=&quot;radio&quot;]</code></td></tr><tr><td></td><td>伪类</td><td><code>:hover</code></td></tr><tr><td>3</td><td>ID 选择器</td><td><code>#example</code></td></tr></tbody></table><blockquote><p>注意：以下的选择器对优先级 <strong>没有</strong> 影响</p><ul><li>通配选择器 <code>*</code></li><li>关系选择器<ul><li><code>+</code>   <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Next-sibling_combinator">接续兄弟组合器</a></li><li><code>&gt;</code>   <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Child_combinator">子组合器</a></li><li><code>~</code>   <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Subsequent-sibling_combinator">后续兄弟选择器</a></li><li><code>&quot; &quot;</code> <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Descendant_combinator">后代选择器(一个空格)</a></li><li><code>||</code>  <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Column_combinator">列组合器</a></li></ul></li><li>否定伪类 <code>:not</code> (但是，在 <code>:not()</code> 内部声明的选择器会影响优先级)。</li></ul></blockquote><h3 id="比较次序"><a href="#比较次序" class="headerlink" title="比较次序"></a>比较次序</h3><p>这一步判断和确定的是，样式声明既是同源，权重也相同的情况下, 比较样式声明的次序</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span> &#123;</span><br><span class="line"><span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>此时位于下面的样式声明会层叠掉上面的那一条样式声明，最终会应用 <em>20px</em> 这一条属性值</p><h2 id="使用继承"><a href="#使用继承" class="headerlink" title="使用继承"></a>使用继承</h2><p>层叠冲突这一步完成后，解决了相同元素被声明了多条样式规则究竟应用哪一条样式规则的问题。</p><p>那么没有声明的属性呢？此时还有第三个步骤，那就是使用继承而来的值。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在上面的代码中，我们针对 div 设置了 color 属性值为红色，而针对 p 元素我们没有声明任何的属性<br>但是由于 color 是<strong>可以继承</strong>的，因此 p 元素从<strong>最近</strong>的 div 身上继承到了 color 属性的值</p><p>有两点需要注意，一个是属性可以继承，一个是最近的元素：</p><ol><li><p>最近的元素</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;test&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">p</span>&gt;</span>Lorem ipsum dolor sit amet.<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">div</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.test</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br></pre></td></tr></table></figure><p> 因为这里并不涉及到选中 p 元素声明 color 值，而是从父元素上面继承到 color 对应的值，因此这里是 <strong>谁近就听谁</strong> 的<br> 这里根本不会涉及到权重比较，因为压根儿就没有选中到 p 元素</p></li><li><p>哪些属性能够继承</p><p> 可以通过 <em>MDN</em> 查看，比如 <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/color#%E5%BD%A2%E5%BC%8F%E5%AE%9A%E4%B9%89">color &gt; 形式定义 &gt; 是否是继承属性</a></p></li></ol><h2 id="使用默认值"><a href="#使用默认值" class="headerlink" title="使用默认值"></a>使用默认值</h2><p>如果上述步骤都还未确定属性值，那就只能使用默认值了</p><p>一个 HTML 元素要在浏览器中渲染出来，必须具备所有的 CSS 属性值</p><p>但是绝大部分我们是不会去设置的，<strong>用户代理样式表</strong> 里面也不会去设置，也无法从继承拿到</p><p>因此最终都是用默认值</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>浏览器-Chrome</title>
      <link href="//study/%E5%89%8D%E7%AB%AF/Browser-Chrome/"/>
      <url>//study/%E5%89%8D%E7%AB%AF/Browser-Chrome/</url>
      
        <content type="html"><![CDATA[<h1 id="入门小知识"><a href="#入门小知识" class="headerlink" title="入门小知识"></a>入门小知识</h1><h2 id="何为进程"><a href="#何为进程" class="headerlink" title="何为进程"></a>何为进程</h2><p>程序运行需要开辟专属于自己的内存空间, 这部分可以简单理解为进程。</p><p><strong>进程</strong> 是程序的实体。</p><p><strong>进程</strong> 是系统进行资源分配的基本单位, 是操作系统结构的基础。</p><p><strong>进程</strong> 是 <strong>线程</strong> 的容器。</p><p>每个应用都至少有一个进程。进程之间相互独立, 进程之间需要通信需要双方同意。</p><h2 id="何为线程"><a href="#何为线程" class="headerlink" title="何为线程"></a>何为线程</h2><p>线程是OS能够进行运算调度的最小单位。</p><p>它是进程中运行代码的实际单位。</p><p>一个进程至少有一个线程, 所以在进程开启后 会自动创建一个线程来运行代码, 该线程称之为主线程。</p><p>如果程序需要同时执行多块代码, 主线程就会启动更多的线程来执行代码, 所以一个进程中可以包含多个线程。</p><h2 id="抽象理解"><a href="#抽象理解" class="headerlink" title="抽象理解"></a>抽象理解</h2><p>可以把一个应用(进程)比作一个产品工厂</p><p>这个工厂会有一个厂长 → 主线程, 主线程负责把控方向, 调度人员, 完成一些高难度的、主要的任务</p><p>一个生产产品的工厂只有一个厂长肯定是不行的, 所以厂长就请了很多的员工, 并未不同的员工分配不同的工作</p><p>这也就是 主线程 创建新的线程, 新的线程可以执行其他的任务(子线程)</p><br><hr><br><h1 id="浏览器"><a href="#浏览器" class="headerlink" title="浏览器"></a>浏览器</h1><p><strong>浏览器是一个 多进程 多线程 的应用程序</strong></p><p>谷歌浏览器里, 通过右击顶部的标签栏, 可以打开任务管理器 <code>Shift + Esc</code></p><p>Windows 也可以通过任务管理器查看</p><p>一个pid就是一个进程</p><p>Chrome 目前采用的是 SOA 架构, 主要特点是将应用程序的不同的 Service 进行拆分, 并通过这些服务之间定义良好的接口和协议联系起来。</p><h2 id="浏览器的主要进程"><a href="#浏览器的主要进程" class="headerlink" title="浏览器的主要进程"></a>浏览器的主要进程</h2><ol><li><p>浏览器进程</p><p>主要负责界面展示, 用户交互, 子进程管理等。浏览器进程内部会启动多个线程处理不同的任务。</p></li><li><p>GPU进程</p><p>如果有GPU, 就会创建GPU进程, 用于加速后面的页面渲染。其他进程&#x2F;线程不能直接调用GPU, 得通过GPU进程调用</p></li><li><p>网络进程</p><p>主要负责处理网络资源加载, 请求响应, 校验 CORS。网络进程内部也会启动多个线程来处理不同的网络任务。</p></li><li><p>存储进程</p><p>为 local&#x2F;session storage, service worker, indexed_db 提供存储服务。</p></li><li><p>渲染(Renderer)进程**(重点)**</p><p>负责页面的渲染和 JavaScript 脚本的执行。</p><p>渲染进程启动后, 会开启一个<strong>渲染主线程</strong>, 主线程负责执行 HTML、CSS、JS 代码。</p><p>默认情况下, 浏览器会为每个标签页开启一个新的渲染进程, 以保证不同的标签页之间不相互影响, 无关乎是否为 same-site 站点(目前)。</p><p>将来该默认模式可能会有所改变, 更多参见 <a href="https://chromium.googlesource.com/chromium/src/+/main/docs/process_model_and_site_isolation.md#Modes-and-Availability">chrome官方说明文档</a></p><p>同时 V8 和 Blink 也都运行在该进程中。</p></li><li><p>Service Worker 服务工作线程, 属后台脚本</p></li><li><p>插件进程</p><p>负责插件运行, 根据插件的功能决定是否运行在 Sandbox 环境</p></li></ol><h2 id="渲染进程"><a href="#渲染进程" class="headerlink" title="渲染进程"></a>渲染进程</h2><h3 id="渲染主线程"><a href="#渲染主线程" class="headerlink" title="渲染主线程"></a>渲染主线程</h3><h4 id="主要工作内容"><a href="#主要工作内容" class="headerlink" title="主要工作内容"></a>主要工作内容</h4><p>渲染主线程是浏览器中最繁忙的线程, 需要它处理的任务包括但不限于：</p><ul><li>执行全局 JS 代码</li><li>解析 HTML</li><li>解析 CSS</li><li>计算样式</li><li>布局</li><li>处理图层</li><li>每秒把页面画 60 次(页面刷新的帧率)</li><li>执行事件处理函数</li><li>执行计时器的回调函数</li><li>……</li></ul><h4 id="如何调度执行"><a href="#如何调度执行" class="headerlink" title="如何调度执行"></a>如何调度执行</h4><p>比如：</p><ul><li>我正在执行一个 JS 函数, 执行到一半的时候用户点击了按钮, 我该立即去执行点击事件的处理函数吗？</li><li>我正在执行一个 JS 函数, 执行到一半的时候某个计时器到达了时间, 我该立即去执行它的回调吗？</li><li>浏览器进程通知我“用户点击了按钮”, 与此同时, 某个计时器也到达了时间, 我应该处理哪一个呢？</li><li>……</li></ul><p>于是就有了这样一个 <strong>事件循环</strong> 的模型, 任务通过排队来交给渲染主线程来执行。</p><p><img src="https://gitee.com/xiliding/ImageHost/raw/master/Browser-Chrome/202208092230847.png" alt="事件循环"></p><h4 id="为什么渲染进程不适用多个线程来处理这些事情"><a href="#为什么渲染进程不适用多个线程来处理这些事情" class="headerlink" title="为什么渲染进程不适用多个线程来处理这些事情"></a>为什么渲染进程不适用多个线程来处理这些事情</h4><p>浏览器渲染进程通常是单线程的, 这是因为多线程处理可能会引发很多问题。以下是一些可能的问题：</p><ul><li>竞态条件：多线程处理会导致访问共享内存的竞争条件, 可能导致数据不一致和死锁等问题。</li><li>同步问题：多线程需要进行同步, 避免数据竞争和死锁, 这会增加代码的复杂度和开销。</li><li>安全问题：多线程可能会存在安全漏洞, 如数据泄露、内存溢出等问题。</li><li>性能问题：多线程处理可能会导致过多的上下文切换和内存消耗, 从而降低程序的性能和稳定性。</li></ul><p>相比之下, 单线程处理有以下优点：</p><ul><li>简单易用：单线程的处理方式更加简单易用, 开发人员不需要考虑多线程处理中的竞态条件、同步问题和安全问题。</li><li>可靠稳定：单线程处理避免了多线程处理中的死锁和资源争用等问题, 从而提高了程序的可靠性和稳定性。</li><li>高效节省：单线程处理可以避免多线程处理中的上下文切换和内存消耗等问题, 从而提高了程序的性能和节省了系统资源。</li></ul><p>虽然单线程处理可能会存在一些缺点, 如无法充分利用多核CPU等问题, 但是它是目前浏览器渲染进程的常用处理方式, 可以通过事件循环和异步编程等技术来提高程序的性能和并发处理能力。</p><p>参考: <a href="https://blog.csdn.net/qq_44063746/article/details/130624809">为什么渲染进程不适用多个线程来处理事情</a></p><h3 id="事件循环"><a href="#事件循环" class="headerlink" title="事件循环"></a>事件循环</h3><h4 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h4><p>W3C的官方称法是: <a href="https://html.spec.whatwg.org/multipage/webappapis.html#event-loop">Event Loop</a></p><p>Chrome 的称法是: <a href="https://source.chromium.org/chromium/chromium/src/+/main:ppapi/cpp/message_loop.h;l=135?q=messageloop">Message Loop</a></p><p><a href="https://source.chromium.org/chromium/chromium/src/+/main:third_party/blink/public/platform/task_type.h;l=80?q=event-loop">This task source is used when an algorithm requires a microtask to be queued.</a></p><p>下面整个 <strong>执行</strong> 的过程, 称为事件循环。</p><h4 id="执行"><a href="#执行" class="headerlink" title="执行"></a>执行</h4><ol><li>在最开始的时候,  <strong>渲染主线程</strong> 会进入无限循环</li><li>每一次循环都会按优先级检查 <strong>消息队列</strong> 是否存在任务<ul><li>若队列不为空, 则取出第一个任务, 并交给渲染主线程进行执行, 执行完之后进入下一次循环</li><li>若队列为空, 则进入休眠状态</li></ul></li><li>其他的所有线程, 包括其他进程的线程, 都可以随时向 <strong>消息队列</strong> 的末尾添加任务<ul><li>若主线程为休眠状态, 则会进行唤醒</li></ul></li></ol><h3 id="消息队列"><a href="#消息队列" class="headerlink" title="消息队列"></a>消息队列</h3><p>事件循环需要有一个或多个 <strong>任务队列</strong> 以及一个 <strong>微任务队列</strong> , 任务队列是一组任务。</p><p>任务队列是 <strong>有序集</strong> , 不是队列。</p><p>因为 <strong>事件循环处理模型</strong> 是从所选队列中获取第一个可运行的任务 , 而不是使第一个任务出队。</p><p>微任务队列不是任务队列。</p><p>来源: <a href="https://html.spec.whatwg.org/multipage/webappapis.html#event-loop">W3C - HTML Standard</a></p><h4 id="队列类型"><a href="#队列类型" class="headerlink" title="队列类型"></a>队列类型</h4><ul><li>微队列(必须有) 优先级(最高): 用户存放需要最快执行的任务</li><li>交互队列  优先级(最高): 用于存放用户操作后产生的事件处理任务</li><li>延时队列  优先级(中): 用于存放计时器到达后的回调任务</li><li>……</li></ul><blockquote><p>添加任务到微队列的主要方式主要是使用 Promise、MutationObserver</p></blockquote><blockquote><p>根据 W3C 官方的解释, 每个任务有不同的类型, 同类型的任务必须在同一个队列, 不同的任务可以属于不同的队列。<br>不同任务队列有不同的优先级, 在一次事件循环中, 由浏览器自行决定取哪一个队列的任务。<br>但浏览器必须有一个微队列, 微队列的任务一定具有最高的优先级, 必须优先调度执行。</p></blockquote><h3 id="其他主要线程"><a href="#其他主要线程" class="headerlink" title="其他主要线程"></a>其他主要线程</h3><ul><li>网络线程</li><li>计时线程</li><li>交互线程</li><li>合成线程</li><li>……</li></ul><h2 id="网络进程"><a href="#网络进程" class="headerlink" title="网络进程"></a>网络进程</h2><h3 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h3><ul><li><p>代码简化：无论请求来自哪个进程, 网络请求都应该以相同的方式发出。同样, 如果将来实现移动流程, 调用者不必进行更改。</p></li><li><p>性能：mojo 服务可以从任何线程调用, 从而减少线程跳数。它还可以使用 Blink 字符串类型等直接从 Blink 调用, 从而减少转换和层数。</p></li><li><p>长期来看：使用 mojo 接口并将网络代码与 chrome 代码隔离意味着我们最终可以将网络代码移至单独的进程, 以提高稳定性和安全性。这还允许我们在 Chrome 未运行时(即在带有 ARC++ 的 ChromeOS 上)或在所有平台上(可能来自 Service Worker)而不运行浏览器时从其他 Mojo 应用程序发出网络请求。</p></li></ul><p>参考：</p><ul><li>源码: <a href="https://chromium.googlesource.com/chromium/src/+/aa575cd9100984ba7cf7fc0377d7c5d40abbdb5f/mojo/services/network/">service model</a></li><li><a href="https://www.cnblogs.com/bigben0123/p/14918861.html">Network Service in Chrome</a></li><li><a href="https://zhuanlan.zhihu.com/p/420566623">透过 Chrome 深入理解浏览器导航过程</a></li></ul><h3 id="导航篇"><a href="#导航篇" class="headerlink" title="导航篇"></a>导航篇</h3><h4 id="解析-URI"><a href="#解析-URI" class="headerlink" title="解析 URI"></a>解析 URI</h4><p>当在地址栏输入内容按下回车后, Chrome 首先会解析内容, 判断这是URL还是搜索内容</p><ul><li>若是搜索内容则自动URL编码并拼接为默认搜索引擎的 params<br>例如谷歌搜索 <code>https://www.google.com/search?q=test</code></li><li>若是URI, 则处理URI, 添加 http 并默认访问 80 端口号<br>如 <code>test.com</code></li></ul><p><img src="https://gitee.com/xiliding/ImageHost/raw/master/Browser-Chrome/v2-f6176f6362f052b644a3508e4f18f477_r.jpg" alt="img"></p><br><blockquote><p>在 Chrome 层面, 如果你的地址栏原本就有展示页面, 那么进行上述操作后, 会触发当前页面的 <code>beforeunload</code> 与 <code>unload</code> 事件。</p><p>同时浏览器标签进入 loading 图标状态。</p><p>新页面有两个重要的时间节点, 在渲染篇会详细介绍:</p><p><code>interactive</code>: 它表示浏览器已经完成了 HTML parser 、Recalculate Style、Layout Tree、Render Tree、draw list 等工作。</p><p><code>complete</code>: 它表示浏览器已经完成页面渲染, 这会替换掉本窗口原本的位图, 显示最新的界面。</p><p>在 <code>interactive</code> 与 <code>complete</code> 之间, 就是渲染进程中的合成线程的工作位置, Chrome 渲染进程基于 skia 进行 2D 界面元素的绘制。</p></blockquote><br><h4 id="构建请求"><a href="#构建请求" class="headerlink" title="构建请求"></a>构建请求</h4><p>通过 URI Check 后, Chrome 需要为它创建 get 请求</p><p>Chrome 主进程需要通过 IPC 把构建请求的任务委托给 NetWork Service 负责此任务。</p><p>NetWork Service 接受任务后, 创建了 get 请求, 其中请求行由 请求方法 + 请求路径 + HTTP 版本号 组成;请求头信息由 Chrome 内置提供。</p><p><img src="https://gitee.com/xiliding/ImageHost/raw/master/Browser-Chrome/v2-7cb2090fbe9bfb8bb63463b5f11cd92d_720w.webp" alt="img"></p><h4 id="查找强缓存"><a href="#查找强缓存" class="headerlink" title="查找强缓存"></a>查找强缓存</h4><p>NetWork Service 会委托 Storage Service 依次在</p><ul><li>service work cache<ul><li>memory cache<ul><li>disk cache<ul><li>push cache(HTTP2 Stream)</li></ul></li></ul></li></ul></li></ul><p>中寻找对应的 URI 是否有可用的强缓存, 如果存在强缓存, 则直接使用缓存进入浏览器解析环节, 否则进入 <strong>DNS 解析</strong> 。</p><h4 id="DNS-解析"><a href="#DNS-解析" class="headerlink" title="DNS 解析"></a>DNS 解析</h4><p>若强缓存不存在或过期时, NetWork Service 继续将报文发送至接收端。</p><p>这需要 OS 的配合, 首先需要将报文委托给 OS 至协议栈, 但 OS 无法识别报文对应的 domain , 因此无法提供相应帮助。</p><p>我们必须提供 IP 地址。将指定域名转换成 IP 的工作是由 <strong>DNS 服务器</strong> 提供。</p><h5 id="DNS-层级"><a href="#DNS-层级" class="headerlink" title="DNS 层级"></a>DNS 层级</h5><ul><li>根域 DNS 服务器: 不保存具体的域名信息, 但它是通向所有顶级域 DNS 服务器的总入口</li><li>顶级域 DNS 服务器: 代表不同的域名后缀服务器, 如 cn、com、tech 等。同样不保存具体的域名信息, 是通往对应后缀权威 DNS 服务器的总入口</li><li>权威 DNS 服务器: 正如其名, 代表着对应 Domain 映射 IP 的权威。它是存储映射关系的真实服务器。</li></ul><p><img src="https://gitee.com/xiliding/ImageHost/raw/master/Browser-Chrome/v2-c19803939b273343c2799f032465296a_r.jpg" alt="img"></p><blockquote><p>Chrome 从 83 版本开始正式开始了 DOH 即 DNS-over-HTTPS<br>主要目的是防止原本的 DNS 请求因为是 HTTP 明文传输导致容易被中间人篡改, 因此 DOH 就是批着 TLS 的 DNS 请求。</p></blockquote><h5 id="Hosts"><a href="#Hosts" class="headerlink" title="Hosts"></a>Hosts</h5><p>域名解析也存在本地定制化入口 Hosts。</p><p>它是一个本地的关联 “数据库”, 将 Domain 与 IP 地址相对应。解析优先级大于 DNS 服务。</p><h5 id="DNS-解析流程"><a href="#DNS-解析流程" class="headerlink" title="DNS 解析流程"></a>DNS 解析流程</h5><p>以访问 <code>http://www.test.com</code> 为例, DNS 的解析流程如下:</p><ol><li><p>查看 <code>hosts</code> 是否存储目标 domain 和 IP 地址的映射关系</p><ul><li>若找到则直接返回给客户端</li><li>若 <code>hosts</code> 不存在对应 domain, 客户端建立 DNS 请求, 问询<code>本地 DNS 服务器</code> Domain 对应的 IP 地址</li></ul></li><li><p>本地 DNS 服务器收到请求后, 首先查看 <code>DNS 缓存</code>能否找到 domain 对应的 IP 地址</p><ul><li>若找到则直接返回给客户端</li><li>若 DNS 缓存中不存在, 则找到自身记录的<code>根域 DNS 地址</code>并发起请求问询<code>根域服务器</code> Domain 对应的 IP 地址。</li></ul></li><li><p>根域服务器不保存具体的数据, 但是指明了我们接下来询问的目标: 对应 <code>com</code> 的顶级域名服务器地址。</p></li><li><p>本地 DNS 服务器收到根域的回应后, 继续问询 <code>com</code> 的<code>顶级域名服务器</code>。</p></li><li><p><code>顶级域名服务器</code>同理会返回相对应 <code>test.com</code> 的权威服务器地址。</p></li><li><p>本地服务器继续问询<code>权威服务器</code>, 它是域名解析结果的原出处, 也是最后一次问询。</p></li><li><p>权威 DNS 服务器返回域名对应的 IP 地址给客户端。</p></li><li><p>本地 DNS 服务器缓存结果。将 IP 发给 OS。</p></li><li><p>OS 返回 IP 至 Chrome NetWork Service。</p></li></ol><p>这下 NetWork Service 已经万事俱备。终于可通过 socket library 将数据委托给 OS 以进入协议栈。</p><p>同时也标志着即将离开 OSI 应用层。</p><h4 id="协议栈"><a href="#协议栈" class="headerlink" title="协议栈"></a>协议栈</h4><p>请求数据包在 OS 的帮助下进入协议栈。</p><p>工作在应用层与传输层中间的协议栈会处理对应 H2 的 Hpack 和 Stream</p><p>如果 domain 使用了 TLS &#x2F; SSL 协议, 那么 OS 会从本地加密套件列表中选取加密套件, 并将信息添加至数据包。</p><h5 id="传输层"><a href="#传输层" class="headerlink" title="传输层"></a>传输层</h5><p>至此数据包来到协议簇上层, 它表示工作在传输层和网络层相关的协议总称。</p><p>协议簇分为上下两个部分, 分别承担不同的工作且上下层关系有一定的规则。</p><p>上层完成部分工作后会委托下层继续执行。</p><p>在上层协议簇中最先映入眼帘的便是负责数据包收发的 TCP &#x2F; UDP</p><h5 id="TCP-x2F-IP-协议簇下层"><a href="#TCP-x2F-IP-协议簇下层" class="headerlink" title="TCP &#x2F; IP 协议簇下层"></a>TCP &#x2F; IP 协议簇下层</h5><p>TCP 是面向一对一链接, 可靠有状态且基于字节流的协议。</p><p>在 HTTP 传输数据之前, 首先需要 TCP 建立连接, TCP 连接的建立, 通常称为三次握手。​</p><p>在传输层执行连接、收发、断开等各阶段操作都需要委托 IP 协议将数据包封装成网络包发送给通信对象。</p><p>其中最重要的是 <strong>源IP</strong> 与 <strong>目标IP</strong></p><ul><li><strong>源IP</strong> , 即当前客户端的 IP 地址</li><li><strong>目标IP</strong> , 即 DNS 域名解析得到的接收端服务器 IP</li></ul><h5 id="ARP"><a href="#ARP" class="headerlink" title="ARP"></a>ARP</h5><ul><li>ARP缓存</li><li>MAC地址</li></ul><h5 id="ICMP"><a href="#ICMP" class="headerlink" title="ICMP"></a>ICMP</h5><p>ICMP 协议是 IP 的一个组成部分, 必须由每个IP模块实现。</p><p>主要用于在 IP 主机、路由器之间传递<strong>控制消息</strong>。</p><p><strong>控制消息</strong>是指网络通不通、主机是否可达、路由是否可用等网络本身的消息。</p><h2 id="页面渲染"><a href="#页面渲染" class="headerlink" title="页面渲染"></a>页面渲染</h2><p>浏览器获取到html文本之后, 会对文本进行解析, 最终将页面呈现在屏幕上</p><p>主要是<strong>渲染进程</strong>里的<strong>渲染主线程</strong></p><h3 id="解析-HTML-Parse-HTML"><a href="#解析-HTML-Parse-HTML" class="headerlink" title="解析 HTML - Parse HTML"></a>解析 HTML - Parse HTML</h3><ol><li><p>预解析</p><ol><li>为了提高解析效率, 浏览器会启动一个 <strong>预解析器(预解析线程)</strong> 率先下载和解析CSS</li><li>浏览器获得HTML文本之后, 会先快速浏览 需要网络加载的资源, (优先CSS和head中的资源, 也有JS)<br>当 <strong>渲染主线程</strong> 遇到这些资源的时候, 若 <strong>预解析线程</strong> 负责就会直接跳过, 而不会阻塞主线程(所以CSS不会阻塞)</li><li>然后 <strong>预解析线程</strong> 将这些网络资源交给 <strong>网络线程</strong><ul><li>这里的 <strong>网络线程</strong> 是 <strong>渲染进程</strong> 里创建线程</li><li>后续这里的 <strong>网络线程</strong> 还会委托 <strong>网络进程 NetWork Service</strong> 请求资源</li><li>得到资源后, 会把资源返回给 <strong>预解析线程</strong> 进行解析</li><li>之后会把解析后的结果交给 <strong>渲染主线程</strong> , 由 <strong>渲染主线程</strong> 生成 <strong>CSSOM 树</strong></li></ul></li></ol><p><img src="https://gitee.com/xiliding/ImageHost/raw/master/Browser-Chrome/image-20231217134703332.png" alt="预解析 - CSS"></p></li><li><p><strong>渲染主线程</strong> 遇到 <strong>JavaScript&#x2F;script标签</strong> 时, 必须停止一切行为, 执行 JS 代码, 若需要下载, 则等待预解析线程的返回</p><ul><li>若没下载完成, 则等待下载完成</li><li>若预解析线程下载完成, 则直接返回给 <strong>渲染主线程</strong> 执行代码</li></ul><p>之所以需要停止一切行为来执行 JS 代码, 是因为有可能存在 对在 JS 代码之前 已解析的DOM进行操作<br><img src="https://gitee.com/xiliding/ImageHost/raw/master/Browser-Chrome/image-20231217134806606.png" alt="预解析 - JS"></p></li><li><p><strong>渲染主线程</strong> 会将文本形式的HTML转换成可操作的对象, 并生成 DOM 树和 CSSOM 树</p><ul><li>DOM 树:   Document Object Modle, 控制台通过 <code>document</code> 或 <code>console.dir(document)</code> 输出查看</li><li>CSSOM 树: CSS Object Modle, 控制台通过 <code>document.styleSheets</code> 输出查看</li></ul><p><img src="https://gitee.com/xiliding/ImageHost/raw/master/Browser-Chrome/image-20231211184759472.png" alt="DOM Tree"><br><img src="https://gitee.com/xiliding/ImageHost/raw/master/Browser-Chrome/image-20231211185250997.png" alt="CSSOM Tree"></p></li></ol><h4 id="样式类别"><a href="#样式类别" class="headerlink" title="样式类别"></a>样式类别</h4><ul><li>内部样式: <code>&lt;style&gt;</code></li><li>外部样式: <code>&lt;link&gt;</code></li><li>内联样式表&#x2F;行内样式表: <code>&lt;div style=&quot;&quot;&gt;</code></li><li>浏览器默认样式表 (F12查看元素样式, 其中的 <strong>User agent Stylesheet</strong> )</li></ul><p>一个样式表(上面都是不同的样式表), 对应 <strong>CSSOM 树</strong> 中的一个 <strong>CSSStyleSheet</strong></p><h3 id="样式计算-Recalculate-Style"><a href="#样式计算-Recalculate-Style" class="headerlink" title="样式计算 - Recalculate Style"></a>样式计算 - Recalculate Style</h3><blockquote><p>CSS属性值的计算过程(层叠、继承、优先级等) <strong>在其他md里呈现:</strong> <strong>[CSS 属性计算过程](.&#x2F;CSS 属性计算过程.md)</strong><br>视觉格式化模型(盒模型、包含块)</p></blockquote><p>这一步的目的, 是为了得到每个节点的最终样式(计算后的样式, computed style)。</p><p>每一个节点的所有CSS属性都要有值, Chrome 打开 F12 选中元素之后, 打开样式, 有个计算样式(Computed), 显示全部(Show All),<br>可以看到这个元素所有的CSS属性值</p><p>在这一过程中, 很多 <strong>预设值</strong> 会变成 <strong>绝对值</strong>, <strong>相对单位</strong> 会变成 <strong>绝对单位</strong> , 比如(字体、宽高等)大小:</p><ul><li><code>color: red;</code> 会变成具体的 <code>rgb(255,0,0)</code></li><li><code>em</code>会变成<code>px</code></li></ul><p>(但<code>%</code>是计算不了的, 得要到 <strong>布局 - Layout)</strong> 阶段 知道相对的 <strong>包含块</strong> 之后才可以进行计算)</p><p><strong>渲染主线程</strong> 会遍历得到的 DOM 树, 依次为树中的每个节点计算出它最终的样式, 称之为 Computed Style。</p><p>这一步完成后, 会得到一棵带有样式的 DOM 树。</p><p><img src="https://gitee.com/xiliding/ImageHost/raw/master/Browser-Chrome/image-20231217135125535.png" alt="带有样式的 DOM 树"></p><p>可以通过 <code>getComputedStyle()</code> 获取元素的最终样式</p><h3 id="布局-Layout"><a href="#布局-Layout" class="headerlink" title="布局 - Layout"></a>布局 - Layout</h3><p>布局完成后会得到布局树 Layout Tree, 有各种节点的几何信息、宽高尺寸以及位置</p><p>布局阶段会依次遍历 DOM 树的每一个节点, 计算每个节点的几何信息。例如节点的宽高、相对包含块的 <strong>位置</strong>。</p><p>(但页面上的尺寸和位置是相互影响的, 一个元素的尺寸或位置变了, 可能会导致整个布局层的变化)<br>(这里的 <strong>位置</strong> 是什么位置?是相对谁的位置? —— 相对 <strong>包含块</strong> 的位置, <strong>在其他md里呈现</strong>)<br>( <strong>包含块</strong> 一个元素的活动区域, 像 <strong>相对定位&#x2F;绝对定位</strong> 等)</p><p>大部分时候, DOM 树和布局树并非一一对应:</p><ul><li><p><code>display:none</code> 的节点没有几何信息, 因此不会生成到布局树</p><blockquote><p><code>&lt;head&gt;</code>元素之所以被隐藏, 就是因为被添加了 <code>display:none;</code> 在这一步因为没有几何信息所以被忽略<br><img src="https://gitee.com/xiliding/ImageHost/raw/master/Browser-Chrome/image-20231217135703750.png" alt="display:none"></p></blockquote></li><li><p>使用了伪元素选择器, 虽然 DOM 树中不存在这些伪元素节点, 但它们 <strong>拥有</strong> 几何信息, 所以会生成到布局树中</p></li></ul><blockquote><p><img src="https://gitee.com/xiliding/ImageHost/raw/master/Browser-Chrome/image-20231217135545037.png" alt="伪元素"></p></blockquote><ul><li>还有匿名行盒、匿名块盒等等都会导致 DOM 树和布局树无法一一对应<blockquote><p>内容必须在行盒中, 行盒和块盒不能相邻<br><img src="https://gitee.com/xiliding/ImageHost/raw/master/Browser-Chrome/image-20231217135359508.png" alt="匿名行盒、匿名块盒"></p></blockquote></li></ul><blockquote><p><code>Layout Tree</code> 是 <code>C++</code> 对象, 不是DOM对象, 且布局树不能使用 JavaScript 进行操作, 但可以获取部分信息, 比如 <code>document.body.clientWidth</code> 等 明显不是 CSS 属性得到的<br>是否有几何信息, 可以在浏览器 Computed 查看, 若存在盒子 即表明存在几何信息</p></blockquote><h3 id="分层-Layer"><a href="#分层-Layer" class="headerlink" title="分层 - Layer"></a>分层 - Layer</h3><blockquote><p>因为页面画出来之后, 并不是一成不变的, 是有可能会改变的<br>但每一次改变都需要全部重新渲染的话, 工作量太大 效率太低<br>因此浏览器(远古版本的没有)通过分层来提高效率。<br>页面在浏览过程中, 哪一个分层发生变化了, 浏览器就只需要重选渲染这一层即可<br>但存储分层的图层 会占用较大的内存空间, 所以会控制分层的数量<br>可以在 F12 - [更多工具More-Tools] - 图层Layers 查看</p></blockquote><p>工作过程中, <strong>渲染主线程</strong> 会使用一套复杂的策略对整个布局树中进行分层。</p><p>也可以通过改变部分 CSS 属性, 试图影响分层结果, 但最终如何分层, 还是由浏览器进行决策</p><p>部分 CSS 属性(与堆叠上下文有关的属性)可以影响分层结果(只是影响, 不一定是决定性的)</p><p>比如 <code>z-index</code> <code>opacity</code> <code>transform</code> 等样式都会或多或少的影响分层结果</p><p>还可以给通过给节点添加 <code>will-change: transform;</code> 告知浏览器 这个节点将来可能发生变化。更大程度的影响分层结果, 但还是由浏览器进行最终决策</p><blockquote><p>滚动条也会单独分一个层</p></blockquote><p><img src="https://gitee.com/xiliding/ImageHost/raw/master/Browser-Chrome/image-20231217135930959.png" alt="分层 - Layer"></p><h3 id="绘制-Paint"><a href="#绘制-Paint" class="headerlink" title="绘制 - Paint"></a>绘制 - Paint</h3><p>这一步是为每一层 生成一系列的 <strong>绘制的指令</strong></p><p><strong>绘制的指令</strong>:</p><ul><li>将画笔移动到(0,0)处</li><li>画一个200*300的矩形</li><li>用红色填充矩形</li><li>……</li></ul><blockquote><p>类似于canvas, 但canvas也是浏览器开放出来的功能, canvas调用的也是浏览器内核的功能</p></blockquote><p><strong>渲染主线程</strong> 会为每个层单独产生绘制指令集, 用于描述这一层的内容该如何画出来。</p><p>完成绘制后, <strong>渲染主线程</strong> 将每个图层的绘制信息提交给 <strong>合成线程</strong> , 剩余工作将由 <strong>合成线程</strong> 完成。</p><h3 id="分块-Tiling"><a href="#分块-Tiling" class="headerlink" title="分块 - Tiling"></a>分块 - Tiling</h3><p><strong>合成线程(Compositor)</strong> 首先对每个图层进行分块, 将其划分为更多的小区域</p><p><img src="https://gitee.com/xiliding/ImageHost/raw/master/Browser-Chrome/image-20231217132843188.png" alt="分块"></p><p>此过程会由 <strong>合成线程</strong> 启动的多个 <strong>分块线程(CompositorTileWorker)</strong> 完成</p><p>它会从 <strong>线程池</strong> 中拿取多个线程来完成分块工作。</p><p><img src="https://gitee.com/xiliding/ImageHost/raw/master/Browser-Chrome/image-20231217133027664.png" alt="合成线程 - 线程器"></p><h3 id="光栅化-Raster"><a href="#光栅化-Raster" class="headerlink" title="光栅化 - Raster"></a>光栅化 - Raster</h3><p>光栅化是将每个块变成位图, 位图就是每一个像素点的信息(如rgba等信息)<br>(这里的一个块含有多个像素点, 每个像素点含有不同的rgba等, 一个块用一个二维数组表示<code>[[rgba][rgba][rgba]...]</code>)</p><p><img src="https://gitee.com/xiliding/ImageHost/raw/master/Browser-Chrome/image-20231217132139525.png" alt="光栅化 - 位图"></p><p><strong>合成线程</strong> 会将块信息交给 <strong>GPU 进程</strong> , 以极高的速度完成光栅化。</p><p><strong>GPU 进程</strong> 会在内部开启 <strong>多个线程</strong> 来完成光栅化, 并且优先处理 <strong>靠近视口区域(浏览器窗口正在看的位置)</strong> 的块。</p><p>光栅化完成之后, <strong>GPU进程</strong> 会把位图交回给 <strong>合成线程</strong></p><p>光栅化的结果, 就是一块一块的位图</p><p><img src="https://gitee.com/xiliding/ImageHost/raw/master/Browser-Chrome/image-20231217133620932.png" alt="光栅化"></p><h3 id="画-Draw"><a href="#画-Draw" class="headerlink" title="画 - Draw"></a>画 - Draw</h3><p><strong>合成线程</strong> 拿到每个层、每个块的位图后, 生成一个个「**指引(quad)**」信息。</p><p><strong>指引</strong> 会标识出每个位图应该画到屏幕的哪个位置, 以及会考虑到旋转、缩放等变形。</p><p>变形发生在 <strong>合成线程</strong> , 与渲染主线程无关, 这就是 <code>transform</code> 效率高的本质原因<br>(<code>transform</code>是将位图 通过数学运算 矩阵运算得到)。</p><p><strong>合成线程</strong> 会把 <code>quad</code> 提交给 <strong>GPU 进程</strong>, 由 <strong>GPU 进程</strong> 产生系统调用, 提交给 <strong>GPU 硬件</strong>, 完成最终的屏幕成像。</p><blockquote><p>这里的 <strong>合成线程</strong> 之所以需要先把 <code>quad</code> 交给 <strong>GPU进程</strong><br>是因为 <strong>合成线程</strong> 在浏览器的 <strong>渲染进程</strong> 里<br>而 <strong>渲染进程</strong> 是沙盒运行的, 无法直接调用操作系统命令<br>因此需要把工作委托给浏览器的 <strong>GPU进程</strong><br>由<strong>GPU进程</strong>再去调用物理层面的GPU进行加速处理和呈现</p></blockquote><blockquote><p>因为 <strong>渲染进程</strong> 是沙盒运行的, 因此现在的浏览器较为安全, 浏览网页并不会对 OS 层面造成影响</p></blockquote><p><img src="https://gitee.com/xiliding/ImageHost/raw/master/Browser-Chrome/image-20231217133453355.png" alt="画 - Draw"></p><h3 id="什么是-Reflow"><a href="#什么是-Reflow" class="headerlink" title="什么是 Reflow"></a>什么是 Reflow</h3><p>当增删一个节点的时候, 会导致 DOM树 发生改变<br>当修改一个元素节点的CSS属性(几何尺寸 <strong>几何信息</strong> 相关)时, 会导致 CSSOM树 发生改变</p><p>这些操作, 会导致浏览器重回 <strong>样式计算 - Recalculate Style</strong> 开始进行计算样式和渲染展示</p><p>这个步骤过程就是Reflow</p><p>reflow 的本质就是重新计算 <strong>layout 树</strong>, 是因为不管是 DOM树 还是 CSSOM树 (包括样式计算), 其实最终都是影响了layout树。</p><p>当进行了会影响布局树的操作后, 需要重新计算布局树, 会引发 layout。</p><p>为了避免连续的多次操作导致布局树反复计算, 浏览器会合并这些操作, 当 JS 代码全部完成后再进行统一计算。</p><p>所以, 改动属性造成的 reflow 是异步完成的。</p><p>也同样因为如此, 当 JS 获取布局属性时, 就可能造成无法获取到最新的布局信息。</p><p>浏览器在反复权衡下, 最终决定获取属性立即 reflow。</p><p>举个例子:</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 渲染主线程</span></span><br><span class="line">   </span><br><span class="line">   dom.<span class="property">style</span>.<span class="property">width</span> = xxx</span><br><span class="line">   dom.<span class="property">style</span>.<span class="property">height</span> = xxx</span><br><span class="line">   dom.<span class="property">style</span>.<span class="property">padding</span> = xxx</span><br><span class="line">   dom.<span class="property">style</span>.<span class="property">margin</span> = xxx</span><br><span class="line"></span><br><span class="line">   <span class="comment">// 执行到这里的时候, 因为这段js代码还没有执行完, 所以上面的操作会先统一添加到 事件队列 里面等待渲染</span></span><br><span class="line">   <span class="comment">// 而不是每改变一个属性值就立即reflow</span></span><br><span class="line"></span><br><span class="line">   <span class="comment">// 但如果等到js代码完全执行完之后再进行reflow, 就会导致下面的console打印获取的是还没有渲染之前的值, 这是不正确的</span></span><br><span class="line">   <span class="comment">// 因此浏览器规定, 在读取这些属性值的时候, 主线程会先立即把上面的更改渲染拉下来 当作同步队列执行, reflow完成之后再读取这个值</span></span><br><span class="line">   <span class="comment">// 这样就能保证读取到的值是正确的</span></span><br><span class="line">   <span class="variable language_">console</span>.<span class="title function_">log</span>(dom.<span class="property">clientWidth</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="什么是-Repaint"><a href="#什么是-Repaint" class="headerlink" title="什么是 Repaint"></a>什么是 Repaint</h3><p>重绘。就是回到 <strong>绘制 - Paint</strong> 步骤, 如改变了颜色等。</p><p>repaint 的本质就是重新根据 分层信息 计算了绘制指令。</p><p>当改动了 <strong>可见样式</strong> 后, 就需要重新计算, 会引发 repaint。</p><p>由于元素的 <strong>布局信息</strong> 也属于 <strong>可见样式</strong> , 所以 reflow 一定会引起 repaint。</p><h3 id="为什么-Transform-效率高"><a href="#为什么-Transform-效率高" class="headerlink" title="为什么 Transform 效率高"></a>为什么 Transform 效率高</h3><p>因为是通过计算改变位图来实现的, 并不会改变布局。</p><p>Transform 是直接回到 <strong>画 - Draw</strong> 的步骤, 并不需要经历前面的步骤</p><p>如果是 js 改变 transform , 那会导致 CSSOM树 改变</p><p>但如果使用 animation 的话, CSSOM 都没变, 效率会极大地提高</p>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>预编译</title>
      <link href="//study/%E5%89%8D%E7%AB%AF/%E9%A2%84%E7%BC%96%E8%AF%91/"/>
      <url>//study/%E5%89%8D%E7%AB%AF/%E9%A2%84%E7%BC%96%E8%AF%91/</url>
      
        <content type="html"><![CDATA[<h1 id="预编译-AO篇"><a href="#预编译-AO篇" class="headerlink" title="预编译 - AO篇"></a>预编译 - AO篇</h1><h2 id="步骤"><a href="#步骤" class="headerlink" title="步骤"></a>步骤</h2><ol><li>创建AO对象</li><li>找形参和变量的声明，作为AO对象的属性名，值为 undefined</li><li>实参和形参相统一</li><li>找函数声明，若与变量名称一致则覆盖</li></ol><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">a, c</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">123</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(c)</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123; &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">false</span>)&#123;</span><br><span class="line">        <span class="keyword">var</span> d = <span class="number">789</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(d)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(b)</span><br><span class="line">    <span class="keyword">var</span> b = <span class="keyword">function</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(b)</span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">c</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(c)</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>, <span class="number">2</span>)</span><br></pre></td></tr></table></figure><ol><li><p>首先创建AO对象</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">AO</span>:&#123;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>找形参和变量的 <strong>声明</strong> ，作为AO对象的属性名，值为 undefined</p><ol><li>从上往下依次有：<code>fn(a, c)</code> 中的形参 a 和 c</li></ol> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">AO</span>: &#123;</span><br><span class="line">    <span class="attr">a</span>: <span class="literal">undefined</span>,</span><br><span class="line">    <span class="attr">c</span>: <span class="literal">undefined</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li><code>var d = 789</code> 中的 d</li></ol> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">AO</span>: &#123;</span><br><span class="line">    <span class="attr">a</span>: <span class="literal">undefined</span>,</span><br><span class="line">    <span class="attr">c</span>: <span class="literal">undefined</span>,</span><br><span class="line">    <span class="attr">d</span>: <span class="literal">undefined</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="3"><li><code>var b = function() &#123;&#125;</code> 中的 b</li></ol> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">AO</span>: &#123;</span><br><span class="line">    <span class="attr">a</span>: <span class="literal">undefined</span>,</span><br><span class="line">    <span class="attr">c</span>: <span class="literal">undefined</span>,</span><br><span class="line">    <span class="attr">d</span>: <span class="literal">undefined</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>找实参和形参相统一</p><p>形参是<code>fn(a, c)</code>中的形参 a 和 c，这里的 a 和 c 的实参是 <code>fn(1, 2)</code> 传入的 1 和 2</p><p>所以此时的AO对象为：</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">AO</span>:&#123;</span><br><span class="line">    <span class="attr">a</span>: <span class="literal">undefined</span>, =&gt; <span class="number">1</span></span><br><span class="line">    <span class="attr">c</span>: <span class="literal">undefined</span>, =&gt; <span class="number">2</span></span><br><span class="line">    <span class="attr">d</span>: <span class="literal">undefined</span>,</span><br><span class="line">    <span class="attr">b</span>: <span class="literal">undefined</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>找函数声明，若与变量名称一致则覆盖</p><p>函数的声明从上往下依次有：</p><ul><li><code>function a() &#123; &#125;</code></li><li><code>function c() &#123;&#125;</code></li></ul><p>所以此时的AO对象会变成：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">AO</span>:&#123;</span><br><span class="line">     <span class="attr">a</span>: <span class="literal">undefined</span>, =&gt; <span class="number">1</span> =&gt; <span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line">     <span class="attr">c</span>: <span class="literal">undefined</span>, =&gt; <span class="number">2</span> =&gt; <span class="keyword">function</span> <span class="title function_">c</span>(<span class="params"></span>) &#123;&#125;</span><br><span class="line">     <span class="attr">d</span>: <span class="literal">undefined</span>,</span><br><span class="line">     <span class="attr">b</span>: <span class="literal">undefined</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一步也导致了常说的函数的 <strong>“变量提升”</strong>，其实就是执行顺序，相同的变量名，后面的覆盖前面的</p><p><strong>注意：</strong><code>var b = function() &#123;&#125;</code> 这里并不是声明一个名为 b 的函数，而是声明一个匿名函数，变量 b 指向这个函数的入口，所以这里的 b 不算是函数的声明</p></li><li><p>运行输出打印结果</p><p>执行时是逐行解释的，所以根据执行顺序和AO对象，可以写出对应的打印结果：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">fn</span>(<span class="params">a, c</span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a)   <span class="comment">// function a()&#123;&#125;</span></span><br><span class="line">    <span class="keyword">var</span> a = <span class="number">123</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(a)   <span class="comment">// 123</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(c)   <span class="comment">// function c()&#123;&#125;</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">a</span>(<span class="params"></span>) &#123; &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="literal">false</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> d = <span class="number">789</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(d)   <span class="comment">// undefined</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(b)   <span class="comment">// undefined</span></span><br><span class="line">    <span class="keyword">var</span> b = <span class="keyword">function</span>(<span class="params"></span>) &#123;&#125; </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(b)   <span class="comment">// function() &#123;&#125;</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">c</span>(<span class="params"></span>) &#123;&#125;   </span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(c)   <span class="comment">// function c()&#123;&#125;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">fn</span>(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line">   </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 1. 创建ao对象</span></span><br><span class="line"><span class="comment"> * 2. 找形参和变量的声明，作为ao对象的属性名，值为undefined</span></span><br><span class="line"><span class="comment"> * 3. 实参和形参相统一</span></span><br><span class="line"><span class="comment"> * 4. 找函数声明，若与变量名称一致则覆盖</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> *  AO:&#123;</span></span><br><span class="line"><span class="comment">        a: undefined 1 function a()&#123;&#125;</span></span><br><span class="line"><span class="comment">        c: undefined 2 function c()&#123;&#125;</span></span><br><span class="line"><span class="comment">        d: undefined</span></span><br><span class="line"><span class="comment">        b: undefined</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * 5. js逐行解释执行</span></span><br><span class="line"><span class="comment"> *  AO:&#123;</span></span><br><span class="line"><span class="comment">        a: undefined 1 function a()&#123;&#125; 123</span></span><br><span class="line"><span class="comment">        c: undefined 2 function c()&#123;&#125;</span></span><br><span class="line"><span class="comment">        d: undefined</span></span><br><span class="line"><span class="comment">        b: undefined function() &#123;&#125;</span></span><br><span class="line"><span class="comment">    &#125;</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> */</span> </span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JS </tag>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>粗记一次OOM!</title>
      <link href="//%E5%B0%8F%E8%AE%B0/%E7%B2%97%E8%AE%B0%E4%B8%80%E6%AC%A1oom/"/>
      <url>//%E5%B0%8F%E8%AE%B0/%E7%B2%97%E8%AE%B0%E4%B8%80%E6%AC%A1oom/</url>
      
        <content type="html"><![CDATA[<h1 id="OOM"><a href="#OOM" class="headerlink" title="OOM"></a>OOM</h1><p>第一次遇到OOM - Out of Memory 内存溢出</p><h2 id="我知道你很急，但你先别急，听我说"><a href="#我知道你很急，但你先别急，听我说" class="headerlink" title="我知道你很急，但你先别急，听我说"></a>我知道你很急，但你先别急，听我说</h2><p>腾讯云周年庆<del>(终于想起老用户了,不然连人带站转去隔壁阿里云的99包年且续费同价格)</del>，然后冲了个丐版的轻量，打算专门跑跑脚本和做试验的</p><p><img src="/./%E5%B0%8F%E8%AE%B0/%E7%B2%97%E8%AE%B0%E4%B8%80%E6%AC%A1oom/%E9%85%8D%E7%BD%AE.png#pic_center" alt="配置"></p><p>这不最近接触了远程开发嘛，就打算用VSCode连上服务器试下远程开发</p><p>很快啊，啪的一下，插件 <code>Remote - SSH</code> 配好之后直接就连上玩了</p><p>然后感觉远程开发挺方便的，可以自动保存文件同步更新，也可以在VScode直接运行程序甚至打断点调试</p><p>运行着还挺正常，突然间，怎么卡死了，保存文件也一直在转圈，怎么回事……</p><hr><h2 id="出问题了"><a href="#出问题了" class="headerlink" title="出问题了"></a>出问题了</h2><p>首先是在VScode里面直接卡死，不管是保存文件还是远程的命令，全都无响应，断开重连也是一样，新建终端ssh也登不上去，当时就很迷……</p><p>然后就登上了服务器的控制台去看，面板里的监控显示是正常的</p><p>网络 IO 硬盘都很低，就是内存高点，在70~80%的样子（我当时还觉得是因为远程开发还运行打断点什么，所以内存高点算正常）</p><p><img src="/./%E5%B0%8F%E8%AE%B0/%E7%B2%97%E8%AE%B0%E4%B8%80%E6%AC%A1oom/%E7%9B%91%E6%8E%A7.png#pic_center" alt="监控"></p><p>但VScode还是卡死，我就试着点击重启，结果控制台也卡死了…</p><p><img src="/./%E5%B0%8F%E8%AE%B0/%E7%B2%97%E8%AE%B0%E4%B8%80%E6%AC%A1oom/%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%AD%A6%E5%91%8A.jpg#pic_center" alt="控制台提示"></p><p>然后我就觉得是服务器出问题了，就去提交了工单</p><hr><h2 id="提交工单"><a href="#提交工单" class="headerlink" title="提交工单"></a>提交工单</h2><p>那边的工程师回复我：</p><p><img src="/./%E5%B0%8F%E8%AE%B0/%E7%B2%97%E8%AE%B0%E4%B8%80%E6%AC%A1oom/%E5%B7%A5%E5%8D%951.jpg#pic_center" alt="工单1"></p><p>一开始我还很懵，”OOM是啥?”</p><p>乍一看，好家伙，内存溢出了……</p><p>然后我也不知道咋办呀，毕竟真·第一次遇到嘛……</p><p>然后就继续问工程师，现在怎么办才好，毕竟还是卡死呀</p><p>然后他就叫我尝试用控制台的VNC登录试试</p><p>原话是：</p><p>建议您下次没有响应的时候参考如下文档使用vnc方式登录您的服务器查看具体是什么程序导出的内存溢出：<a href="https://cloud.tencent.com/document/product/1207/46824">https://cloud.tencent.com/document/product/1207/46824</a></p><p><img src="/./%E5%B0%8F%E8%AE%B0/%E7%B2%97%E8%AE%B0%E4%B8%80%E6%AC%A1oom/VNC1.png#pic_center" alt="VNC1"></p><p>我就跟着他说的，试着用VNC登录，结果……</p><p><img src="/./%E5%B0%8F%E8%AE%B0/%E7%B2%97%E8%AE%B0%E4%B8%80%E6%AC%A1oom/VNC2.png#pic_center" alt="VNC2"></p><p>emm……</p><p>过了好久之后，终于连上了……</p><hr><h2 id="检查溢出的原因"><a href="#检查溢出的原因" class="headerlink" title="检查溢出的原因"></a>检查溢出的原因</h2><h3 id="复现"><a href="#复现" class="headerlink" title="复现"></a>复现</h3><p>然后我就学着敲工程师的那个查看内存的指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">grep <span class="string">&#x27;Out of memory&#x27;</span> /var/log/syslog</span><br><span class="line">grep <span class="string">&#x27;kernel&#x27;</span> /var/log/syslog</span><br></pre></td></tr></table></figure><p><img src="/./%E5%B0%8F%E8%AE%B0/%E7%B2%97%E8%AE%B0%E4%B8%80%E6%AC%A1oom/oom1-1.jpg#pic_center" alt="oom1-1.jpg"><br><img src="/./%E5%B0%8F%E8%AE%B0/%E7%B2%97%E8%AE%B0%E4%B8%80%E6%AC%A1oom/oom2-1.jpg#pic_center" alt="oom2-1.jpg"></p><p>自己复现呈现的：</p><p><img src="/./%E5%B0%8F%E8%AE%B0/%E7%B2%97%E8%AE%B0%E4%B8%80%E6%AC%A1oom/oom1-2.jpg#pic_center" alt="oom1-2.jpg"><br><img src="/./%E5%B0%8F%E8%AE%B0/%E7%B2%97%E8%AE%B0%E4%B8%80%E6%AC%A1oom/oom2-2.jpg#pic_center" alt="oom2-2.jpg"></p><h3 id="分析原因"><a href="#分析原因" class="headerlink" title="分析原因"></a>分析原因</h3><h4 id="首先是内存炸了的问题"><a href="#首先是内存炸了的问题" class="headerlink" title="首先是内存炸了的问题"></a>首先是内存炸了的问题</h4><p>显然是node进程把内存吃完了，但目前运行node的有两个，一个是自己的node程序，还有一个就是VScode自己起的node，远程连接也在消耗资源。</p><p>将自己的程序进行单独的运行，很长一段时间都没有问题，内存消耗是很小而且很稳定的，不会突然间吃掉大段的内存从而导致oom。</p><p>接着就是单开远程开发，同样是比较稳定的，但内存的消耗很明显比程序高了不少，和之前监控的峰值差不多。</p><p>虽然维持在高水平，但一段时间内不动他确实也是挺稳定的。但在此基础上频繁同步文件，还有运行程序，这就会导致内存消耗的加大。</p><p>这一点在同步文件的时候特别明显，然后因为文件其实都是直接存在服务器上的，所以一旦没保存成功，在本地也没有另存的话，一关掉终端&#x2F;VScode 文件就没了，就真的很离谱……</p><h4 id="卡死的问题"><a href="#卡死的问题" class="headerlink" title="卡死的问题"></a>卡死的问题</h4><p>这里出现了两个卡死，一个是进行远程开发的VScode，一个是控制台。</p><p>这里之所以会卡死，是因为他们都需要等服务器进行相应才可以完成操作。</p><p>而服务器现在需要等待Linux内核，把高内存的进程kill掉之后 恢复到正常水平，才可以继续做出相应，这段时间服务器本身也是卡死的。</p><p>这一卡就要卡快10分钟（内核调度真的要这么久嘛，不了解…）</p><p>然后所有的连接、指令在这段时间都会失效，又或者说是排队，但不作响应。</p><p>所以VScode和控制台的重启 VNC都会卡主。但其实这里还有一个卡死的是监控，监控记录下来的都是比较平稳的 基本的水平，是因为在真的oom的时候，监控是记录不到的，又或者说就算监控到了 也无法响应到看板</p><hr>]]></content>
      
      
      <categories>
          
          <category> 小记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>升级openssl</title>
      <link href="/%E6%8A%80%E6%9C%AF/%E5%8D%87%E7%BA%A7openssl/"/>
      <url>/%E6%8A%80%E6%9C%AF/%E5%8D%87%E7%BA%A7openssl/</url>
      
        <content type="html"><![CDATA[<h1 id="升级openssl"><a href="#升级openssl" class="headerlink" title="升级openssl"></a>升级openssl</h1><h2 id="升级原因"><a href="#升级原因" class="headerlink" title="升级原因"></a>升级原因</h2><p>低版本的OpenSSL有漏洞，然后服务器 邮件什么的各种给我发，叫我升级……</p><p>2023年4月公布的漏洞，具体可以到 <a href="https://www.openssl.org/">OpenSSL官网</a> 查看</p><p>这次受影响的好像是 1.0.x 的版本，OpenSSL 0.9.8 那些 0.9.x 的不受影响，然后还有新的 3.x 的也不影响</p><p>还是有一个是影响 3.0.0 - 3.0.6 版本的，可以查看这个 <a href="https://xhnic.cumt.edu.cn/b6/ad/c20548a636589/page.htm">关于OpenSSL缓冲区溢出漏洞（CVE-2022-3602）的预警提示</a></p><p>然后我选择升级，不打算降级，然后ubuntu，好像没有直接现成的教程，服务端绝大多数还是 centos，但我不知道有没有关系，反正记录一下我的</p><hr><h2 id="具体步骤"><a href="#具体步骤" class="headerlink" title="具体步骤"></a>具体步骤</h2><p>当然可能不合理，仅供参考，反正我是成功了……</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt update</span><br><span class="line">$ sudo apt upgrade</span><br><span class="line"></span><br><span class="line">$ <span class="built_in">cd</span></span><br><span class="line">$ wget https://www.openssl.org/source/openssl-3.0.7.tar.gz</span><br><span class="line">$ tar -zxvf openssl-3.0.7.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> openssl-3.0.7</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入root 开始编译安装</span></span><br><span class="line">$ su</span><br><span class="line">$ ./config --prefix=/usr/local/openssl shared zlib</span><br><span class="line">$ make &amp;&amp; make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 备份</span></span><br><span class="line">$ <span class="built_in">mv</span> /usr/bin/openssl /usr/bin/openssl.bak</span><br><span class="line">$ <span class="built_in">mv</span> /usr/include/openssl /usr/include/openssl.bak </span><br><span class="line"></span><br><span class="line"><span class="comment"># 建立软链接</span></span><br><span class="line">$ <span class="built_in">ln</span> -s /usr/local/openssl/bin/openssl /usr/bin/openssl</span><br><span class="line">$ <span class="built_in">ln</span> -s /usr/local/openssl/include/openssl/  /usr/include/openssl</span><br><span class="line">$ <span class="built_in">ln</span> -s /usr/local/openssl/lib64 /usr/local/openssl/lib</span><br><span class="line"> </span><br><span class="line">$ <span class="built_in">echo</span> <span class="string">&quot;/usr/local/openssl/lib64&quot;</span> &gt;&gt; /etc/ld.so.conf</span><br><span class="line">$ ldconfig -v</span><br><span class="line"> </span><br><span class="line">$ ldconfig -p |grep openssl</span><br><span class="line"> </span><br><span class="line">$ openssl version -a</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="comment"># 以下选择性建立软链</span></span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/openssl/include/openssl /usr/include/openssl</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/openssl/lib64/libssl.so /usr/lib64/libssl.so</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/openssl/lib64/libcrypto.so /usr/lib64/libcrypto.so</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/openssl/lib64/libssl.so /usr/lib/libssl.so</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/openssl/lib64/libcrypto.so /usr/lib/libcrypto.so</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/openssl/lib64/libssl.so.3 /usr/lib/libssl.so.3</span><br><span class="line"><span class="built_in">ln</span> -s /usr/local/openssl/lib64/libcrypto.so.3 /usr/lib/libcrypto.so.3</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h2><ul><li><a href="https://blog.csdn.net/s1095622320/article/details/127690647">linux编译安装openssl3.0.7</a></li><li><a href="https://www.jianshu.com/p/d62015047157">CentOS 安装 openssl 最新版本</a></li><li><a href="https://www.cnblogs.com/wjsqqj/p/17129276.html">linux Centos升级openssl</a></li><li><a href="https://cloud.tencent.com/developer/article/2274826">OpenSSL升级及其漏洞说明</a> 这篇后来看到的，感觉还可以</li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> openssl </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ssh</title>
      <link href="/%E7%AC%94%E8%AE%B0/study/ssh/"/>
      <url>/%E7%AC%94%E8%AE%B0/study/ssh/</url>
      
        <content type="html"><![CDATA[<p><strong>一、前言</strong></p><p>SSH 是一种建立在应用层基础上的安全协议，利用SSH进行数据传输时也是较为可靠和安全的。当有明文数据传输时，为保障其安全，可以利用SSH隧道对其进行加密安全传输，本文中讲到的SSH隧道用法均可以保障安全传输，文中不详做介绍，本文着重讲解除安全传输之外的其他使用场景，来分别分析三种SSH隧道的用法。</p><p>文中会用到以下SSH参数，先看一下man文档中对以下SSH参数的解释：</p><p><strong>-L port:host:hostport</strong></p><p>将本地机(客户机)的某个端口转发到远端指定机器的指定端口. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去, 同时远程主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有 root 才能转发特权端口. IPv6 地址用另一种格式说明: port&#x2F;host&#x2F;hostport</p><p><strong>-R port:host:hostport</strong></p><p>将远程主机(服务器)的某个端口转发到本地端指定机器的指定端口. 工作原理是这样的, 远程主机上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转向出去, 同时本地主机和 host 的 hostport 端口建立连接. 可以在配置文件中指定端口的转发. 只有用 root 登录远程主机 才能转发特权端口. IPv6 地址用另一种格式说明: port&#x2F;host&#x2F;hostport</p><p><strong>-D port</strong></p><p>指定一个本地机器 “动态的” 应用程序端口转发. 工作原理是这样的, 本地机器上分配了一个 socket 侦听 port 端口, 一旦这个端口上有了连接, 该连接就经过安全通道转发出去,根据应用程序的协议可以判断出远程主机将和哪里连接. 目前支持 SOCKS4 协议, ssh 将充当 SOCKS4 服务器. 只有 root 才能转发特权端口. 可以在配置文件中指定动态端口的转发.</p><p><strong>-N</strong></p><p>不执行远程命令. 用于转发端口. (仅限协议第二版)</p><p><strong>-f</strong></p><p>要求 ssh 在执行命令前退至后台. 它用于当 ssh 准备询问口令或密语, 但是用户希望它在后台进行. 该选项隐含了 -n 选项. 在远端机器上启动 X11 程序的推荐手法就是类似于 ssh -f host xterm 的命令.</p><p><strong>-g</strong></p><p>允许远端主机连接本地转发的端口.</p><p><strong>二. 本地转发</strong></p><p><strong>1.功能解释</strong></p><p>本地转发即在A服务器执行ssh命令登录B服务器来启用SSH隧道，以实现通过访问A服务器的转发端口，达到实际访问为B服务器的目标端口的目的。如下图所示：</p><p><img src="https://pics7.baidu.com/feed/8b82b9014a90f603f38e9107d9b8de12b151edec.jpeg@f_auto?token=cc83ddbb42748c33d9c1e3346deafec9" alt="img"></p><p><strong>2. 使用场景</strong></p><p>当客户端可以访问主机A的任意端口，但由于网络或安全的原因客户端无法访问到主机B的任意端口。如果现在客户端想要访问主机B的某个服务时（如mysql数据库），此时只要主机A可以访问到主机B的SSH端口，这里就可以使用SSH隧道，实现客户端访问主机A的转发端口即可访问到主机B的mysql数据库。</p><p><strong>3. 命令示例</strong></p><p>以下命令均在A主机执行：</p><p><strong>SSH登录后启用ssh隧道，但仅监听A主机127.0.0.1地址，退出ssh登录后隧道断开</strong></p><p>ssh -L A转发port:B主机IP:B目的端口 root@B主机</p><p><strong>SSH命令后不登录B主机，仅启用ssh隧道，仅监听A主机127.0.0.1地址，关闭A主机终端后隧道断开</strong></p><p>ssh -N -L A转发port:B主机IP:B目的端口 root@B主机</p><p><strong>SSH命令后不登录B主机，仅启用ssh隧道，仅监听A主机127.0.0.1地址，关闭A主机终端后隧道不会断开</strong></p><p>ssh -f -N -L A转发port:B主机IP:B目的端口 root@B主机</p><p><strong>指定A主机中ssh隧道转发端口绑定的网卡</strong></p><p>ssh -f -N -L A主机IP:A转发port:B主机IP:B目的端口 root@B主机</p><p><strong>将转发端口绑定至A主机所有网卡</strong></p><p>ssh -g -f -N -L A转发port:B主机:B目的端口 root@B主机</p><p><strong>三、远程转发</strong></p><p><strong>1. 功能解释</strong></p><p>上面我们知道了本地转发是在A服务器执行ssh命令后将转发端口设置在A服务器本身，远程转发则相反，是将转发端口设置在ssh命令的目标服务器上。</p><p>远程转发即在B服务器执行ssh命令登录A服务器来启用SSH隧道，以实现通过访问A服务器的转发端口，达到实际访问为B服务器的目标端口的目的。如下图所示：</p><p><img src="https://pics0.baidu.com/feed/9f510fb30f2442a7355a75a303e9c042d0130290.jpeg@f_auto?token=818717e03fc16edd16c4f4631cd9cddc" alt="img"></p><p><strong>2. 使用场景</strong></p><p>远程转发使用场景较为广泛且实用。</p><p>如果我们在家庭电脑上跑了一个tomcat服务并想提供到互联网访问，由于家庭电脑一般是通过路由器来访问互联网的（即在nat网络中），我们需要在家庭路由器中进行端口映射来实现。</p><p>如果我们是公共路由器没有权限怎么办？又或者在权限管控严格的公司中我们没有权限怎么办？</p><p>巧合的是，我们手上还有一台拥有公网IP的主机（如阿里云主机等），我们的家庭电脑是可以访问到互联网的（即可以SSH访问到拥有公网IP的主机），直接使用SSH隧道就可以解决以上问题。</p><p><strong>3. 命令示例</strong></p><p>以下命令均在B主机执行：</p><p><strong>SSH命令后不登录A主机，仅启用ssh隧道，仅监听A主机127.0.0.1地址，关闭B主机终端后隧道不会断开</strong></p><p>ssh -f -N -R A主机转发端口:B主机IP:B目的端口 root@A主机</p><p><strong>看到这里，你一定会联想到以下两条指令来实现绑定到非lookback地址：</strong></p><p>ssh -f -N -R A主机IP:A主机转发端口:B主机IP:B目的端口 root@A主机</p><p>ssh -g -f -N -R A主机转发端口:B主机IP:B目的端口 root@A主机</p><p>不过当你实验时敲下以下指令，会发现A主机的SSH隧道监听地址仍然是127.0.0.1，这又是为什么呢？</p><p><strong>4. 将远程转发绑定到网卡</strong></p><p>上一小节我们尝试建立远程转发隧道后，仅监听127.0.0.1地址，这是因为在SSH服务的配置文件&#x2F;etc&#x2F;ssh&#x2F;sshd_config中有这样一个配置</p><p>GatewayPorts 是否允许远程主机连接本地的转发端口，默认值为 no。</p><p>将此项配置为yes并重启SSH服务后，再次执行命令</p><p>ssh -f -N -R A主机转发端口:B主机IP:B目的端口 root@A主机</p><p><strong>这时远程转发的转发端口会设置在A主机的所有网卡上，即0.0.0.0</strong></p><p>当然除了这种方法，我们还可以使用其他技术手段来实现允许其他主机访问A主机127.0.0.1地址的转发端口，例如在A主机用其他程序去反向代理127.0.0.1的转发端口，使用Nginx反代实现方式和配置可以点开我的主页，查看《Nginx实现socket代理》这篇文章。</p><p><strong>四、 动态转发</strong></p><p><strong>1. 功能解释</strong></p><p>动态转发即通过配置一个本地端口，将通过隧道的数据转发到目标端地址网络。</p><p><img src="https://pics4.baidu.com/feed/03087bf40ad162d9eb399925c075c4e58b13cd6c.jpeg@f_auto?token=984a1cf6911e5d866e515a89e5b076a6" alt="img"></p><p>如上图所示，动态转发不像本地转发与远程转发一样转发端口与目标端口是一对一的，动态转发中的转发端口对应的目标是目标主机所在的整个网络。不过使用动态转发访问目标主机所在网络时需要应用程序本身支持代理配置或者使用socket代理工具。</p><p><strong>2. 使用场景</strong></p><p>同样如上图所示，如果存在一个子网1与子网2之间设有防火墙，主机A只能访问到主机B的ssh端口，这时如果主机A或者外部客户端想要访问子网2中的任意IP的任意端口时，可以使用动态转发隧道实现。</p><p><strong>3. 命令示例</strong></p><p>以下命令均在A主机执行：</p><p><strong>SSH命令后不登录B主机，仅启用ssh隧道，仅监听A主机127.0.0.1地址，关闭A主机终端后隧道不会断开</strong></p><p>ssh -f -N -D A主机转发端口 root@A主机</p><p><strong>SSH命令后不登录B主机，仅启用ssh隧道，监听A主机指定网卡IP地址，关闭A主机终端后隧道不会断开</strong></p><p>ssh -f -N -D A主机IP地址:A主机转发端口 root@A主机</p><p><strong>4. 客户端代理配置</strong></p><p>当隧道创建好之后我们需要通过代理客户端进行设置之后才会使用隧道，如果应用程序支持配置直接配置即可，如果是不支持配置代理的应用程序可以使用到socket代理工具来搭配使用，我常用的客户端代理工具是Proxifier，关于用法可以参考我主页的另一篇文章《Socket代理神器客户端Proxifier+服务端ss5》。</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ssh </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ffmpeg</title>
      <link href="/%E7%AC%94%E8%AE%B0/study/ffmpeg/"/>
      <url>/%E7%AC%94%E8%AE%B0/study/ffmpeg/</url>
      
        <content type="html"><![CDATA[<h1 id="ffmpeg"><a href="#ffmpeg" class="headerlink" title="ffmpeg"></a>ffmpeg</h1><h2 id="硬件编码后缀解释："><a href="#硬件编码后缀解释：" class="headerlink" title="硬件编码后缀解释："></a>硬件编码后缀解释：</h2><p>qsv：intel显卡的快速视频同步技术（quick sync video）<br>nvenc：nvidia显卡的硬件视频编码器（nvidia hardware video encoder）<br>cuvid：nvdec的旧称，只有解码端。<br>cuda： 同上.nvdec的旧称，只有解码端。<br>amf：amd显卡的amf硬件编码器（amd hardware encoder）</p><h2 id="查看支持"><a href="#查看支持" class="headerlink" title="查看支持"></a>查看支持</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看支持的硬件加速方式</span></span><br><span class="line">PS C:\Users\asus&gt; ffmpeg -hwaccels</span><br><span class="line"></span><br><span class="line">Hardware acceleration methods:</span><br><span class="line">cuda</span><br><span class="line">dxva2</span><br><span class="line">qsv</span><br><span class="line">d3d11va</span><br><span class="line">opencl</span><br><span class="line">vulkan</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取支持的编解码器选项</span></span><br><span class="line">PS C:\Users\asus&gt; ffmpeg -codecs | sls nvenc</span><br><span class="line"></span><br><span class="line">DEV.LS h264                 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (decoders: h264 h264_qsv libopenh264 h264_cuvid ) (encoders: libx264 libx264rgb libopenh264 h264_amf h264_mf h264_nvenc h264_qsv )</span><br><span class="line">DEV.L. hevc                 H.265 / HEVC (High Efficiency Video Coding) (decoders: hevc hevc_qsv hevc_cuvid ) (encoders: libx265 hevc_amf hevc_mf hevc_nvenc hevc_qsv libkvazaar )</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取支持的H264解码器选项</span></span><br><span class="line">PS C:\Users\asus&gt; ffmpeg -decoders | sls 264</span><br><span class="line"></span><br><span class="line"> VFS..D h264                 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10</span><br><span class="line"> V....D h264_qsv             H264 video (Intel Quick Sync Video acceleration) (codec h264)</span><br><span class="line"> V....D libopenh264          OpenH264 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (codec h264)</span><br><span class="line"> V..... h264_cuvid           Nvidia CUVID H264 decoder (codec h264)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取支持的H264编码器选项</span></span><br><span class="line">PS C:\Users\asus&gt; ffmpeg -encoders |sls 264</span><br><span class="line"></span><br><span class="line"> V....D libx264              libx264 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (codec h264)</span><br><span class="line"> V....D libx264rgb           libx264 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 RGB (codec h264)</span><br><span class="line"> V....D libopenh264          OpenH264 H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (codec h264)</span><br><span class="line"> V....D h264_amf             AMD AMF H.264 Encoder (codec h264)</span><br><span class="line"> V....D h264_mf              H264 via MediaFoundation (codec h264)</span><br><span class="line"> V....D h264_nvenc           NVIDIA NVENC H.264 encoder (codec h264)</span><br><span class="line"> V..... h264_qsv             H.264 / AVC / MPEG-4 AVC / MPEG-4 part 10 (Intel Quick Sync Video acceleration) (codec h264)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 获取支持的H265解码器选项</span></span><br><span class="line">ffmpeg -decoders |sls hevc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取支持的H265编码器选项</span></span><br><span class="line">ffmpeg -encoders |sls hevc</span><br></pre></td></tr></table></figure><h2 id="命令行及常用参数解释"><a href="#命令行及常用参数解释" class="headerlink" title="命令行及常用参数解释"></a>命令行及常用参数解释</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg [global_options] &#123;[input_file_options] -i input_url&#125; ... &#123;[output_file_options] output_url&#125; ...</span><br><span class="line">ffmpeg -i inputfile1 -i inputfile2 output.mp4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">-hwaccel cuvid：使用cuvid进行硬件加速</span><br><span class="line">-c:a copy: 保持音频原编码格式</span><br><span class="line">-c:v copy: 保持视频原编码格式</span><br><span class="line">-c:v h264_cuvid：使用h264_cuvid进行解码</span><br><span class="line">-c:v h264_nvenc：使用h264_nvenc进行编码（nvidia硬件加速x265）</span><br><span class="line">-b:v 2000k：比特率，值越大约清晰。</span><br><span class="line">-b:v 3500K ：视频平均比特率为 3500K</span><br><span class="line">-s 1920x1080：分辨率</span><br><span class="line">-bufsize 6000K：缓存区大小 6000K，建议设定为 当前码率帧率5，也许这里的2pass是针对缓冲区的，缓存未来5s</span><br><span class="line">-maxrate 5000K：最大码率为 5000K，每帧的最高码率不超过这个数值</span><br><span class="line">-pix_fmt p010le：输出的像素格式是 p010le 也就10bit，只有新的硬件支持，例如：970m不支持，1070可以支持</span><br><span class="line">-profile:v high：高级画质。</span><br><span class="line">H.264有四种画质级别,分别是baseline, extended, main, high： </span><br><span class="line">1. Baseline Profile：基本画质。 </span><br><span class="line">2. Extended profile：进阶画质。(用的少) </span><br><span class="line">3. Main profile：主流画质。</span><br><span class="line">4. High profile：高级画质。在main Profile 的基础上增加了无损视频编码和更多的YUV 格式； </span><br><span class="line">    在相同配置情况下，High profile（HP）可以比Main profile（MP）降低10%的码率。 </span><br><span class="line">    根据应用领域的不同，Baseline profile多应用于实时通信领域，Main profile多应用于流媒体领域，High profile则多应用于广电和存储领域。</span><br><span class="line"></span><br><span class="line">-preset slow：预设方案是 slow，slow已经是最好的选项了</span><br><span class="line">ultrafast（转码速度最快，视频往往也最模糊）</span><br><span class="line">superfast</span><br><span class="line">veryfast</span><br><span class="line">faster</span><br><span class="line">fast</span><br><span class="line">medium(default)</span><br><span class="line">slow</span><br><span class="line">slower</span><br><span class="line">veryslow</span><br><span class="line">placebo</span><br><span class="line"></span><br><span class="line">-crf 28: 恒定速率因子模式，用来设置码率控制模式，0表示无损画质（一般18-28，18为分界线）</span><br><span class="line">-qp 28: 恒定量化器模式，用来设置码率控制模式，（0-51）0表示无损画质</span><br></pre></td></tr></table></figure><h2 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h2><ol><li><p><code>h264_qsv</code> 解码 不能搭配 &#96;-profile:v high&#96;&#96;</p></li><li><p>&#96;&#96;-qp 28<code>不能和 </code>-profile:v high&#96;一起出现，不然视频 有音频 没画面</p></li><li><p><code>qp</code>这类的压缩，应一个输入对应一个输出，若多个输入，应先将多个输入无损编码成一个较大文件，然后再用<code>qp</code>或<code>crf</code>这类参数对较大文件进行压缩，以免出现“有音频 没画面”等异常情况</p><p>虽然也不怎么会出现，但后者会更接近一点原来的一点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -hwaccel cuvid -i audio.mp4 -c:v h264_cuvid -i video.mp4 -profile:v high -b:v 0 -c:v h264_nvenc [-preset slow] tempfile.mp4</span><br><span class="line"></span><br><span class="line">ffmpeg -hwaccel cuvid -i tempfile.mp4 -qp 28 -c:v h264_nvenc output.mp4</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -hwaccel cuvid -i audio.mp4 -c:v h264_cuvid -i video.mp4 -profile:v high [-preset slow] [-b:v 0] -qp 28 -c:v h264_nvenc output.mp4</span><br></pre></td></tr></table></figure></li><li><p>普通情况下 Intel 卡和 NVIDIA 输出差不多，但 N卡效果好像好点</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># I卡</span></span><br><span class="line">ffmpeg -hwaccel qsv -i audio.mp4 -c:v h264_qsv -i video.mp4 [-profile:v high] [-preset slow] -c:v qsv output.mp4</span><br><span class="line"></span><br><span class="line"><span class="comment"># N卡</span></span><br><span class="line">ffmpeg -hwaccel cuvid -i audio.mp4 -c:v h264_cuvid -i video.mp4 [-profile:v high] [-preset slow] [-crf 10|18|28] -c:v hevc_nvenc output.mp4</span><br></pre></td></tr></table></figure></li><li><p>N卡配合 bv(非0) 效果很差</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -hwaccel cuvid -i audio.mp4 -c:v h264_cuvid -i video.mp4 [-profile:v high] -b:v 10 -c:v hevc_nvenc output.mp4</span><br></pre></td></tr></table></figure></li></ol><h1 id="去水印"><a href="#去水印" class="headerlink" title="去水印"></a>去水印</h1><h2 id="框出水印位置"><a href="#框出水印位置" class="headerlink" title="框出水印位置"></a>框出水印位置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ffplay -i 1.mp4 -vf delogo=x=0:y=0:w=150:h=100:show=1 [-ss 5] [-t 5]</span><br><span class="line"></span><br><span class="line">-vf 自定义滤镜</span><br><span class="line">delogo</span><br><span class="line">x:起始横坐标</span><br><span class="line">y:起始纵坐标</span><br><span class="line">w:宽度</span><br><span class="line">h:高度</span><br><span class="line">show:是否显示绿框 0:不显示 1:显示</span><br><span class="line">--s 从第几秒开始</span><br><span class="line">-t 持续几秒（-t 5:即只输出5秒）</span><br></pre></td></tr></table></figure><h2 id="导出去除水印的视频"><a href="#导出去除水印的视频" class="headerlink" title="导出去除水印的视频"></a>导出去除水印的视频</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 截取前面的5s，然后去除水印</span></span><br><span class="line">ffmpeg -i 1.mp4 -vf delogo=x=1120:y=10:w=155:h=100:show=0 -t 5 output1.mp4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 截取中间无水印的部分</span></span><br><span class="line">ffmpeg -i 1.mp4 -ss 5 -t 20 output2.mp4</span><br><span class="line"></span><br><span class="line"><span class="comment"># 去除结尾的水印</span></span><br><span class="line">ffmpeg -i 1.mp4 -vf delogo=x=10:y=600:w=160:h=100:show=0 -ss 25 -t 剩下的时间 output3.mp4</span><br></pre></td></tr></table></figure><h1 id="拼接视频"><a href="#拼接视频" class="headerlink" title="拼接视频"></a>拼接视频</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg -f concat -i t.txt -c copy output.mp4</span><br><span class="line"></span><br><span class="line"><span class="comment"># t.txt</span></span><br><span class="line">file <span class="string">&#x27;output1.mp4&#x27;</span></span><br><span class="line">file <span class="string">&#x27;output2.mp4&#x27;</span></span><br><span class="line">file <span class="string">&#x27;output3.mp4&#x27;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ffmpeg </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue复习版</title>
      <link href="/%E7%AC%94%E8%AE%B0/study/vue%E5%A4%8D%E4%B9%A0%E7%89%88/"/>
      <url>/%E7%AC%94%E8%AE%B0/study/vue%E5%A4%8D%E4%B9%A0%E7%89%88/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue官网使用指南"><a href="#Vue官网使用指南" class="headerlink" title="Vue官网使用指南"></a>Vue官网使用指南</h1><p><a href="https://cn.vuejs.org/">https://cn.vuejs.org/</a></p><p><a href="https://www.bilibili.com/video/BV1Zy4y1K7SH/?p=3">https://www.bilibili.com/video/BV1Zy4y1K7SH/?p=3</a></p></br><h1 id="安装和启动"><a href="#安装和启动" class="headerlink" title="安装和启动"></a>安装和启动</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行单独的Vue页面</span></span><br><span class="line">$ npm install -g @vue/cli-service-global</span><br><span class="line">$ vue serve</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 下载安装 Node.js </span></span><br><span class="line"><span class="comment"># 2. npm 换源</span></span><br><span class="line"><span class="comment"># 3. npm安装Vue</span></span><br><span class="line"><span class="comment"># 4. 运行</span></span><br></pre></td></tr></table></figure><h2 id="srcipt-标签引用版本"><a href="#srcipt-标签引用版本" class="headerlink" title="srcipt 标签引用版本"></a><code>srcipt</code> 标签引用版本</h2><ul><li>开发版本: 包含完整的警告和调试模式。&#x3D;&gt;   <code>vue.js</code></li><li>生产版本: 删除了警告，压缩。       &#x3D;&gt;   <code>vue.min.js</code></li></ul></br><h1 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h1><ul><li><p>插值语法 <code>&#123;&#123;xxx&#125;&#125;</code></p></li><li><p>指令语法</p><ul><li><code>v-bind:href=&quot;xxx&quot;</code>   简写 <code>:href=&quot;xxx&quot;</code></li></ul></li></ul></br><h1 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h1><ul><li>v-bind  <ul><li><code>data ==&gt; 页面</code>（单向）</li></ul></li><li>v-model<ul><li><code>data &lt;==&gt; 页面</code>（双向）</li><li>只能表单类元素，默认收集value值</li></ul></li></ul></br><h1 id="el两种写法"><a href="#el两种写法" class="headerlink" title="el两种写法"></a>el两种写法</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> v = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>, <span class="comment">// 第一种写法</span></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line">v.$mount(<span class="string">&#x27;#root&#x27;</span>) <span class="comment">// 第二种写法</span></span><br></pre></td></tr></table></figure></br><h1 id="data两种写法"><a href="#data两种写法" class="headerlink" title="data两种写法"></a>data两种写法</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 对象式</span></span><br><span class="line">    <span class="attr">data</span>: &#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 函数式（推荐）</span></span><br><span class="line">    <span class="comment">// 组件必须采用函数式，不会造成污染</span></span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>) &#123;</span><br><span class="line">        <span class="keyword">return</span>&#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></br><h1 id="Object-defineProperty"><a href="#Object-defineProperty" class="headerlink" title="Object.defineProperty"></a>Object.defineProperty</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(person,<span class="string">&#x27;age&#x27;</span>,&#123;</span><br><span class="line">    <span class="comment">// value:18,            // 定义值，与getter不能同用</span></span><br><span class="line">    <span class="comment">// enumerable:true,     // 是否可被枚举，默认值是false  Object.keys(person)</span></span><br><span class="line">    <span class="comment">// writable:true,       // 是否可被修改，默认值是false  person.age = &quot;xxx&quot;</span></span><br><span class="line">    <span class="comment">// configurable:true    // 是否可被删除，默认值是false  delete person.age</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//当有人读取person的age属性时，get函数(getter)就会被调用，且返回值就是age的值</span></span><br><span class="line">    <span class="title function_">get</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> number</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当有人修改person的age属性时，set函数(setter)就会被调用，且会收到修改的具体值</span></span><br><span class="line">    <span class="title function_">set</span>(<span class="params">value</span>)&#123;</span><br><span class="line">        number = value</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></br><h1 id="数据代理"><a href="#数据代理" class="headerlink" title="数据代理"></a>数据代理</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> data = &#123;<span class="attr">x</span>:<span class="number">100</span>&#125;</span><br><span class="line"><span class="keyword">let</span> vm = &#123;<span class="attr">y</span>:<span class="number">200</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(<span class="params">vm,<span class="string">&#x27;x&#x27;</span>,&#123;</span></span><br><span class="line"><span class="params">    get()&#123;</span></span><br><span class="line"><span class="params">        <span class="keyword">return</span> data.x</span></span><br><span class="line"><span class="params">    &#125;,</span></span><br><span class="line"><span class="params">    set(value)&#123;</span></span><br><span class="line"><span class="params">        data.x = value</span></span><br><span class="line"><span class="params">    &#125;</span></span><br><span class="line"><span class="params">&#125;</span>)</span><br><span class="line"></span><br><span class="line">&#123;&#123;vm.<span class="property">x</span>&#125;&#125;</span><br></pre></td></tr></table></figure></br><h1 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h1><p><code>v-on:xxx</code> &#x3D;&#x3D;&#x3D; <code>@xxx</code></p><p><code>xxx</code> 为事件名</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;fn($event, data)&quot;</span>&gt;</span>btn<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br></pre></td></tr></table></figure></br><h1 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h1><ol><li><code>prevent</code>：阻止默认事件 (常用)</li><li><code>stop</code>：阻止事件冒泡 (常用)</li><li><code>once</code>：事件只触发一次 (常用)</li><li><code>capture</code>：使用事件的捕获模式 - 父元素不触发子元素事件</li><li><code>self</code>：只有<code>event.target</code>是当前操作的元素时才触发事件；</li><li><code>passive</code>：事件的默认行为立即执行，无需等待事件回调执行完毕；<figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://tenyding.cn&quot;</span> @<span class="attr">click.prevent.stop</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> @<span class="attr">wheel.passive</span>=<span class="string">&quot;demo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol></br><h1 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h1><table><thead><tr><th>按键</th><th>事件名</th><th></th><th>按键</th><th>事件名</th></tr></thead><tbody><tr><td>回车</td><td>enter</td><td></td><td>删除</td><td>delete (捕获“删除”和“退格”键)</td></tr><tr><td>退出</td><td>esc</td><td></td><td>空格</td><td>space</td></tr><tr><td>上</td><td>up</td><td></td><td>下</td><td>down</td></tr><tr><td>左</td><td>left</td><td></td><td>右</td><td>right</td></tr></tbody></table><p>注：</p><ul><li><p>系统修饰键（用法特殊）：<code>ctrl</code>、<code>alt</code>、<code>shift</code>、<code>meta(win键)</code></p><pre><code>(1). 配合keyup使用：按下修饰键的同时，再按下其他键，随后释放其他键，事件才被触发。(2). 配合keydown使用：正常触发事件。</code></pre></li><li><p>大写或词组单词</p><pre><code>单词全为小写，驼峰前用 - 连接</code></pre></li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">keyCodes</span>.<span class="property">huiche</span> = <span class="number">13</span> <span class="comment">//定义了一个别名按键</span></span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;按下ctrl+y触发showInfo&quot;</span> @<span class="attr">keyup.ctrl.y</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;按下CapsLock(大小写切换)触发showInfo&quot;</span> @<span class="attr">keyup.caps-lock</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;按下回车触发showInfo&quot;</span> @<span class="attr">keyup.13</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;按下回车触发showInfo&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;按下回车触发showInfo&quot;</span> @<span class="attr">keydown.huiche</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure></br><h1 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h1><ol><li>定义：要用的属性不存在</li><li>原理：利用 <code>Object.defineproperty</code> 的getter和setter</li></ol><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">computed</span>:&#123;</span><br><span class="line">    <span class="comment">// 详写</span></span><br><span class="line">    <span class="attr">fullName</span>:&#123;</span><br><span class="line">        <span class="comment">// 第一次读取和依赖的数据改变时被调用</span></span><br><span class="line">        <span class="title function_">get</span>(<span class="params"></span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">&#x27;-&#x27;</span> + <span class="variable language_">this</span>.<span class="property">lastName</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="comment">// 当fullName被修改时调用</span></span><br><span class="line">        <span class="title function_">set</span>(<span class="params">value</span>)&#123;</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">firstName</span> = value.<span class="title function_">split</span>(<span class="string">&#x27;-&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">            <span class="variable language_">this</span>.<span class="property">lastName</span> = value.<span class="title function_">split</span>(<span class="string">&#x27;-&#x27;</span>)[<span class="number">1</span>]</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 简写</span></span><br><span class="line">    <span class="title function_">fullName</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">&#x27;-&#x27;</span> + <span class="variable language_">this</span>.<span class="property">lastName</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></br><h1 id="监视属性"><a href="#监视属性" class="headerlink" title="监视属性"></a>监视属性</h1><p>前提：<code>xxx</code> 需存在</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 配置版</span></span><br><span class="line"><span class="attr">watch</span>: &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 完整</span></span><br><span class="line">    <span class="attr">xxx</span>:&#123;</span><br><span class="line">        <span class="attr">immediate</span>: <span class="literal">true</span>,    <span class="comment">// 初始化时调用一次，默认false</span></span><br><span class="line">        <span class="attr">deep</span>: <span class="literal">true</span>,         <span class="comment">// 深度监视，默认false</span></span><br><span class="line">        <span class="comment">// xxx发生改变时调用handler</span></span><br><span class="line">        <span class="title function_">handler</span>(<span class="params">newValue, oldValue</span>)&#123;</span><br><span class="line">            ...</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 简写</span></span><br><span class="line">    <span class="title function_">xxx</span>(<span class="params">newValue, oldValue</span>)&#123;</span><br><span class="line">        ...</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// vm.$watch版</span></span><br><span class="line">vm.$watch(<span class="string">&#x27;xxx&#x27;</span>,<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span><br><span class="line">    ...</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></br><h1 id="绑定样式"><a href="#绑定样式" class="headerlink" title="绑定样式"></a>绑定样式</h1><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">data &#123;</span><br><span class="line">    <span class="attr">mood</span>: <span class="string">&#x27;style1&#x27;</span>,</span><br><span class="line"></span><br><span class="line">    <span class="attr">classObj</span>:&#123;</span><br><span class="line">        <span class="attr">style1</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">style2</span>: <span class="literal">false</span></span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">styleObj</span>:&#123;</span><br><span class="line">        <span class="attr">fontSize</span>: <span class="string">&#x27;40px&#x27;</span>,</span><br><span class="line">        <span class="attr">color</span>:<span class="string">&#x27;red&#x27;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="attr">styleArr</span>:[&#123;</span><br><span class="line">        <span class="attr">fontSize</span>: <span class="string">&#x27;40px&#x27;</span>,</span><br><span class="line">        <span class="attr">color</span>:<span class="string">&#x27;blue&#x27;</span>,</span><br><span class="line">    &#125;, &#123;</span><br><span class="line">        <span class="attr">backgroundColor</span>:<span class="string">&#x27;gray&#x27;</span></span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;mood&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeMood&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;[&#x27;style1&#x27;,&#x27;style2&#x27;,&#x27;style3&#x27;]&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:class</span>=<span class="string">&quot;classObj&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:style</span>=<span class="string">&quot;styleObj&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">:style</span>=<span class="string">&quot;styleArr&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure></br><h1 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h1><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">v-show</span>=<span class="string">&quot;true&quot;</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;n &gt; 0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;n === 1&quot;</span>&gt;</span>Angular<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;n === 2&quot;</span>&gt;</span>React<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span>Vue<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br></pre></td></tr></table></figure></br><h1 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h1>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Databases</title>
      <link href="/%E7%AC%94%E8%AE%B0/study/databases/"/>
      <url>/%E7%AC%94%E8%AE%B0/study/databases/</url>
      
        <content type="html"><![CDATA[<h1 id="数据库"><a href="#数据库" class="headerlink" title="数据库"></a>数据库</h1><h1 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h1><p>修复mongodb启动失败问题（service mongodb start）：<a href="https://blog.csdn.net/qq_41420747/article/details/82988472">https://blog.csdn.net/qq_41420747/article/details/82988472</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 杀死mongod服务</span></span><br><span class="line">$ sudo pkill mongod</span><br><span class="line"></span><br><span class="line"><span class="comment"># --auth 表示以认证模式启动服务，不加则关闭</span></span><br><span class="line">$ sudo mongod -f /etc/mongod.conf --fork --auth  </span><br></pre></td></tr></table></figure><br><hr><br><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><h2 id="mysql-8-0-30-修改密码"><a href="#mysql-8-0-30-修改密码" class="headerlink" title="mysql 8.0.30 修改密码"></a>mysql 8.0.30 修改密码</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line">mysql&gt; update mysql.user set authentication_string=&#x27;&#x27; where user=&#x27;root&#x27; and host=&#x27;localhost&#x27;;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line">mysql&gt; quit</span><br><span class="line"></span><br><span class="line">$ mysql -u root -p</span><br><span class="line">Enter password:(直接回车)</span><br><span class="line"></span><br><span class="line">mysql&gt; ALTER USER &#x27;root&#x27;@&#x27;localhost&#x27; IDENTIFIED WITH mysql_native_password BY &#x27;root&#x27;;</span><br><span class="line">mysql&gt; FLUSH PRIVILEGES;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="查看mysql端口"><a href="#查看mysql端口" class="headerlink" title="查看mysql端口"></a>查看mysql端口</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql&gt; show global variables like &#x27;port&#x27;;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>npm</title>
      <link href="/%E7%AC%94%E8%AE%B0/study/npm/"/>
      <url>/%E7%AC%94%E8%AE%B0/study/npm/</url>
      
        <content type="html"><![CDATA[<h1 id="npm"><a href="#npm" class="headerlink" title="npm"></a>npm</h1><h2 id="npm换源"><a href="#npm换源" class="headerlink" title="npm换源"></a>npm换源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 不是 https://www.npmjs.com/ 这个会导致登录失败</span></span><br><span class="line">$ npm config <span class="built_in">set</span> registry https://registry.npmjs.com</span><br><span class="line">$ npm config <span class="built_in">set</span> registry https://registry.npm.taobao.org</span><br><span class="line">$ npm config <span class="built_in">set</span> registry http://mirrors.cloud.tencent.com/npm/</span><br></pre></td></tr></table></figure><hr><h2 id="CDN"><a href="#CDN" class="headerlink" title="CDN"></a>CDN</h2><h3 id="关于-cdn-jsdelivr-net-挂了："><a href="#关于-cdn-jsdelivr-net-挂了：" class="headerlink" title="关于 cdn.jsdelivr.net 挂了："></a>关于 cdn.jsdelivr.net 挂了：</h3><blockquote><p>将：<a href="https://cdn.jsdelivr.net/npm">https://cdn.jsdelivr.net/npm</a></p><p>更换为：<a href="https://unpkg.com/">https://unpkg.com</a></p><p>国内镜像源：<a href="https://unpkg.zhimg.com/">https://unpkg.zhimg.com/</a></p></blockquote><h2 id="npm相关设置"><a href="#npm相关设置" class="headerlink" title="npm相关设置"></a>npm相关设置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ npm config <span class="built_in">ls</span><span class="comment"># 查看npm设置</span></span><br><span class="line">$ npm config get prefix<span class="comment"># 获取npm包安装路径</span></span><br><span class="line">$ npm config <span class="built_in">set</span> prefix<span class="comment"># 设置npm包安装路径</span></span><br><span class="line">$ npm config get cache<span class="comment"># 获取npm缓存</span></span><br><span class="line">$ npm config <span class="built_in">set</span> cache<span class="comment"># 设置npm缓存</span></span><br><span class="line">$ npm root -g    <span class="comment"># 查看npm全局路径的根目录</span></span><br><span class="line"></span><br><span class="line">$ npm <span class="built_in">set</span> init-author-name <span class="string">&quot;细粒丁&quot;</span><span class="comment"># 设置初始化作者名</span></span><br><span class="line">$ npm <span class="built_in">set</span> init-author-email <span class="string">&#x27;Your email&#x27;</span><span class="comment"># 设置初始化作者邮箱</span></span><br><span class="line">$ npm <span class="built_in">set</span> init-author-url <span class="string">&#x27;http://yourdomain.com&#x27;</span><span class="comment"># 设置初始化作者地址</span></span><br><span class="line">$ npm <span class="built_in">set</span> init-license <span class="string">&quot;MIT&quot;</span><span class="comment"># 默认ISC# 设置初始化开源协议</span></span><br></pre></td></tr></table></figure><h2 id="其他命令"><a href="#其他命令" class="headerlink" title="其他命令"></a>其他命令</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">$ npm install &lt;package-name&gt;<span class="comment"># 安装一个包</span></span><br><span class="line">$ npm install &lt;package-name&gt;@latest<span class="comment"># 更新依赖包到最新版本</span></span><br><span class="line">$ npm install &lt;package-name&gt;@&lt;版本号&gt;<span class="comment"># 更新依赖包到指定版本</span></span><br><span class="line"></span><br><span class="line">$ npm info &lt;package-name&gt; version<span class="comment"># 查看当前最新版本</span></span><br><span class="line">$ npm info &lt;package-name&gt; versions<span class="comment"># 查看所有版本</span></span><br><span class="line"></span><br><span class="line">$ npm view &lt;package-name&gt; version<span class="comment"># 查看当前最新版本</span></span><br><span class="line">$ npm view &lt;package-name&gt; versions<span class="comment"># 查看所有版本</span></span><br><span class="line"></span><br><span class="line">$ npm adduser<span class="comment"># 添加/注册一个用户</span></span><br><span class="line">$ npm login<span class="comment"># 登录</span></span><br><span class="line">$ npm publish<span class="comment"># 发包</span></span><br><span class="line">$ npm <span class="built_in">whoami</span><span class="comment"># 查看当前登录的帐号</span></span><br><span class="line">$ npm unpublish &lt;package-name&gt; --force<span class="comment"># 撤销一个已发布的包</span></span><br><span class="line">$ npm deprecate &lt;package-name&gt; [@版本] <span class="string">&quot;描述&quot;</span><span class="comment"># 删除一个已发布的包</span></span><br></pre></td></tr></table></figure><h2 id="发版"><a href="#发版" class="headerlink" title="发版"></a>发版</h2><p><strong><a href="https://docs.npmjs.com/packages-and-modules/contributing-packages-to-the-registry">详情官方发版文档</a></strong></p><ol><li><p>创建文件夹（文件夹名即为你的包名）</p></li><li><p>进入文件夹</p></li><li><p>初始化包，并生成package.json</p></li><li><p>编写好文件，及其package.json中的相关信息（如名称、版本号、入口文件、描述等）</p></li><li><p>包使用export导出，本地通过 <code>require</code> 引入测试</p></li><li><p>—— 确保能正常使用则继续（下面则正式发包）——</p></li><li><p>换源，将国内源换成 npm官网的源</p></li><li><p>登录帐号</p></li><li><p>发版 <code>publish</code></p></li><li><p>npm install 自己的包名，进行测试</p></li><li><p>添加 <code>README.md</code> 文件</p></li><li></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建文件夹（文件夹名即为你的包名）</span></span><br><span class="line"><span class="built_in">mkdir</span> test-directory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入文件夹</span></span><br><span class="line"><span class="built_in">cd</span> test-directory</span><br><span class="line"></span><br><span class="line"><span class="comment"># 初始化包，并生成package.json</span></span><br><span class="line"><span class="comment"># -y 表示全部默认</span></span><br><span class="line">npm init [-y] </span><br><span class="line"></span><br><span class="line"><span class="comment"># 换源</span></span><br><span class="line">npm config <span class="built_in">set</span> registry https://registry.npmjs.com</span><br><span class="line"></span><br><span class="line"><span class="comment"># 登录帐号</span></span><br><span class="line">npm login</span><br><span class="line"></span><br><span class="line"><span class="comment"># 发版</span></span><br><span class="line">npm publish</span><br><span class="line"></span><br><span class="line"><span class="comment"># npm 安装自己的包，进行测试</span></span><br><span class="line">npm install test-directory</span><br><span class="line"></span><br><span class="line"><span class="comment"># ------------------------------------</span></span><br><span class="line"><span class="comment"># 额外的：</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 撤销包</span></span><br><span class="line">npm unpublish &lt;package-name&gt; --force  <span class="comment"># 即可从 npm 删除已发布的包。</span></span><br><span class="line"><span class="comment"># 注意：</span></span><br><span class="line"><span class="comment"># npm unpublish 命令只能删除 72 小时以内发布的包</span></span><br><span class="line"><span class="comment"># npm unpublish 删除的包，在 24 小时内不允许重复发布</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除包</span></span><br><span class="line">npm deprecate &lt;package-name&gt; [@版本] <span class="string">&quot;描述&quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// package.json 文件说明</span></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;name&quot;</span><span class="punctuation">:</span> <span class="string">&quot;test-directory&quot;</span><span class="punctuation">,</span><span class="comment">// 包名，跟文件夹名称一样</span></span><br><span class="line">  <span class="attr">&quot;version&quot;</span><span class="punctuation">:</span> <span class="string">&quot;0.0.1&quot;</span><span class="punctuation">,</span><span class="comment">// 版本号</span></span><br><span class="line">  <span class="attr">&quot;description&quot;</span><span class="punctuation">:</span> <span class="string">&quot;将汉语转换成拼音&quot;</span><span class="punctuation">,</span><span class="comment">// 功能描述</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./lib/index.js&quot;</span><span class="punctuation">,</span><span class="comment">// 入口文件</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span><span class="comment">// 支持的脚本</span></span><br><span class="line">    <span class="attr">&quot;test&quot;</span><span class="punctuation">:</span> <span class="string">&quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;keywords&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span><span class="comment">// 关键字，有助于人们使用npm search搜索时候发现你的项目</span></span><br><span class="line">    <span class="string">&quot;汉语&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="string">&quot;拼音&quot;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;git respository&quot;</span><span class="punctuation">:</span><span class="comment">// &quot;git 资源库地址&quot;</span></span><br><span class="line">  <span class="attr">&quot;author&quot;</span><span class="punctuation">:</span> <span class="string">&quot;细粒丁&quot;</span><span class="punctuation">,</span><span class="comment">// 作者</span></span><br><span class="line">  <span class="attr">&quot;license&quot;</span><span class="punctuation">:</span> <span class="string">&quot;MIT&quot;</span><span class="comment">// 开源协议，默认ISC</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><hr><br><h2 id="设置环境变量后，全局安装的包，require-‘’-提示报不存在："><a href="#设置环境变量后，全局安装的包，require-‘’-提示报不存在：" class="headerlink" title="设置环境变量后，全局安装的包，require(‘’)提示报不存在："></a>设置环境变量后，全局安装的包，require(‘’)提示报不存在：</h2><ol><li><p>重启终端</p></li><li><p>重启客户端</p></li><li><p>检查环境变量是否存在 NODE_PATH，没有 则在系统变量添加 NODE_PATH: <code>npm root -g</code> 的路径</p></li><li><p>若是install后 命令不可用，如hexo、webpack，则检查环境变量是否 添加了 npm config get prefix 的路径</p></li></ol><br><hr><br><h2 id="一键升级所有依赖的插件"><a href="#一键升级所有依赖的插件" class="headerlink" title="一键升级所有依赖的插件:"></a>一键升级所有依赖的插件:</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 npm-check-updates</span></span><br><span class="line">$ npm install -g npm-check-updates</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查当前项目中有没有哪些依赖包可更新（简写ncu）</span></span><br><span class="line">$ npm-check-updates</span><br><span class="line"></span><br><span class="line"><span class="comment"># 更新package.json</span></span><br><span class="line"><span class="comment"># 使用场景：真正的依赖包还没有下载下来，所以需要删除 node_modules 重新 install</span></span><br><span class="line">$ ncu -u</span><br></pre></td></tr></table></figure><br><hr><br><h2 id="1-webpack包："><a href="#1-webpack包：" class="headerlink" title="1. webpack包："></a>1. webpack包：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save-dev webpack</span><br><span class="line">$ npm install --save-dev webpack-cli            <span class="comment"># 4.x版本的</span></span><br><span class="line"></span><br><span class="line">$ npm install --save-dev style-loader css-loader<span class="comment"># 加载 CSS</span></span><br><span class="line">$ npm install --save-dev file-loader        <span class="comment"># 加载图片</span></span><br><span class="line">$ npm install --save-dev csv-loader xml-loader    <span class="comment"># 加载数据</span></span><br></pre></td></tr></table></figure><br><hr><br><h2 id="2-express-获取post中的数据"><a href="#2-express-获取post中的数据" class="headerlink" title="2. express 获取post中的数据"></a>2. express 获取post中的数据</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install --save body-parser</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>)</span><br><span class="line"><span class="comment">// 引包</span></span><br><span class="line"><span class="keyword">var</span> bodyParser = <span class="built_in">require</span>(<span class="string">&#x27;body-parser&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> app = <span class="title function_">express</span>()</span><br><span class="line"></span><br><span class="line"><span class="comment">// 配置body-parser</span></span><br><span class="line"><span class="comment">// 只要加入这个配置，则在req请求对象上会多出来一个属性：body</span></span><br><span class="line"><span class="comment">// 也就是说可以直接通过req.body来获取表单post请求数据</span></span><br><span class="line"><span class="comment">// parse application/x-www-form-urlencoded</span></span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">urlencoded</span>(&#123; <span class="attr">extended</span>: <span class="literal">false</span> &#125;))</span><br><span class="line"></span><br><span class="line"><span class="comment">// parse application/json</span></span><br><span class="line">app.<span class="title function_">use</span>(bodyParser.<span class="title function_">json</span>())</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/m0_46672781/article/details/122775175">参考</a></p><br><hr><br><h2 id="3-跨域-amp-不默认请求网页图标"><a href="#3-跨域-amp-不默认请求网页图标" class="headerlink" title="3. 跨域 &amp; 不默认请求网页图标"></a>3. 跨域 &amp; 不默认请求网页图标</h2><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">response.<span class="title function_">writeHead</span>(<span class="number">200</span>, &#123;</span><br><span class="line"><span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json; charset=utf-8&quot;</span>,</span><br><span class="line"><span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line"><span class="string">&quot;Access-Control-Allow-Headers&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;x-frame-options&quot;</span>:<span class="string">&quot;deny&quot;</span>,</span><br><span class="line"><span class="string">&quot;x-content-type-options&quot;</span>:<span class="string">&quot;nosniff&quot;</span>,</span><br><span class="line"><span class="string">&quot;x-xss-protection&quot;</span>:<span class="string">&quot;1&quot;</span>,</span><br><span class="line"><span class="string">&quot;content-security-policy&quot;</span>:<span class="string">&quot;default-src &#x27;none&#x27;&quot;</span>,   <span class="comment">// 不请求网页图标 favicon.ico</span></span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><br><hr><br><h2 id="4-forever"><a href="#4-forever" class="headerlink" title="4. forever"></a>4. forever</h2><h3 id="解决-node-js-后台服务器无操作自动断开连接"><a href="#解决-node-js-后台服务器无操作自动断开连接" class="headerlink" title="解决 node.js 后台服务器无操作自动断开连接"></a>解决 node.js 后台服务器无操作自动断开连接</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 全局安装 forever</span></span><br><span class="line">$ npm install -g forever</span><br><span class="line"></span><br><span class="line"><span class="comment"># index.js是你要启动的js文件</span></span><br><span class="line">$ forever start index.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 会列出forever正在运行的服务脚本</span></span><br><span class="line">$ forever list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止服务运行</span></span><br><span class="line">$ forever stop index.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看帮助信息</span></span><br><span class="line">$ forever --<span class="built_in">help</span></span><br></pre></td></tr></table></figure><h3 id="启动"><a href="#启动" class="headerlink" title="启动"></a>启动</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 最简单的启动方式</span></span><br><span class="line">$ forever start ./index.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定forever日志输出文件，默认路径~/.forever</span></span><br><span class="line">$ forever start -l forever.log ./index.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要注意，如果第一次启动带日志输出文件，以后启动都需要加上 -a 参数，forever默认不覆盖原文件</span></span><br><span class="line">$ forever start -l forever.log -a ../index.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定node.js应用的控制台输出文件和错误信息输出文件</span></span><br><span class="line">$ orever start -o out.log -e err.log ./index.js </span><br><span class="line"></span><br><span class="line"><span class="comment">#监听当前目录下文件改动，如有改动，立刻重启应用，不推荐的做法！如有日志文件，日志文件是频繁更改的</span></span><br><span class="line">$ forever start -w ./index.js</span><br></pre></td></tr></table></figure><h3 id="不太可靠的nohup"><a href="#不太可靠的nohup" class="headerlink" title="不太可靠的nohup"></a>不太可靠的nohup</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">nohup</span> python3 github-calendar.py &gt;&gt; ./log/github-calendar.out 2&gt;&amp;1 &amp;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> node </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Docker</title>
      <link href="/%E7%AC%94%E8%AE%B0/study/docker/"/>
      <url>/%E7%AC%94%E8%AE%B0/study/docker/</url>
      
        <content type="html"><![CDATA[<h1 id="docker"><a href="#docker" class="headerlink" title="docker:"></a>docker:</h1><h2 id="改源"><a href="#改源" class="headerlink" title="改源"></a>改源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">/etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line">docker images </span><br><span class="line">docker image <span class="built_in">ls</span></span><br></pre></td></tr></table></figure><h2 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker pull ImageName:x.x.x(版本号)</span><br></pre></td></tr></table></figure><h2 id="执行如下命令可以运行一个-Ubuntu-的容器。"><a href="#执行如下命令可以运行一个-Ubuntu-的容器。" class="headerlink" title="执行如下命令可以运行一个 Ubuntu 的容器。"></a>执行如下命令可以运行一个 Ubuntu 的容器。</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">docker run --name ubuntu_demo -itd ubuntu:22.04</span><br><span class="line"></span><br><span class="line">–name ubuntu_demo 表示给运行的窗口取名为 ubuntu_demo</span><br><span class="line"></span><br><span class="line">-i 表示 interactive 可交互的，变即可以从标准输入与容器交互。</span><br><span class="line"></span><br><span class="line">-t 表示给容器分配一个虚拟终端。</span><br><span class="line"></span><br><span class="line">-d 这个参数表示的是在后台运行，即 –deamon。</span><br><span class="line"></span><br><span class="line">ubuntu 表示的是运行容器所使用的镜像名称。</span><br></pre></td></tr></table></figure><h2 id="查看运行容器"><a href="#查看运行容器" class="headerlink" title="查看运行容器"></a>查看运行容器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker ps -a | grep ubuntu_demo</span><br></pre></td></tr></table></figure><h2 id="进入容器"><a href="#进入容器" class="headerlink" title="进入容器"></a>进入容器</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ docker <span class="built_in">exec</span> -it ubuntu_demo /bin/bash</span><br><span class="line"></span><br><span class="line"><span class="comment"># 换成阿里源</span></span><br><span class="line">$ sudo <span class="built_in">cp</span> /etc/apt/sources.list /etc/apt/sources.list.bak</span><br><span class="line">$ sudo vim /etc/apt/sources.list</span><br><span class="line">http://mirrors.aliyun.com/ubuntu/</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 更新 apt-get 工具，这个步骤优先级最高，因为不更新很多组件安装不了。另外，可以使用 apt-get 命令简写 apt 来执行安装，效果相同。 </span></span><br><span class="line">$ apt-get update    </span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 vim 工具，初始系统中连 vi 都没有，显然很需要。</span></span><br><span class="line">$ apt install vim</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 wget 工具，如果你需要从网络上下载资源</span></span><br><span class="line">$ apt install wget</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装 curl 工具，如果你需要使用 curl 来访问网络资源  </span></span><br><span class="line">$ apt install curl</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果你需要使用网络工具，比如 ifconfig 等，安装 net-tools</span></span><br><span class="line">$ apt install net-tools</span><br><span class="line"></span><br><span class="line"> <span class="comment"># 如果需要使用 telnet，安装 telnet</span></span><br><span class="line">$ apt install telnet   </span><br></pre></td></tr></table></figure><h2 id="使用docker-inspect命令查看镜像详细信息"><a href="#使用docker-inspect命令查看镜像详细信息" class="headerlink" title="使用docker inspect命令查看镜像详细信息"></a>使用docker inspect命令查看镜像详细信息</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ docker inspect [NAME]/[CONTAINER ID</span><br></pre></td></tr></table></figure><h2 id="服务器重启后，docker服务重启"><a href="#服务器重启后，docker服务重启" class="headerlink" title="服务器重启后，docker服务重启"></a>服务器重启后，docker服务重启</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 容器未启动时，添加该参数</span></span><br><span class="line">$ docker run --restart=always &lt;image&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 容器已启动时</span></span><br><span class="line">$ docker update --restart=always &lt;CONTAINER ID&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 尝试重启10次，都失败就不再尝试重启</span></span><br><span class="line">$ docker run --restart=on-failure:10 &lt;image&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 尝试重启10次，都失败就不再尝试重启</span></span><br><span class="line">$ docker update --restart=on-failure:10 &lt;CONTAINER ID&gt;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">--restart具体参数值详细信息：</span><br><span class="line"></span><br><span class="line">no - 容器退出时，不重启容器；</span><br><span class="line"></span><br><span class="line">on-failure - 只有在非0状态退出时才从新启动容器；</span><br><span class="line"></span><br><span class="line">always - 无论退出状态是如何，都重启容器；</span><br><span class="line">还可以在使用on-failure策略时，指定Docker将尝试重新启动容器的最大次数。默认情况下，Docker将尝试永远重新启动容器</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="容器重命名"><a href="#容器重命名" class="headerlink" title="容器重命名"></a>容器重命名</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rename CONTAINER_NAME new_CONTAINER_NAME</span><br></pre></td></tr></table></figure><h2 id="容器打包成镜像"><a href="#容器打包成镜像" class="headerlink" title="容器打包成镜像"></a>容器打包成镜像</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># docker commit -a &quot;xld&quot; -m &quot;container to image&quot; -p [要打包的容器名称] [镜像名称:版本号] </span></span><br><span class="line">docker commit [OPTIONS] CONTAINER [REPOSITORY[:TAG]]</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">-a : 提交的镜像作者</span><br><span class="line">-c : 使用Dockerfile指令来创建镜像</span><br><span class="line">-m ： 提交时的说明文字</span><br><span class="line">-p : 在commit时，将容器暂停</span><br></pre></td></tr></table></figure><h2 id="镜像打包成压缩包"><a href="#镜像打包成压缩包" class="headerlink" title="镜像打包成压缩包"></a>镜像打包成压缩包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">docker save [OPTIONS] IMAGE [IMAGE...]</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">-o : 用于指定输出的文件名称</span><br><span class="line"></span><br><span class="line">eg: docker save -o  IMAGE_NAME.tar.gz [镜像名称] </span><br><span class="line"></span><br><span class="line">默认为文件流输出：</span><br><span class="line">docker save [镜像名称] &gt; 输出路径/XXX.tar.gz</span><br></pre></td></tr></table></figure><h2 id="导入镜像压缩包"><a href="#导入镜像压缩包" class="headerlink" title="导入镜像压缩包"></a>导入镜像压缩包</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">docker load &lt; [文件路径]</span><br><span class="line"></span><br><span class="line">或</span><br><span class="line"></span><br><span class="line">docker load [OPTIONS] </span><br><span class="line">-i ： 选项指定输入文件路径</span><br><span class="line"></span><br><span class="line">eg: docker load -i [文件路径]</span><br></pre></td></tr></table></figure><h2 id="上传镜像"><a href="#上传镜像" class="headerlink" title="上传镜像"></a>上传镜像</h2><ol><li><p><a href="https://hub.docker.com/">https://hub.docker.com/</a> 创建个人仓库</p></li><li><p>创建镜像</p><p><code>docker build -t username/IMAGE_NAME</code></p></li><li><p>给镜像打标签</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker tag [IMAGEID | IMAGE_NAME] REPOSITORY:TAG</span><br><span class="line">docker tag irext tenyding/irext:latest</span><br></pre></td></tr></table></figure></li><li><p>登录帐号</p><p><code>docker login</code></p></li><li><p>push 镜像</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker push new-repo:tagname</span><br><span class="line">docker push tenyding/irext-aarch64:latest</span><br></pre></td></tr></table></figure></li></ol><p><a href="https://www.cnblogs.com/shineman-zhang/articles/13587561.html">docker 常用命令详解</a></p><br><hr><br><h2 id="1-twikoo-压缩打包备份-amp-docker重启"><a href="#1-twikoo-压缩打包备份-amp-docker重启" class="headerlink" title="1. twikoo 压缩打包备份 &amp; docker重启"></a>1. twikoo 压缩打包备份 &amp; docker重启</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将 twikoo目录 压缩打包成 twikoo.20230118.tar.gz 文件</span></span><br><span class="line">$ tar -zcvf twikoo.20230118.tar.gz twikoo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动docker</span></span><br><span class="line">$ sudo docker run --name twikoo -e TWIKOO_THROTTLE=250 -p 8080:8080 -v /home/ubuntu/blog/twikoo/data:/app/data -d imaegoo/twikoo</span><br><span class="line"></span><br><span class="line"><span class="comment"># 如果说‘The container name &quot;/twikoo&quot; is already in use by container ’</span></span><br><span class="line">$ sudo docker ps -a             <span class="comment"># 查看容器</span></span><br><span class="line">$ sudo docker start containerID <span class="comment"># 重新打开这个twikoo容器即可</span></span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> docker </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派</title>
      <link href="/%E7%AC%94%E8%AE%B0/study/%E6%A0%91%E8%8E%93%E6%B4%BE/"/>
      <url>/%E7%AC%94%E8%AE%B0/study/%E6%A0%91%E8%8E%93%E6%B4%BE/</url>
      
        <content type="html"><![CDATA[<h1 id="树莓派"><a href="#树莓派" class="headerlink" title="树莓派"></a>树莓派</h1><h2 id="树莓派安装非官方系统没有raspi-config命令的解决方法："><a href="#树莓派安装非官方系统没有raspi-config命令的解决方法：" class="headerlink" title="树莓派安装非官方系统没有raspi-config命令的解决方法："></a>树莓派安装非官方系统没有raspi-config命令的解决方法：</h2><ol><li>安装依赖</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install whiptail parted lua5.1 alsa-utils psmisc</span><br></pre></td></tr></table></figure><ol start="2"><li>从Raspberrypi官网下载最新的deb安装包</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget http://archive.raspberrypi.org/debian/pool/main/r/raspi-config/raspi-config_20200707_all.deb</span><br></pre></td></tr></table></figure><ol start="3"><li>安装Deb安装包</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dpkg -i raspi-config_20200707_all.deb</span><br></pre></td></tr></table></figure><ol start="4"><li>装好软件还是提示缺少依赖执行错误</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install -f -y</span><br></pre></td></tr></table></figure><ol start="5"><li>运行raspi-config，需要sudo或以上权限</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo raspi-config</span><br></pre></td></tr></table></figure><hr><h2 id="树莓派通过raspi-config启动摄像头时，出错-Your-firmwave-appears-to-be-out-of-date-no-start-x-elf-Please-update："><a href="#树莓派通过raspi-config启动摄像头时，出错-Your-firmwave-appears-to-be-out-of-date-no-start-x-elf-Please-update：" class="headerlink" title="树莓派通过raspi-config启动摄像头时，出错:Your firmwave appears to be out of date (no start_x.elf). Please update："></a>树莓派通过raspi-config启动摄像头时，出错:Your firmwave appears to be out of date (no start_x.elf). Please update：</h2><ol><li>查看boot分区所在的设备号，设备号可能是：&#x2F;dev&#x2F;mmcblk0p1</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">df</span> -h</span><br></pre></td></tr></table></figure><ol start="2"><li>将该设备号挂载在&#x2F;boot上</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mount /dev/mmcblk0p1 /boot</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 树莓派 </tag>
            
            <tag> 硬件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux &amp; Ubuntu</title>
      <link href="/%E7%AC%94%E8%AE%B0/study/linux&amp;ubuntu/"/>
      <url>/%E7%AC%94%E8%AE%B0/study/linux&amp;ubuntu/</url>
      
        <content type="html"><![CDATA[<h1 id="linux"><a href="#linux" class="headerlink" title="linux"></a>linux</h1><p><code>$ ps -e | grep apt</code></p><p><code>$ ps aux |grep mysqld</code></p><h2 id="服务端网卡："><a href="#服务端网卡：" class="headerlink" title="服务端网卡："></a>服务端网卡：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo dhclient enp0s8</span><br><span class="line">$ sudo dhclient enp0s3</span><br></pre></td></tr></table></figure><hr><h2 id="Ubuntu桌面"><a href="#Ubuntu桌面" class="headerlink" title="Ubuntu桌面"></a>Ubuntu桌面</h2><ol><li>在命令行运行以下命令更新</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get update</span><br><span class="line">$ apt-get upgrade</span><br></pre></td></tr></table></figure><ol start="2"><li>安装桌面</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install -y ubuntu-desktop</span><br></pre></td></tr></table></figure><ol start="3"><li>安装xrdp</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ apt-get install -y xrdp</span><br></pre></td></tr></table></figure><p>安装完成后，即可使用Windows远程桌面工具登录Ubuntu。</p><hr><h2 id="Ubuntu换源"><a href="#Ubuntu换源" class="headerlink" title="Ubuntu换源"></a>Ubuntu换源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/apt/sources.list</span><br><span class="line">将      http://cn.archive.ubuntu.com/ubuntu</span><br><span class="line">换成https://mirrors.aliyun.com/ubuntu/</span><br><span class="line"></span><br><span class="line">清华开源镜像站</span><br><span class="line">https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu-ports/</span><br></pre></td></tr></table></figure><hr><h2 id="ubuntu查看处理器和系统架构："><a href="#ubuntu查看处理器和系统架构：" class="headerlink" title="ubuntu查看处理器和系统架构："></a>ubuntu查看处理器和系统架构：</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">uname</span> -a;</span><br><span class="line">$ <span class="built_in">uname</span> -m;</span><br><span class="line">$ dpkg --print-architecture；</span><br><span class="line">$ getconf LONG_BIT;</span><br><span class="line">$ file /sbin/init;</span><br></pre></td></tr></table></figure><p>21.04 hirsute<br>20.04 focal<br>18.04 bionic<br>16.04 xenial<br>14.04 trusty<br>12.04 precise</p><hr><h2 id="Ubuntu删除无用的dpkg包"><a href="#Ubuntu删除无用的dpkg包" class="headerlink" title="Ubuntu删除无用的dpkg包"></a>Ubuntu删除无用的dpkg包</h2><p>dpkg -l 命令可以查看所有安装的包，其中rc状态的包是卸载了包但配置文件还在，可以使用以下命令进行清理：<br>$ dpkg -l | grep ^rc | cut -d’ ‘ -f3 | sudo xargs dpkg –purge</p><p>包管理 dpkg 解释<br><a href="https://blog.csdn.net/qiuchangyong/article/details/97505379">https://blog.csdn.net/qiuchangyong/article/details/97505379</a><br>$ sudo dpkg –add-architecture arm64(当前状态，不行就remove掉)<br>$ sudo dpkg –remove-architecture arm64</p><hr><h2 id="sh-x2F-bin-x2F-bash-M-执行错误"><a href="#sh-x2F-bin-x2F-bash-M-执行错误" class="headerlink" title="sh: &#x2F;bin&#x2F;bash^M:执行错误"></a>sh: &#x2F;bin&#x2F;bash^M:执行错误</h2><p>原因是windows下的文件是dos格式，即每一行结尾以\r\n来标识，而linux下的文件是unix格式，行尾则以\n来标识。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim xxx.sh</span><br><span class="line">:<span class="built_in">set</span> ff=unix</span><br><span class="line">:wq</span><br><span class="line">./xxx.sh</span><br></pre></td></tr></table></figure><hr><h2 id="挂载"><a href="#挂载" class="headerlink" title="挂载"></a>挂载</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ fdisk -l</span><br><span class="line">$ <span class="built_in">df</span></span><br><span class="line">$ <span class="built_in">df</span> -h</span><br><span class="line"></span><br><span class="line">$ mount /dev/xxx /mnt/xxx</span><br><span class="line">$ umount /dev/xxx</span><br></pre></td></tr></table></figure><hr><h2 id="查看文件或文件夹占用大小"><a href="#查看文件或文件夹占用大小" class="headerlink" title="查看文件或文件夹占用大小"></a>查看文件或文件夹占用大小</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">du</span>   命令常用来查看目录或文件所占用磁盘空间的大小。常用选项组合为：<span class="built_in">du</span> -sh</span><br><span class="line"></span><br><span class="line"><span class="built_in">du</span>常用的选项：</span><br><span class="line"></span><br><span class="line">　　-h:　　以人类可读的方式显示</span><br><span class="line"></span><br><span class="line">　　-a:　　显示目录的占用的磁盘空间大小，还要显示其下目录和文件占用的磁盘空间大小</span><br><span class="line"></span><br><span class="line">　　-s:　　显示目录占用的磁盘空间大小，不要显示其下目录和文件占用的磁盘空间大小</span><br><span class="line"></span><br><span class="line">　　-c:　　显示几个目录或文件占用的磁盘空间大小，并统计它们的总和</span><br><span class="line"></span><br><span class="line">　　--apparent-size: 显示目录或文件自身的大小</span><br><span class="line"></span><br><span class="line">　　-l:　　统计硬链接占用磁盘空间的大小</span><br><span class="line"></span><br><span class="line">　　-L:　　统计符号链接所指向的文件占用的磁盘空间大小</span><br><span class="line"></span><br><span class="line"> </span><br><span class="line"></span><br><span class="line"><span class="built_in">du</span>  -sh  :查看当前目录总共的容量，不单独列出各子项占用的容量。</span><br><span class="line"></span><br><span class="line"><span class="built_in">du</span>  -lh --max-depth=1 :查看当前目录下一级子文件和子目录占用的磁盘容量</span><br><span class="line"></span><br><span class="line"><span class="built_in">du</span>  -sh *| <span class="built_in">sort</span> -n  统计当前文件夹（目录）大小，并按文件大小排序</span><br><span class="line"></span><br><span class="line"><span class="built_in">du</span>  -sk filename  查看指定文件夹大小</span><br></pre></td></tr></table></figure><hr><h2 id="删除snap旧的包"><a href="#删除snap旧的包" class="headerlink" title="删除snap旧的包"></a>删除snap旧的包</h2><h3 id="查看包文件"><a href="#查看包文件" class="headerlink" title="查看包文件"></a>查看包文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /var/lib/snapd/snaps/</span><br><span class="line">ll</span><br></pre></td></tr></table></figure><h3 id="查看文件版本的可用性"><a href="#查看文件版本的可用性" class="headerlink" title="查看文件版本的可用性"></a>查看文件版本的可用性</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">snap list --all</span><br></pre></td></tr></table></figure><h3 id="脚本自动删除"><a href="#脚本自动删除" class="headerlink" title="脚本自动删除"></a>脚本自动删除</h3><p>Alan Pope 在 Snapcraft 团队工作时写的一个灵巧的 bash 脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> </span><br><span class="line">vim clean_snap.sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"><span class="comment">#Removes old revisions of snaps</span></span><br><span class="line"><span class="comment">#CLOSE ALL SNAPS BEFORE RUNNING THIS</span></span><br><span class="line"><span class="built_in">set</span> -eu</span><br><span class="line">LANG=en_US.UTF-8 snap list --all | awk <span class="string">&#x27;/disabled/&#123;print $1, $3&#125;&#x27;</span> |</span><br><span class="line"><span class="keyword">while</span> <span class="built_in">read</span> snapname revision; <span class="keyword">do</span></span><br><span class="line">snap remove <span class="string">&quot;<span class="variable">$snapname</span>&quot;</span> --revision=<span class="string">&quot;<span class="variable">$revision</span>&quot;</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">chmod</span> +x clean_snap.sh</span><br><span class="line">./clean_snap.sh</span><br></pre></td></tr></table></figure><hr><h2 id="计算文件hash值"><a href="#计算文件hash值" class="headerlink" title="计算文件hash值"></a>计算文件hash值</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">shasum filename</span><br></pre></td></tr></table></figure><hr><h2 id="网络共享文件夹：samba"><a href="#网络共享文件夹：samba" class="headerlink" title="网络共享文件夹：samba"></a>网络共享文件夹：samba</h2><p>$ sudo apt install samba<br>$ sudo vim &#x2F;etc&#x2F;samba&#x2F;smb.conf</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">[share]</span><br><span class="line">path = /mnt/</span><br><span class="line">available = yes</span><br><span class="line">browseable = yes</span><br><span class="line">public = yes</span><br><span class="line">writable = yes</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="重启samba服务"><a href="#重启samba服务" class="headerlink" title="重启samba服务"></a>重启samba服务</h1><p>$ sudo service smbd reload</p><h1 id="查看有关“java”的进程"><a href="#查看有关“java”的进程" class="headerlink" title="查看有关“java”的进程"></a>查看有关“java”的进程</h1><p>ps aux|grep java</p><h1 id="查看DNS-ip链路"><a href="#查看DNS-ip链路" class="headerlink" title="查看DNS ip链路"></a>查看DNS ip链路</h1><p>nslookup google.cn</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> linux </tag>
            
            <tag> 系统 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows</title>
      <link href="/%E7%AC%94%E8%AE%B0/study/windows/"/>
      <url>/%E7%AC%94%E8%AE%B0/study/windows/</url>
      
        <content type="html"><![CDATA[<h1 id="windows-下的一些操作"><a href="#windows-下的一些操作" class="headerlink" title="windows 下的一些操作"></a>windows 下的一些操作</h1><h2 id="Windows快速复制-x2F-移动-大量文件（多线程）"><a href="#Windows快速复制-x2F-移动-大量文件（多线程）" class="headerlink" title="Windows快速复制&#x2F;移动 大量文件（多线程）"></a>Windows快速复制&#x2F;移动 大量文件（多线程）</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">robocopy D:\备份 J:\D\备份 *.* /mt /z /move /e</span><br></pre></td></tr></table></figure><br/><h2 id="系统检修"><a href="#系统检修" class="headerlink" title="系统检修"></a>系统检修</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Dism /Online /Cleanup-Image /ScanHealth</span><br><span class="line">Dism /Online /Cleanup-Image /CheckHealth</span><br><span class="line">DISM /Online /Cleanup-image /RestoreHealth</span><br><span class="line"></span><br><span class="line">sfc/scannow</span><br></pre></td></tr></table></figure><br/><h2 id="打印颜色"><a href="#打印颜色" class="headerlink" title="打印颜色"></a>打印颜色</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">write-host <span class="string">&quot;hello world&quot;</span> -foregroundcolor <span class="string">&quot;green&quot;</span></span><br></pre></td></tr></table></figure><br/><h2 id="查看DNS-ip链路"><a href="#查看DNS-ip链路" class="headerlink" title="查看DNS ip链路"></a>查看DNS ip链路</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nslookup google.cn</span><br></pre></td></tr></table></figure><br/><h2 id="ATTRIB"><a href="#ATTRIB" class="headerlink" title="ATTRIB"></a>ATTRIB</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">显示或更改文件属性。</span><br><span class="line"></span><br><span class="line">ATTRIB [+R | -R] [+A | -A] [+S | -S] [+H | -H] [+O | -O] [+I | -I] [+X | -X] [+P | -P] [+U | -U]</span><br><span class="line">       [drive:][path][filename] [/S [/D]] [/L]</span><br><span class="line"></span><br><span class="line">  +   设置属性。</span><br><span class="line">  -   清除属性。</span><br><span class="line">  R   只读文件属性。</span><br><span class="line">  A   存档文件属性。</span><br><span class="line">  S   系统文件属性。</span><br><span class="line">  H   隐藏文件属性。</span><br><span class="line">  O   脱机属性。</span><br><span class="line">  I   无内容索引文件属性。</span><br><span class="line">   X   无清理文件属性。</span><br><span class="line">  V   完整性属性。</span><br><span class="line">  P   固定属性。</span><br><span class="line">  U   非固定属性。</span><br><span class="line">  [drive:][path][filename]</span><br><span class="line">      指定属性要处理的文件。</span><br><span class="line">  /S  处理当前文件夹及其所有子文件夹中</span><br><span class="line">      的匹配文件。</span><br><span class="line">  /D  也处理文件夹。</span><br><span class="line">  /L  处理符号链接和</span><br><span class="line">      符号链接目标的属性</span><br></pre></td></tr></table></figure><br/><h2 id="计算文件的hash值"><a href="#计算文件的hash值" class="headerlink" title="计算文件的hash值"></a>计算文件的hash值</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">certutil -hashfile FilePath</span><br></pre></td></tr></table></figure><br/><hr><br/><h2 id="终端"><a href="#终端" class="headerlink" title="终端"></a>终端</h2><p>无法加载文件 *.ps1，因为在此系统上禁止运行脚本。</p><ol><li>管理员身份-启动 powershell</li><li><code>$ Get-ExecutionPolicy</code> 显示 <code>Restricted</code></li><li><code>$ Set-ExecutionPolicy RemoteSigned</code><ul><li>Y</li></ul></li><li><code>$ Get-ExecutionPolicy</code> 显示 <code>RemoteSigned</code></li></ol><br/><hr><br/><h2 id="注册表相关"><a href="#注册表相关" class="headerlink" title="注册表相关"></a>注册表相关</h2><h3 id="右键菜单"><a href="#右键菜单" class="headerlink" title="右键菜单"></a>右键菜单</h3><ol><li>win-R  “regedit”</li><li>“计算机\HKEY_CLASSES_ROOT\Directory\Background\shell “</li></ol><br/><h3 id="cmd-编码"><a href="#cmd-编码" class="headerlink" title="cmd 编码"></a>cmd 编码</h3><p><code>也可以是 打开终端的时候，自动执行的代码</code></p><ol><li>cmd -&gt; regedit</li><li>计算机<code>\HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Command Processor</code></li><li>新建字符串值，autorun: chcp 936</li></ol><br/><h3 id="windows-老式的图片查看器设置"><a href="#windows-老式的图片查看器设置" class="headerlink" title="windows 老式的图片查看器设置"></a>windows 老式的图片查看器设置</h3><ol><li>打开注册表 <code>HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows Photo Viewer\Capabilities\FileAssociations</code></li><li>新建字符串值，名称为后缀名(.jpg) 值为”PhotoViewer.FileAssoc.Tiff”(同上面的一样)</li></ol><br/><hr><br/><h2 id="一些软件"><a href="#一些软件" class="headerlink" title="一些软件"></a>一些软件</h2><h3 id="编辑器终端中，全局的npm命令不可用"><a href="#编辑器终端中，全局的npm命令不可用" class="headerlink" title="编辑器终端中，全局的npm命令不可用"></a>编辑器终端中，全局的npm命令不可用</h3><p>哪个命令不能用，就删掉哪个 *.ps1 的文件<br><code>C:\Users\asus\AppData\Roaming\npm</code></p><br/><h3 id="Node-amp-npm-设置"><a href="#Node-amp-npm-设置" class="headerlink" title="Node &amp; npm 设置"></a>Node &amp; npm 设置</h3><p>Windows 安装Node &amp; 修改npm配置：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">$ npm config <span class="built_in">set</span> registry http://mirrors.cloud.tencent.com/npm/</span><br><span class="line">$ npm config <span class="built_in">set</span> prefix=<span class="string">&quot;D:\\_Program\\Node\\node_global&quot;</span></span><br><span class="line">$ npm config <span class="built_in">set</span> cache=<span class="string">&quot;D:\\_Program\\Node\\node_cache&quot;</span></span><br></pre></td></tr></table></figure><p>配置系统变量，新建 NODE_PATH 后输入node_modules的路径：<br><code>D:\\_Program\\Node\\node_global\\node_modules</code></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ node -v</span><br><span class="line">$ npm -v</span><br><span class="line">$ npm install axios -g</span><br><span class="line">$ node </span><br><span class="line">&gt; require(<span class="string">&#x27;axios&#x27;</span>)</span><br></pre></td></tr></table></figure><br/><h3 id="VSCode"><a href="#VSCode" class="headerlink" title="VSCode"></a>VSCode</h3><h4 id="修改默认编码"><a href="#修改默认编码" class="headerlink" title="修改默认编码"></a>修改默认编码</h4><p>File(文件)-&gt;Preferences(首选项)-&gt;Usersettings(设置)<br>搜索encoding，</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 系统 </tag>
            
            <tag> windows </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git</title>
      <link href="/%E7%AC%94%E8%AE%B0/study/git/"/>
      <url>/%E7%AC%94%E8%AE%B0/study/git/</url>
      
        <content type="html"><![CDATA[<h1 id="Git-学习"><a href="#Git-学习" class="headerlink" title="Git 学习"></a>Git 学习</h1></br><h2 id="Windows-初始化操作、基础操作"><a href="#Windows-初始化操作、基础操作" class="headerlink" title="Windows 初始化操作、基础操作"></a>Windows 初始化操作、基础操作</h2><blockquote><ol><li>新建文件夹</li><li>进入文件夹，右击git bash here</li><li></li></ol></blockquote><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ git init</span><br><span class="line"><span class="comment">#（添加用户名+email）方法在底下 #</span></span><br><span class="line">$ git remote add origin XXX                     <span class="comment"># 添加远程仓库地址</span></span><br><span class="line">$ git pull</span><br></pre></td></tr></table></figure><p></br></br></p><h2 id="基本配置"><a href="#基本配置" class="headerlink" title="基本配置"></a>基本配置</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ git config --global user.name <span class="string">&#x27;username&#x27;</span>              <span class="comment"># 设置用户名</span></span><br><span class="line">$ git config --global user.email <span class="string">&#x27;your_email@xx.com&#x27;</span>    <span class="comment"># 设置邮箱</span></span><br><span class="line">$ git config --list                                     <span class="comment"># 查看设置</span></span><br><span class="line">$ git config  credential.helper store                   <span class="comment"># 不用每次push都输入账号密码</span></span><br><span class="line">$ git config http.proxy                                 <span class="comment"># 开VPN代理，push失败 但能打开页面</span></span><br></pre></td></tr></table></figure><p></br></br></p><h2 id="基本操作"><a href="#基本操作" class="headerlink" title="基本操作"></a>基本操作</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 提交操作</span></span><br><span class="line">$ git add <span class="string">&#x27;文件名&#x27;</span>          <span class="comment"># 工作区→暂存区</span></span><br><span class="line">$ git commit -m <span class="string">&#x27;描述&#x27;</span>      <span class="comment"># 暂存区→Git仓库</span></span><br><span class="line">$ git push origin master    <span class="comment"># 提交到 master 分支 </span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 远程仓库</span></span><br><span class="line">$ git remote -v                         <span class="comment"># 查看远程仓库详细信息，可以看到仓库名称</span></span><br><span class="line">$ git remote remove orign               <span class="comment"># 删除orign仓库（如果把origin拼写成orign，删除错误名称仓库）</span></span><br><span class="line">$ git remote add origin <span class="string">&#x27;XXX&#x27;</span>           <span class="comment"># 重新添加远程仓库地址</span></span><br><span class="line">$ git remote set-url --add origin <span class="string">&quot;XXX&quot;</span> <span class="comment"># 添加多个仓库地址</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 分支操作</span></span><br><span class="line">$ git branch                <span class="comment"># 展示分支</span></span><br><span class="line">$ git branch -d master      <span class="comment"># 将master分支删除</span></span><br><span class="line">$ git merge master          <span class="comment"># 将master分支合并到main上</span></span><br><span class="line">$ git checkout -b main      <span class="comment"># 切换到main分支上（没有则创建）</span></span><br><span class="line">$ git checkout .            <span class="comment"># 本地所有修改的。没有的提交的，都返回到原来的状态</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 推拉操作</span></span><br><span class="line">$ git <span class="built_in">clone</span> -b dev origin   <span class="comment"># 拉取特定分支(dev:分支名称)</span></span><br><span class="line">$ git fetch origin master   <span class="comment"># 强制覆盖本地</span></span><br><span class="line">$ git pull origin dev</span><br><span class="line"></span><br><span class="line">$ git push origin main      <span class="comment"># 推到main分支上</span></span><br><span class="line">$ git push -u origin master <span class="comment"># 提交到远程仓库的master主干,并设置origin为上游分支(即后续 git push 即可)</span></span><br><span class="line">$ git push -f origin master <span class="comment"># 强制上传覆盖</span></span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 其他操作</span></span><br><span class="line"></span><br><span class="line">$ git status   <span class="comment"># 查看当前文件的状况（工作区/暂存区）</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 查</span></span><br><span class="line">$ git config --global --list</span><br><span class="line">$ git config --global user.name</span><br><span class="line">$ git remote -v</span><br><span class="line"></span><br><span class="line"><span class="comment"># 增</span></span><br><span class="line">$ git config --global --add user.name <span class="string">&#x27;xld&#x27;</span></span><br><span class="line">$ git remote set-url --add origin <span class="string">&quot;XXX&quot;</span> <span class="comment"># 添加多个仓库地址</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删</span></span><br><span class="line">$ git config  --global --<span class="built_in">unset</span> user.name</span><br><span class="line"></span><br><span class="line"><span class="comment"># 改</span></span><br><span class="line">$ git config --global user.name <span class="string">&#x27;xld&#x27;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong><a href="https://www.runoob.com/git/git-basic-operations.html">菜鸟教程 - Git 基本操作：https://www.runoob.com/git/git-basic-operations.html</a></strong></p><p><br><br></p><hr><p><br><br></p><h2 id="Github"><a href="#Github" class="headerlink" title="Github"></a>Github</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># github.con</span></span><br><span class="line"></span><br><span class="line">13.114.40.48</span><br><span class="line">13.250.177.223</span><br><span class="line">13.229.188.59</span><br><span class="line">52.74.223.119</span><br><span class="line">52.192.72.89</span><br><span class="line">140.82.112.4</span><br><span class="line">192.30.255.113</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> git </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue</title>
      <link href="/%E7%AC%94%E8%AE%B0/study/vue/"/>
      <url>/%E7%AC%94%E8%AE%B0/study/vue/</url>
      
        <content type="html"><![CDATA[<h1 id="Vue-学习"><a href="#Vue-学习" class="headerlink" title="Vue 学习"></a>Vue 学习</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 运行单独的Vue页面</span></span><br><span class="line">$ npm install -g @vue/cli-service-global</span><br><span class="line">$ vue serve</span><br><span class="line"></span><br><span class="line"><span class="comment"># 1. 下载安装 Node.js </span></span><br><span class="line"><span class="comment"># 2. npm 换源</span></span><br><span class="line"><span class="comment"># 3. npm安装Vue</span></span><br><span class="line"><span class="comment"># 4. 运行</span></span><br></pre></td></tr></table></figure><h2 id="Vue简介"><a href="#Vue简介" class="headerlink" title="Vue简介"></a>Vue简介</h2><ol><li><p>Vue是什么？</p><blockquote><p>一套用于构建用户界面的<code>渐进式</code>JavaScript框架</p><blockquote><p>渐进式：Vue可以自底向上逐层的<code>应用</code></p><blockquote><p>简单应用：只需一个轻量小巧的核心库    (100+ kb)</p><p>复杂应用：可以引入各式各样的 Vue 插件</p></blockquote></blockquote></blockquote></li></ol></br><ol start="2"><li><p>谁开发的？</p><ul><li>尤雨溪</li></ul></li></ol></br><ol start="3"><li><p>Vue的特点</p><ul><li>采用<code>组件化</code>模式，提高代码复用率，且让代码更好维护</li><li><code>声明式</code>编码，让编码人员无需直接操作DOM，提高开发效率</li><li>使用<code>虚拟DOM</code> + 优秀的<code>DIff算法</code>，尽量复用DOM节点</li></ul></li></ol></br><ol start="4"><li><p>学习Vue之前要掌握的JavaScript基础知识</p><ul><li>ES6语法规范</li><li>ES6模块化</li><li>包管理        （npm等）</li><li>原型、原型链</li><li>数组常用方法</li><li>axios</li><li>promise</li><li>……</li></ul></li></ol><hr><h2 id="Vue官网使用指南"><a href="#Vue官网使用指南" class="headerlink" title="Vue官网使用指南"></a>Vue官网使用指南</h2><p><a href="https://cn.vuejs.org/">https://cn.vuejs.org/</a></p><p><a href="https://www.bilibili.com/video/BV1Zy4y1K7SH/?p=3">https://www.bilibili.com/video/BV1Zy4y1K7SH/?p=3</a></p><hr><h2 id="Vue-环境搭建"><a href="#Vue-环境搭建" class="headerlink" title="Vue 环境搭建"></a>Vue 环境搭建</h2><ol><li><p>直接用 &lt;script&gt; 引入</p><ul><li>开发版本: 包含完整的警告和调试模式。&#x3D;&gt;   <code>vue.js</code></li><li>生产版本: 删除了警告，压缩。       &#x3D;&gt;   <code>vue.min.js</code></li></ul></li><li><p>npm + Vue-cli</p></li></ol><hr></br><h2 id="开始-Hello-World-案例"><a href="#开始-Hello-World-案例" class="headerlink" title="开始 Hello World 案例"></a>开始 Hello World 案例</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>初识Vue<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- 引入Vue --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> <span class="attr">src</span>=<span class="string">&quot;../js/vue.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">            初识Vue：</span></span><br><span class="line"><span class="comment">                1.想让Vue工作，就必须创建一个Vue实例，且要传入一个配置对象；</span></span><br><span class="line"><span class="comment">                2.root容器里的代码依然符合html规范，只不过混入了一些特殊的Vue语法；</span></span><br><span class="line"><span class="comment">                3.root容器里的代码被称为【Vue模板】；</span></span><br><span class="line"><span class="comment">                4.Vue实例和容器是一一对应的；</span></span><br><span class="line"><span class="comment">                5.真实开发中只有一个Vue实例，并且会配合着组件一起使用；</span></span><br><span class="line"><span class="comment">                6.&#123;&#123;xxx&#125;&#125;中的xxx要写js表达式，且xxx可以自动读取到data中的所有属性；</span></span><br><span class="line"><span class="comment">                7.一旦data中的数据发生改变，那么页面中用到该数据的地方也会自动更新；</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">            注意区分：js表达式 和 js代码(语句)</span></span><br><span class="line"><span class="comment">                1.表达式：一个表达式会产生一个值，可以放在任何一个需要值的地方：</span></span><br><span class="line"><span class="comment">                    (1). a</span></span><br><span class="line"><span class="comment">                    (2). a+b</span></span><br><span class="line"><span class="comment">                    (3). demo(1)</span></span><br><span class="line"><span class="comment">                    (4). x === y ? &#x27;a&#x27; : &#x27;b&#x27;</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">                2.js代码(语句)</span></span><br><span class="line"><span class="comment">                    (1). if()&#123;&#125;</span></span><br><span class="line"><span class="comment">                    (2). for()&#123;&#125;</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">&lt;!-- 准备好一个容器 --&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;demo&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Hello，&#123;&#123;name.toUpperCase()&#125;&#125;，&#123;&#123;address&#125;&#125;<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span> &gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">productionTip</span> = <span class="literal">false</span> <span class="comment">//阻止 vue 在启动时生成生产提示。</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">//创建Vue实例</span></span></span><br><span class="line"><span class="language-javascript">            <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">el</span>:<span class="string">&#x27;#demo&#x27;</span>, <span class="comment">//el用于指定当前Vue实例为哪个容器服务，值通常为css选择器字符串。</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">data</span>:&#123; <span class="comment">//data中用于存储数据，数据供el所指定的容器去使用，值我们暂时先写成一个对象。</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">name</span>:<span class="string">&#x27;xld&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">address</span>:<span class="string">&#x27;广东&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">        </span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure></br><h2 id="模板语法"><a href="#模板语法" class="headerlink" title="模板语法"></a>模板语法</h2><p><strong><code>Vue模板语法有2大类</code></strong></p><ol><li><p><strong><code>插值语法</code></strong></p><pre><code> 功能：用于解析标签体内容。 写法：&#123;&#123;xxx&#125;&#125;，xxx是js表达式，且可以直接读取到data中的所有属性。</code></pre></li><li><p><strong><code>指令语法</code></strong></p><pre><code> 功能：用于解析标签（包括：标签属性、标签体内容、绑定事件.....）。 举例：v-bind:href=&quot;xxx&quot; 或  简写为 :href=&quot;xxx&quot;，xxx同样要写js表达式，             且可以直接读取到data中的所有属性。 备注：Vue中有很多的指令，且形式都是：v-????，此处我们只是拿v-bind举个例子。</code></pre></li></ol></br><h2 id="数据绑定"><a href="#数据绑定" class="headerlink" title="数据绑定"></a>数据绑定</h2><p><strong><code>Vue中有2种数据绑定的方式：</code></strong></p><ol><li><p><strong><code>单向绑定(v-bind)</code></strong></p><pre><code> 数据只能从data流向页面。</code></pre></li><li><p><strong><code>双向绑定(v-model)</code></strong></p><p> 数据不仅能从data流向页面，还可以从页面流向data。</p><p> 备注：</p><blockquote><ol><li>双向绑定一般都应用在表单类元素上（如：input、select等）</li><li><code>v-model:value</code> 可以简写为 <code>v-model</code>，因为 v-model 默认收集的就是value值。</li><li><code>v-model</code> 只能应用在表单类元素（输入类元素）上</li></ol></blockquote></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">单向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">:value</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">双向数据绑定：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;name&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br></pre></td></tr></table></figure></br><h2 id="el与data的两种写法"><a href="#el与data的两种写法" class="headerlink" title="el与data的两种写法"></a>el与data的两种写法</h2><h3 id="el的2种写法"><a href="#el的2种写法" class="headerlink" title="el的2种写法"></a><strong><code>el的2种写法</code></strong></h3><ol><li><p>new Vue时候配置el属性。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> v = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>, <span class="comment">// 第一种写法</span></span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;细粒丁&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>先创建Vue实例，随后再通过 <code>vm.$mount(&#39;#root&#39;)</code> 指定el的值。</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> v = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;细粒丁&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br><span class="line">v.$mount(<span class="string">&#x27;#root&#x27;</span>) <span class="comment">// 第二种写法</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="data的2种写法"><a href="#data的2种写法" class="headerlink" title="data的2种写法"></a><strong><code>data的2种写法</code></strong></h3><ol><li><p>对象式</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span><br><span class="line">    <span class="comment">//data的第一种写法：对象式</span></span><br><span class="line">    <span class="attr">data</span>:&#123;</span><br><span class="line">        <span class="attr">name</span>:<span class="string">&#x27;细粒丁&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></li><li><p>函数式</p> <figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span><br><span class="line">    <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span><br><span class="line">    <span class="title function_">data</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;@@@&#x27;</span>,<span class="variable language_">this</span>) <span class="comment">//此处的this是Vue实例对象</span></span><br><span class="line">        <span class="keyword">return</span>&#123;</span><br><span class="line">            <span class="attr">name</span>:<span class="string">&#x27;细粒丁&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p> 如何选择：目前哪种写法都可以<br> 组件时，data必须使用函数式，否则会报错。</p></li></ol><h3 id="一个重要的原则"><a href="#一个重要的原则" class="headerlink" title="一个重要的原则"></a><strong><code>一个重要的原则</code></strong></h3><ul><li>由Vue管理的函数，一定 <code>不要</code> 写 <code>箭头函数</code>，一旦写了箭头函数，this 就不再是Vue实例了。</li></ul></br><h2 id="理解MVVM"><a href="#理解MVVM" class="headerlink" title="理解MVVM"></a>理解MVVM</h2><pre><code>MVVM模型    1. M：模型(Model) ：data中的数据    2. V：视图(View) ：模板代码    3. VM：视图模型(ViewModel)：Vue实例观察发现：    1.data中所有的属性，最后都出现在了vm身上。    2.vm身上所有的属性 及 Vue原型上所有属性，在Vue模板中都可以直接使用。</code></pre></br><h2 id="Object-defineProperty"><a href="#Object-defineProperty" class="headerlink" title="Object.defineProperty"></a>Object.defineProperty</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> number = <span class="number">18</span></span><br><span class="line"><span class="keyword">let</span> person = &#123;</span><br><span class="line">    <span class="attr">name</span>:<span class="string">&#x27;张三&#x27;</span>,</span><br><span class="line">    <span class="attr">sex</span>:<span class="string">&#x27;男&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过</span></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(person,<span class="string">&#x27;age&#x27;</span>,&#123;</span><br><span class="line">    <span class="comment">// value:18,            // </span></span><br><span class="line">    <span class="comment">// enumerable:true,     // 控制属性是否可以枚举，默认值是false</span></span><br><span class="line">    <span class="comment">// writable:true,       // 控制属性是否可以被修改，默认值是false</span></span><br><span class="line">    <span class="comment">// configurable:true    // 控制属性是否可以被删除，默认值是false</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">//当有人读取person的age属性时，get函数(getter)就会被调用，且返回值就是age的值</span></span><br><span class="line">    <span class="title function_">get</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;有人读取age属性了&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> number</span><br><span class="line">    &#125;,</span><br><span class="line"></span><br><span class="line">    <span class="comment">//当有人修改person的age属性时，set函数(setter)就会被调用，且会收到修改的具体值</span></span><br><span class="line">    <span class="title function_">set</span>(<span class="params">value</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;有人修改了age属性，且值是&#x27;</span>,value)</span><br><span class="line">        number = value</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;)</span><br><span class="line"></span><br><span class="line"><span class="comment">// console.log(Object.keys(person)) // age不可枚举时,则获取不到age</span></span><br><span class="line"><span class="comment">// persion.age = 20                 // age不可修改时,则修改失败</span></span><br><span class="line"><span class="comment">// delete person.age                // age不可删除时,则删除失败</span></span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(person)</span><br></pre></td></tr></table></figure></br><h2 id="数据代理"><a href="#数据代理" class="headerlink" title="数据代理"></a>数据代理</h2><p>数据代理：通过一个对象代理对另一个对象中属性的操作（读&#x2F;写）</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> obj = &#123;<span class="attr">x</span>:<span class="number">100</span>&#125;</span><br><span class="line"><span class="keyword">let</span> obj2 = &#123;<span class="attr">y</span>:<span class="number">200</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="title class_">Object</span>.<span class="title function_">defineProperty</span>(obj2,<span class="string">&#x27;x&#x27;</span>,&#123;</span><br><span class="line">    <span class="title function_">get</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> obj.<span class="property">x</span></span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="title function_">set</span>(<span class="params">value</span>)&#123;</span><br><span class="line">        obj.<span class="property">x</span> = value</span><br><span class="line">    &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></br><h2 id="Vue-中的数据代理"><a href="#Vue-中的数据代理" class="headerlink" title="Vue 中的数据代理"></a>Vue 中的数据代理</h2><ol><li><p>Vue中的数据代理：</p><pre><code> 通过vm对象来代理data对象中属性的操作（读/写）</code></pre></li><li><p>Vue中数据代理的好处：</p><pre><code> 更加方便的操作data中的数据</code></pre></li><li><p>基本原理：</p><blockquote><ol><li>通过 <code>Object.defineProperty()</code> 把 <code>data</code> 对象中所有属性添加到vm上</li><li>为每一个添加到vm上的属性，都指定一个getter&#x2F;setter</li><li>在 getter&#x2F;setter 内部去操作（读&#x2F;写）data 中对应的属性</li></ol></blockquote></li></ol></br><h2 id="事件处理"><a href="#事件处理" class="headerlink" title="事件处理"></a>事件处理</h2><blockquote><p>事件的基本使用：</p><ol><li>使用 <code>v-on:xxx</code> 或 <code>@xxx</code> 绑定事件，其中xxx是事件名；</li><li>事件的回调需要配置在methods对象中，最终会在vm上；</li><li>methods中配置的函数，<code>不要</code> 用 <code>箭头函数</code>！否则this就不是vm了；</li><li>methods中配置的函数，都是被Vue所管理的函数，this的指向是vm 或 组件实例对象；</li><li><code>@click=&quot;demo&quot;</code> 和 <code>@click=&quot;demo($event)&quot;</code> 效果一致，但后者可以传参；</li></ol></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo1&quot;</span>&gt;</span>点我提示信息1（不传参）<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo2($event,66)&quot;</span>&gt;</span>点我提示信息2（传参）<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">showInfo1</span>(<span class="params">event</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(event)</span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(event.<span class="property">target</span>.<span class="property">innerText</span>, <span class="variable language_">this</span>) <span class="comment">// 此处的this是vm</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">showInfo2</span>(<span class="params">event,number</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(event,number)           <span class="comment">// number:66</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">alert</span>(event.<span class="property">target</span>.<span class="property">innerText</span>, <span class="variable language_">this</span>) <span class="comment">// 此处的this是vm</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></br><h2 id="事件修饰符"><a href="#事件修饰符" class="headerlink" title="事件修饰符"></a>事件修饰符</h2><blockquote><p>Vue中的事件修饰符：</p><ol><li><code>prevent</code>：阻止默认事件 (常用) - 如<code>&lt;a&gt;</code>标签的跳转</li><li><code>stop</code>：阻止事件冒泡 (常用) - 子元素不触发父元素事件</li><li><code>once</code>：事件只触发一次 (常用)</li><li><code>capture</code>：使用事件的捕获模式 - 父元素不触发子元素事件<br>注：捕获是从父传到子，冒泡是从子传到父，先捕获 后冒泡</li><li><code>self</code>：只有<code>event.target</code>是当前操作的元素时才触发事件；</li><li><code>passive</code>：事件的默认行为立即执行，无需等待事件回调执行完毕；</li></ol></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 阻止默认事件（常用, 执行完 showInfo 后不跳转 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;https://tenyding.cn&quot;</span> @<span class="attr">click.prevent</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 阻止事件冒泡（常用）, 点 button 不会触发 demo1 中的 showInfo --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.stop</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 修饰符可以连续写 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;a href=&quot;https://tenyding.cn&quot; @click.prevent.stop=&quot;showInfo&quot;&gt;点我提示信息&lt;/a&gt; --&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 事件只触发一次（常用） --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">button</span> @<span class="attr">click.once</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 使用事件的捕获模式, 点击div2，会先触发div1里的事件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span> @<span class="attr">click.capture</span>=<span class="string">&quot;showMsg(1)&quot;</span>&gt;</span></span><br><span class="line">    div1</span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;showMsg(2)&quot;</span>&gt;</span></span><br><span class="line">        div2</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 只有event.target是当前操作的元素时才触发事件； --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 点击button时，不会触发div的 showInfo 事件 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;demo1&quot;</span> @<span class="attr">click.self</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span>点我提示信息<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 滚动条滚动后，滚动条往下滚动后，才会处理demo事件</span></span><br><span class="line"><span class="comment">        &lt;ul @scroll=&quot;demo&quot; class=&quot;list&quot;&gt; --&gt;</span></span><br><span class="line"><span class="comment">&lt;!-- 滚轮滚动后，会处理完demo事件后，滚动条才会往下滚动</span></span><br><span class="line"><span class="comment">        &lt;ul @wheel=&quot;demo&quot; class=&quot;list&quot;&gt; --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- 事件的默认行为立即执行，无需等待事件回调执行完毕； --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">ul</span> @<span class="attr">wheel.passive</span>=<span class="string">&quot;demo&quot;</span> <span class="attr">class</span>=<span class="string">&quot;list&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>1<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>2<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>3<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">li</span>&gt;</span>4<span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">ul</span>&gt;</span></span><br></pre></td></tr></table></figure></br><h2 id="键盘事件"><a href="#键盘事件" class="headerlink" title="键盘事件"></a>键盘事件</h2><blockquote><ol><li><p>Vue中常用的按键别名：</p><pre><code>回车 =&gt; enter删除 =&gt; delete (捕获“删除”和“退格”键)退出 =&gt; esc空格 =&gt; space换行 =&gt; tab (特殊，必须配合keydown去使用)上 =&gt; up下 =&gt; down左 =&gt; left右 =&gt; right</code></pre></li><li><p>Vue未提供别名的按键，可以使用按键原始的key值去绑定，但注意要转为 <code>kebab-case</code>（短横线命名）</p></li><li><p>系统修饰键（用法特殊）：<code>ctrl</code>、<code>alt</code>、<code>shift</code>、<code>meta(win键)</code></p><pre><code>(1). 配合keyup使用：按下修饰键的同时，再按下其他键，随后释放其他键，事件才被触发。(2). 配合keydown使用：正常触发事件。</code></pre></li><li><p>也可以使用keyCode去指定具体的按键（不推荐）</p></li><li><p><code>Vue.config.keyCodes.自定义键名 = 键码</code>，可以去定制按键别名</p></li></ol></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;按下ctrl+y触发showInfo&quot;</span> @<span class="attr">keyup.ctrl.y</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;按下CapsLock(大小写切换)触发showInfo&quot;</span> @<span class="attr">keyup.caps-lock</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;按下回车触发showInfo&quot;</span> @<span class="attr">keyup.13</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;按下回车触发showInfo&quot;</span> @<span class="attr">keyup.enter</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">placeholder</span>=<span class="string">&quot;按下回车触发showInfo&quot;</span> @<span class="attr">keydown.huiche</span>=<span class="string">&quot;showInfo&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="title class_">Vue</span>.<span class="property">config</span>.<span class="property">keyCodes</span>.<span class="property">huiche</span> = <span class="number">13</span> <span class="comment">//定义了一个别名按键</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">showInfo</span>(<span class="params">e</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// console.log(e.key,e.keyCode)</span></span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">console</span>.<span class="title function_">log</span>(e.<span class="property">target</span>.<span class="property">value</span>)</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></br><h2 id="计算属性"><a href="#计算属性" class="headerlink" title="计算属性"></a>计算属性</h2><blockquote><ol><li>定义：要用的属性<code>不存在</code>，要通过已有属性计算得来</li><li>原理：底层借助了<code>Objcet.defineproperty</code>方法提供的 getter 和 setter</li><li>get函数什么时候执行？<ul><li>初次读取时会执行一次。</li><li>当依赖的数据<code>发生改变</code>时会被再次调用。</li></ul></li><li>优势：与methods实现相比，内部有缓存机制（复用），效率更高，调试方便。</li><li>备注：<ul><li>计算属性最终会出现在vm上，直接读取使用即可。</li><li>如果计算属性要被修改，那必须写<code>set函数</code>去响应修改，且set中要引起计算时依赖的数据发生改变。</li></ul></li></ol></blockquote><h3 id="姓名案例-拼接姓名"><a href="#姓名案例-拼接姓名" class="headerlink" title="姓名案例 - 拼接姓名"></a>姓名案例 - 拼接姓名</h3><ol><li><p>第一种写法 <code>前端插值语法</code> 实现</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">        全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;firstName&#125;&#125;-&#123;&#123;lastName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">firstName</span>:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">lastName</span>:<span class="string">&#x27;三&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>第二种写法 <code>methods</code> 函数返回值 实现</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName()&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">firstName</span>:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">lastName</span>:<span class="string">&#x27;三&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">fullName</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">&#x27;-&#x27;</span> + <span class="variable language_">this</span>.<span class="property">lastName</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>第三种写法 <code>computed</code> 计算属性 实现</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">firstName</span>:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">lastName</span>:<span class="string">&#x27;三&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">fullName</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//get有什么作用？当有人读取fullName时，get就会被调用，且返回值就作为fullName的值</span></span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//get什么时候调用？1.初次读取fullName时。2.所依赖的数据发生变化时。</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">get</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;get被调用了&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">                    <span class="comment">// console.log(this) //此处的this是vm</span></span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">&#x27;-&#x27;</span> + <span class="variable language_">this</span>.<span class="property">lastName</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">//set什么时候调用? 当fullName被修改时。</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">set</span>(<span class="params">value</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;set&#x27;</span>,value)</span></span><br><span class="line"><span class="language-javascript">                    <span class="keyword">const</span> arr = value.<span class="title function_">split</span>(<span class="string">&#x27;-&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">this</span>.<span class="property">firstName</span> = arr[<span class="number">0</span>]</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">this</span>.<span class="property">lastName</span> = arr[<span class="number">1</span>]</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="计算属性简写"><a href="#计算属性简写" class="headerlink" title="计算属性简写"></a>计算属性简写</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">computed</span>:&#123;</span><br><span class="line">    <span class="comment">//简写</span></span><br><span class="line">    <span class="title function_">fullName</span>(<span class="params"></span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;get被调用了&#x27;</span>)</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">&#x27;-&#x27;</span> + <span class="variable language_">this</span>.<span class="property">lastName</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></br><h2 id="监视属性"><a href="#监视属性" class="headerlink" title="监视属性"></a>监视属性</h2><blockquote><p>监视属性watch：</p><ol><li>当被监视的属性变化时, 回调函数自动调用, 进行相关操作</li><li>监视的<code>属性必须存在</code>，才能进行监视</li><li>监视的两种写法：<ol><li>new Vue时传入watch配置</li><li>通过vm.$watch监视</li></ol></li></ol></blockquote><h3 id="天气案例"><a href="#天气案例" class="headerlink" title="天气案例"></a>天气案例</h3><p>点击按钮，切换状态，从而显示不同内容</p><ol><li><p>普通方法</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- &lt;button @click=&quot;isHot = !isHot&quot;&gt;切换天气&lt;/button&gt; --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">isHot</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">info</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">isHot</span> ? <span class="string">&#x27;炎热&#x27;</span> : <span class="string">&#x27;凉爽&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">changeWeather</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">isHot</span> = !<span class="variable language_">this</span>.<span class="property">isHot</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li><li><p>监视方法，利用 <code>watch</code> 实现</p> <figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">isHot</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">info</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">isHot</span> ? <span class="string">&#x27;炎热&#x27;</span> : <span class="string">&#x27;凉爽&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">changeWeather</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">isHot</span> = !<span class="variable language_">this</span>.<span class="property">isHot</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="comment">// watch 的第一种写法</span></span></span><br><span class="line"><span class="language-javascript">        <span class="comment">/* watch:&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            isHot:&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                immediate:true, //初始化时让handler调用一下</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                //handler什么时候调用？当isHot发生改变时。</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                handler(newValue,oldValue)&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                    console.log(&#x27;isHot被修改了&#x27;,newValue,oldValue)</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">        &#125; */</span></span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="comment">// watch 的第二种写法</span></span></span><br><span class="line"><span class="language-javascript">    vm.$watch(<span class="string">&#x27;isHot&#x27;</span>,&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">immediate</span>:<span class="literal">true</span>, <span class="comment">//初始化时让handler调用一下</span></span></span><br><span class="line"><span class="language-javascript">        <span class="title function_">handler</span>(<span class="params">newValue,oldValue</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;isHot被修改了&#x27;</span>,newValue,oldValue)</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></li></ol><h3 id="深度监视"><a href="#深度监视" class="headerlink" title="深度监视"></a>深度监视</h3><blockquote><p>深度监视：</p><ol><li>Vue中的watch默认不监测对象内部值的改变（一层）。</li><li>配置 <code>deep:true</code> 可以监测对象内部值改变（多层）。</li><li>备注：<ol><li>Vue自身可以监测对象内部值的改变(setter监测到了)，但Vue提供的watch默认不可以！</li><li>使用watch时根据数据的具体结构，决定是否采用深度监视。</li></ol></li></ol></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 准备好一个容器--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>今天天气很&#123;&#123;info&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;changeWeather&quot;</span>&gt;</span>切换天气<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>a的值是:&#123;&#123;numbers.a&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;numbers.a++&quot;</span>&gt;</span>点我让a+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>b的值是:&#123;&#123;numbers.b&#125;&#125;<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;numbers.b++&quot;</span>&gt;</span>点我让b+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;numbers = &#123;a:666,b:888&#125;&quot;</span>&gt;</span>彻底替换掉numbers<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line">        &#123;&#123;numbers.c.d.e&#125;&#125;</span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">isHot</span>:<span class="literal">true</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">numbers</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">a</span>:<span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">b</span>:<span class="number">1</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">c</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">d</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                        <span class="attr">e</span>:<span class="number">100</span></span></span><br><span class="line"><span class="language-javascript">                    &#125;</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">computed</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">info</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">return</span> <span class="variable language_">this</span>.<span class="property">isHot</span> ? <span class="string">&#x27;炎热&#x27;</span> : <span class="string">&#x27;凉爽&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">changeWeather</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">isHot</span> = !<span class="variable language_">this</span>.<span class="property">isHot</span></span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">watch</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">isHot</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// immediate:true, //初始化时让handler调用一下</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">handler</span>(<span class="params">newValue,oldValue</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;isHot被修改了&#x27;</span>,newValue,oldValue)</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 监视多级结构中某个属性的变化</span></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">/* &#x27;numbers.a&#x27;:&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                handler()&#123;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                    console.log(&#x27;a被改变了&#x27;)</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">                &#125;</span></span></span><br><span class="line"><span class="comment"><span class="language-javascript">            &#125; */</span></span></span><br><span class="line"><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 监视多级结构中所有属性的变化</span></span></span><br><span class="line"><span class="language-javascript">            <span class="attr">numbers</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">deep</span>:<span class="literal">true</span>,  <span class="comment">// 若为false，则只监视numbers的地址值是否变化，里面的内容不监视</span></span></span><br><span class="line"><span class="language-javascript">                <span class="title function_">handler</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;numbers改变了&#x27;</span>)</span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="监视的简写形式"><a href="#监视的简写形式" class="headerlink" title="监视的简写形式"></a>监视的简写形式</h3><blockquote><p>简写模式下，默认:</p><p><code>immediate</code> 为 <code>false</code></p><p><code>deep</code> 为 <code>false</code></p></blockquote><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 向 Vue 传入 watch 配置对象写法</span></span><br><span class="line"><span class="attr">watch</span>:&#123;</span><br><span class="line">    <span class="title function_">isHot</span>(<span class="params">newValue,oldValue</span>)&#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;isHot被修改了&#x27;</span>,newValue,oldValue,<span class="variable language_">this</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 通过vm.$watch监视</span></span><br><span class="line">vm.$watch(<span class="string">&#x27;isHot&#x27;</span>,<span class="function">(<span class="params">newValue,oldValue</span>)=&gt;</span>&#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;isHot被修改了&#x27;</span>,newValue,oldValue,<span class="variable language_">this</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><h2 id="watch对比computed"><a href="#watch对比computed" class="headerlink" title="watch对比computed"></a>watch对比computed</h2><blockquote><p><code>computed</code> 和 <code>watch</code> 之间的区别：</p><ol><li><p><code>computed</code> 能完成的功能，<code>watch</code> <code>都可以</code>完成。</p></li><li><p><code>watch</code> 能完成的功能，<code>computed</code> 不一定能完成，例如：watch可以进行异步操作。<br> 解释：因为 <code>computed</code> 依靠 <code>return</code> 返回值，而 return 不能延时&#x2F;异步</p></li><li><p>两个重要的小原则：</p><ol><li>所<code>被</code>Vue管理的函数，<code>最好</code>写成<code>普通函数</code>，这样this的指向才是vm 或 组件实例对象。</li><li>所有<code>不被</code>Vue所管理的函数（定时器的回调函数、ajax的回调函数等、Promise的回调函数），<br> <code>最好</code>写成<code>箭头函数</code>，这样this的指向才是vm 或 组件实例对象。</li></ol></li></ol></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- 姓名案例_watch实现 --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    姓：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;firstName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    名：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;text&quot;</span> <span class="attr">v-model</span>=<span class="string">&quot;lastName&quot;</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    全名：<span class="tag">&lt;<span class="name">span</span>&gt;</span>&#123;&#123;fullName&#125;&#125;<span class="tag">&lt;/<span class="name">span</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">firstName</span>:<span class="string">&#x27;张&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">lastName</span>:<span class="string">&#x27;三&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">fullName</span>:<span class="string">&#x27;张-三&#x27;</span></span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">watch</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">firstName</span>(<span class="params">val</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="comment">// 实现异步</span></span></span><br><span class="line"><span class="language-javascript">                <span class="built_in">setTimeout</span>(<span class="function">()=&gt;</span>&#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>)</span></span><br><span class="line"><span class="language-javascript">                    <span class="variable language_">this</span>.<span class="property">fullName</span> = val + <span class="string">&#x27;-&#x27;</span> + <span class="variable language_">this</span>.<span class="property">lastName</span></span></span><br><span class="line"><span class="language-javascript">                &#125;,<span class="number">1000</span>);</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">lastName</span>(<span class="params">val</span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">fullName</span> = <span class="variable language_">this</span>.<span class="property">firstName</span> + <span class="string">&#x27;-&#x27;</span> + val</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure></br><h2 id="绑定样式"><a href="#绑定样式" class="headerlink" title="绑定样式"></a>绑定样式</h2><ol><li><p><strong><code>class 样式</code></strong></p><blockquote><p>写法 <code>:class=&quot;xxx&quot;</code> ，xxx 可以是字符串、对象、数组。</p><ul><li><code>字符串写法</code>适用于：类名不确定，要动态获取。</li><li><code>对象写法</code>适用于：要绑定多个样式，个数不确定，名字也不确定。</li><li><code>数组写法</code>适用于：要绑定多个样式，个数确定，名字也确定，但不确定用不用。</li></ul></blockquote></li><li><p><strong><code>style 样式</code></strong></p><blockquote><p><code>:style=&quot;&#123;fontSize: xxx&#125;&quot;</code>  其中xxx是动态值。<br><code>:style=&quot;[a,b]&quot;</code>    其中a、b是样式对象。</p></blockquote></li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.basic</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">400px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    </span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.happy</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">4px</span> solid red;;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">0</span>, <span class="number">0.644</span>);</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">30deg</span>,yellow,pink,orange,yellow);</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.sad</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border</span>: <span class="number">4px</span> dashed <span class="built_in">rgb</span>(<span class="number">2</span>, <span class="number">197</span>, <span class="number">2</span>);</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: gray;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.normal</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: skyblue;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.xld1</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background-color</span>: yellowgreen;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.xld2</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-size</span>: <span class="number">30px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-shadow</span>:<span class="number">2px</span> <span class="number">2px</span> <span class="number">10px</span> red;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.xld3</span>&#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-radius</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 绑定class样式--字符串写法，适用于：样式的类名不确定，需要动态指定 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;mood&quot;</span> @<span class="attr">click</span>=<span class="string">&quot;changeMood&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 绑定class样式--数组写法，适用于：要绑定的样式个数不确定、名字也不确定 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 绑定class样式--对象写法，适用于：要绑定的样式个数确定、名字也确定，但要动态决定用不用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:class</span>=<span class="string">&quot;classObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 绑定style样式--对象写法 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;styleObj&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">br</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span>/&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 绑定style样式--数组写法 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;basic&quot;</span> <span class="attr">:style</span>=<span class="string">&quot;styleArr&quot;</span>&gt;</span>&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">name</span>:<span class="string">&#x27;细粒丁&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">mood</span>:<span class="string">&#x27;normal&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">classArr</span>:[<span class="string">&#x27;xld1&#x27;</span>,<span class="string">&#x27;xld2&#x27;</span>,<span class="string">&#x27;xld3&#x27;</span>],</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">classObj</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">xld1</span>:<span class="literal">false</span>,     <span class="comment">// true:生效，false:不生效</span></span></span><br><span class="line"><span class="language-javascript">                <span class="attr">xld2</span>:<span class="literal">false</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">styleObj</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">fontSize</span>: <span class="string">&#x27;40px&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">color</span>:<span class="string">&#x27;red&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">styleObj2</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="attr">backgroundColor</span>:<span class="string">&#x27;orange&#x27;</span></span></span><br><span class="line"><span class="language-javascript">            &#125;,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">styleArr</span>:[</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">fontSize</span>: <span class="string">&#x27;40px&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">color</span>:<span class="string">&#x27;blue&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">                &#125;,</span></span><br><span class="line"><span class="language-javascript">                &#123;</span></span><br><span class="line"><span class="language-javascript">                    <span class="attr">backgroundColor</span>:<span class="string">&#x27;gray&#x27;</span></span></span><br><span class="line"><span class="language-javascript">                &#125;</span></span><br><span class="line"><span class="language-javascript">            ]</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">methods</span>: &#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="comment">// 随机选定一个类名</span></span></span><br><span class="line"><span class="language-javascript">            <span class="title function_">changeMood</span>(<span class="params"></span>)&#123;</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> arr = [<span class="string">&#x27;happy&#x27;</span>,<span class="string">&#x27;sad&#x27;</span>,<span class="string">&#x27;normal&#x27;</span>]</span></span><br><span class="line"><span class="language-javascript">                <span class="keyword">const</span> index = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>()*<span class="number">3</span>)</span></span><br><span class="line"><span class="language-javascript">                <span class="variable language_">this</span>.<span class="property">mood</span> = arr[index]</span></span><br><span class="line"><span class="language-javascript">            &#125;</span></span><br><span class="line"><span class="language-javascript">        &#125;,</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="条件渲染"><a href="#条件渲染" class="headerlink" title="条件渲染"></a>条件渲染</h2><blockquote><ol><li><p><code>v-if</code></p><p>写法：</p><ul><li><p><code>v-if=&quot;表达式&quot;</code></p></li><li><p><code>v-else-if=&quot;表达式&quot;</code></p></li><li><p><code>v-else=&quot;表达式&quot;</code></p><pre><code>适用于：切换频率较低的场景。特点：不展示的DOM元素直接被移除。注意：v-if可以和:v-else-if、v-else一起使用，但要求结构不能被“打断”。</code></pre></li></ul></li><li><p>v-show</p><p> 写法：<code>v-show=&quot;表达式&quot;</code></p><pre><code>适用于：切换频率较高的场景。  特点：不展示的DOM元素未被移除，仅仅是使用样式隐藏掉</code></pre></li><li><p>备注：<br>   使用 <code>v-if</code> 的时，元素可能无法获取到，而使用 <code>v-show</code> 一定可以获取到</p></li></ol></blockquote><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">&quot;root&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>当前的n值是:&#123;&#123;n&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">button</span> @<span class="attr">click</span>=<span class="string">&quot;n++&quot;</span>&gt;</span>点我n+1<span class="tag">&lt;/<span class="name">button</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 使用v-show做条件渲染 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-show</span>=<span class="string">&quot;false&quot;</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-show</span>=<span class="string">&quot;1 === 1&quot;</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- 使用v-if做条件渲染 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;false&quot;</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">h2</span> <span class="attr">v-if</span>=<span class="string">&quot;1 === 1&quot;</span>&gt;</span>欢迎来到&#123;&#123;name&#125;&#125;<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- v-else和v-else-if --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-if</span>=<span class="string">&quot;n === 1&quot;</span>&gt;</span>Angular<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;n === 2&quot;</span>&gt;</span>React<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else-if</span>=<span class="string">&quot;n === 3&quot;</span>&gt;</span>Vue<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">v-else</span>&gt;</span>哈哈<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!-- v-if与template的配合使用 --&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">template</span> <span class="attr">v-if</span>=<span class="string">&quot;n === 1&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>你好<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>细粒丁<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span>&gt;</span>广东<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">template</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript">    <span class="keyword">const</span> vm = <span class="keyword">new</span> <span class="title class_">Vue</span>(&#123;</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">el</span>:<span class="string">&#x27;#root&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">        <span class="attr">data</span>:&#123;</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">name</span>:<span class="string">&#x27;细粒丁&#x27;</span>,</span></span><br><span class="line"><span class="language-javascript">            <span class="attr">n</span>:<span class="number">0</span></span></span><br><span class="line"><span class="language-javascript">        &#125;</span></span><br><span class="line"><span class="language-javascript">    &#125;)</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="列表渲染"><a href="#列表渲染" class="headerlink" title="列表渲染"></a>列表渲染</h2><h2 id="key作用与原理"><a href="#key作用与原理" class="headerlink" title="key作用与原理"></a>key作用与原理</h2><h2 id="列表过滤"><a href="#列表过滤" class="headerlink" title="列表过滤"></a>列表过滤</h2><h2 id="列表排序"><a href="#列表排序" class="headerlink" title="列表排序"></a>列表排序</h2><h2 id="更新时的一个问题"><a href="#更新时的一个问题" class="headerlink" title="更新时的一个问题"></a>更新时的一个问题</h2><h2 id="Vue监测数据的原理-对象"><a href="#Vue监测数据的原理-对象" class="headerlink" title="Vue监测数据的原理_对象"></a>Vue监测数据的原理_对象</h2><h2 id="Vue-set-方法"><a href="#Vue-set-方法" class="headerlink" title="Vue.set()方法"></a>Vue.set()方法</h2><h2 id="Vue监测数据的原理-数组"><a href="#Vue监测数据的原理-数组" class="headerlink" title="Vue监测数据的原理_数组"></a>Vue监测数据的原理_数组</h2><h2 id="总结Vue监视数据"><a href="#总结Vue监视数据" class="headerlink" title="总结Vue监视数据"></a>总结Vue监视数据</h2><h2 id="收集表单数据"><a href="#收集表单数据" class="headerlink" title="收集表单数据"></a>收集表单数据</h2><h2 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h2><h2 id="v-text指令"><a href="#v-text指令" class="headerlink" title="v-text指令"></a>v-text指令</h2><h2 id="v-html指令"><a href="#v-html指令" class="headerlink" title="v-html指令"></a>v-html指令</h2><h2 id="v-cloak指令"><a href="#v-cloak指令" class="headerlink" title="v-cloak指令"></a>v-cloak指令</h2><h2 id="v-once指令"><a href="#v-once指令" class="headerlink" title="v-once指令"></a>v-once指令</h2><h2 id="v-pre指令"><a href="#v-pre指令" class="headerlink" title="v-pre指令"></a>v-pre指令</h2><h2 id="自定义指令-函数式"><a href="#自定义指令-函数式" class="headerlink" title="自定义指令_函数式"></a>自定义指令_函数式</h2><h2 id="自定义指令-对象式"><a href="#自定义指令-对象式" class="headerlink" title="自定义指令_对象式"></a>自定义指令_对象式</h2><h2 id="自定义指令总结"><a href="#自定义指令总结" class="headerlink" title="自定义指令总结"></a>自定义指令总结</h2><h2 id="生命周期"><a href="#生命周期" class="headerlink" title="生命周期"></a>生命周期</h2><h2 id="组件"><a href="#组件" class="headerlink" title="组件"></a>组件</h2><br/><hr><br/><h1 id="Vuex"><a href="#Vuex" class="headerlink" title="Vuex"></a>Vuex</h1><ol><li>安装VueX<blockquote><ul><li>Vue2中，要使用Vuex的3版本<ul><li><code>$ npm i vuex@3</code></li></ul></li><li>Vue3中，要使用Vuex的4版本<ul><li><code>$ npm i vuex</code></li></ul></li></ul></blockquote></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm i vuex</span><br></pre></td></tr></table></figure><blockquote></blockquote>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
          <category> study </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>树莓派(aarch64 linux主机的)初始化</title>
      <link href="/%E7%AC%94%E8%AE%B0/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
      <url>/%E7%AC%94%E8%AE%B0/%E6%A0%91%E8%8E%93%E6%B4%BE%E5%88%9D%E5%A7%8B%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="格卡"><a href="#格卡" class="headerlink" title="格卡"></a>格卡</h1><p>用管理员权限打开 “SDFormatter.exe”</p><p>把对应的卡格式化</p><p>Option:</p><pre><code>FORMAT TYPE: QUICKFORMAT SIZE ADJUSTMENT: ON      // 对齐</code></pre><hr><h1 id="烧录"><a href="#烧录" class="headerlink" title="烧录"></a>烧录</h1><p>用管理员权限打开 “USB Image Tool.exe”</p><ul><li>左上角选项为: Device Mode</li></ul><blockquote><p>  Restore： 刷写、恢复系统<br>  Rescan： （刷多张卡的时候才会用得到）<br>  Backup： 备份系统（镜像快照？集群时用）</p></blockquote><br><p><strong>或直接使用 <a href="https://downloads.raspberrypi.org/imager/imager_latest.exe">树莓派官方烧录软件</a> 进行格卡和烧录</strong></p><p><code>建议自己下载镜像，官方的烧录软件要梯子 而且速度慢</code></p><ul><li><a href="https://www.raspberrypi.com/software/operating-systems/">Raspberry Pi OS 镜像</a></li><li><a href="https://cn.ubuntu.com/download/raspberry-pi">安装在树莓派上的Ubuntu</a></li></ul><hr><h1 id="进入系统"><a href="#进入系统" class="headerlink" title="进入系统"></a>进入系统</h1><p>正常安装，设置好 语言、WiFi、时区等</p><hr><h1 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h1><h2 id="su-认证"><a href="#su-认证" class="headerlink" title="su 认证"></a>su 认证</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo passwd</span><br></pre></td></tr></table></figure><h2 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h2><p><a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu-ports/">https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu-ports/</a></p><p>选择对应版本，复制粘贴</p><h3 id="更新"><a href="#更新" class="headerlink" title="更新"></a>更新</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt update</span><br><span class="line">$ sudo apt upgrade</span><br></pre></td></tr></table></figure><h2 id="安装-ssh"><a href="#安装-ssh" class="headerlink" title="安装 ssh"></a>安装 ssh</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install openssh-server</span><br></pre></td></tr></table></figure><p>查看是否ssh服务是否启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ps -e | grep ssh</span><br></pre></td></tr></table></figure><p>有sshd证明已经启动，没有则需要启动ssh服务：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo service ssh start</span><br></pre></td></tr></table></figure><h2 id="生成公钥、私钥"><a href="#生成公钥、私钥" class="headerlink" title="生成公钥、私钥"></a>生成公钥、私钥</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建.ssh目录</span></span><br><span class="line">$ <span class="built_in">mkdir</span> .ssh</span><br><span class="line">$ <span class="built_in">cd</span> .ssh</span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成公私钥</span></span><br><span class="line">$ ssh-keygen</span><br><span class="line"></span><br><span class="line"><span class="comment"># 复制一份公钥</span></span><br><span class="line">$ <span class="built_in">cp</span> id_rsa.pub authorized_keys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 authorized_keys 的权限</span></span><br><span class="line"><span class="comment"># $ chmod 755 ~</span></span><br><span class="line"><span class="comment"># $ chmod 700 ~/.ssh</span></span><br><span class="line"><span class="comment"># $ chmod 600 ~/.ssh/authorized_keys</span></span><br></pre></td></tr></table></figure><p>将要免密登录的电脑的公钥 追加到 <strong>authorized_keys</strong> 里即可</p><hr><h1 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h1><h2 id="安装git"><a href="#安装git" class="headerlink" title="安装git"></a>安装git</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install git</span><br></pre></td></tr></table></figure><p><em><strong>注：这里往后基本上都是 root 在进行的，注意切换！</strong></em></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 配置git用户</span></span><br><span class="line">$ adduser git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改权限</span></span><br><span class="line">$ <span class="built_in">chmod</span> 740 /etc/sudoers</span><br><span class="line">$ vim /etc/sudoers</span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 root ALL=(ALL:ALL) ALL 下面添加:</span></span><br><span class="line">git ALL=(ALL:ALL) ALL</span><br><span class="line"></span><br><span class="line"><span class="comment"># 然后保存并退出，将 sudoers 文件权限改回原样：</span></span><br><span class="line">$ <span class="built_in">chmod</span> 400 /etc/sudoers</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置 git 用户的密码：</span></span><br><span class="line">$ sudo passwd git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到 git 用户，然后在 ~ 目录下创建 .ssh 文件夹</span></span><br><span class="line"><span class="comment"># 同上文 配置-&gt;生成公钥、私钥</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 authorized_keys 的权限</span></span><br></pre></td></tr></table></figure><h2 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 进入到 git 用户</span></span><br><span class="line"><span class="comment"># $ su root</span></span><br><span class="line"><span class="comment"># $ cd /home/git</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在 /home/git下创建新仓库 xxx.git</span></span><br><span class="line">$ git init --bare xxx.git</span><br><span class="line"></span><br><span class="line"><span class="comment"># 给予 git 用户权限</span></span><br><span class="line">$ <span class="built_in">chown</span> git:git -R blog.git</span><br></pre></td></tr></table></figure><h2 id="hooks"><a href="#hooks" class="headerlink" title="hooks"></a>hooks</h2><p>假设当前用户为：xld</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 在 xld 的目录下创建文件夹 xxx</span></span><br><span class="line">$ <span class="built_in">cd</span> </span><br><span class="line">$ <span class="built_in">mkdir</span> xxx </span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加可写权限</span></span><br><span class="line">$ <span class="built_in">chmod</span> 777 xxx/</span><br></pre></td></tr></table></figure><p>返回到git用户</p><p>在 <code>/home/git/xxx.git/hooks/</code> 下创建 <code>post-receive</code> 文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> xxx.git/hooks/</span><br><span class="line">$ vim post-receive</span><br></pre></td></tr></table></figure><p>添加以下内容：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">git --work-tree=/home/xld/xxx --git-dir=/home/git/xxx.git checkout -f</span><br></pre></td></tr></table></figure><p>保存退出，添加可执行权限：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">chmod</span> +x /home/git/xxx.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>这样就可以将提交到 <code>/home/git/xxx.git</code> 仓库里的内容，同步到 <code>/home/xld/xxx</code> 的文件夹下</p><hr><h1 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h1><h2 id="安装-nodejs"><a href="#安装-nodejs" class="headerlink" title="安装 nodejs"></a>安装 nodejs</h2><h3 id="通过-apt-安装"><a href="#通过-apt-安装" class="headerlink" title="通过 apt 安装"></a>通过 apt 安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install nodejs</span><br></pre></td></tr></table></figure><h3 id="通过版本管理工具安装"><a href="#通过版本管理工具安装" class="headerlink" title="通过版本管理工具安装"></a>通过版本管理工具安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装 npm</span></span><br><span class="line">$ sudo apt install npm</span><br><span class="line"></span><br><span class="line"><span class="comment"># 安装版本管理工具 n</span></span><br><span class="line">$ sudo npm install -g n</span><br><span class="line"></span><br><span class="line"><span class="comment"># 利用 n 安装指定版本的 node</span></span><br><span class="line">$ sudo n 16.17.0</span><br></pre></td></tr></table></figure><p><strong>npm相关设置</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">$ npm config <span class="built_in">ls</span> <span class="comment"># 查看npm设置</span></span><br><span class="line">$ npm config get prefix<span class="comment"># 获取npm包安装路径</span></span><br><span class="line">$ npm config <span class="built_in">set</span> prefix<span class="comment"># 设置npm包安装路径</span></span><br><span class="line">$ npm config get cache<span class="comment"># 获取npm缓存</span></span><br><span class="line">$ npm config <span class="built_in">set</span> cache<span class="comment"># 设置npm缓存</span></span><br><span class="line">$ npm root -g    <span class="comment"># 查看npm全局路径的根目录</span></span><br></pre></td></tr></table></figure><h2 id="安装-nodejs-守护进程-forever"><a href="#安装-nodejs-守护进程-forever" class="headerlink" title="安装 nodejs 守护进程 forever"></a>安装 nodejs 守护进程 forever</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install -g forever</span><br></pre></td></tr></table></figure><p><strong>forever相关指令</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># index.js是你要启动的js文件</span></span><br><span class="line">$ forever start index.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 会列出forever正在运行的服务脚本</span></span><br><span class="line">$ forever list</span><br><span class="line"></span><br><span class="line"><span class="comment"># 停止服务运行</span></span><br><span class="line">$ forever stop index.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看帮助信息</span></span><br><span class="line">$ forever --<span class="built_in">help</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 最简单的启动方式</span></span><br><span class="line">$ forever start ./index.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定forever日志输出文件，默认路径~/.forever</span></span><br><span class="line">$ forever start -l forever.log ./index.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 需要注意，如果第一次启动带日志输出文件，以后启动都需要加上 -a 参数，forever默认不覆盖原文件</span></span><br><span class="line">$ forever start -l forever.log -a ../index.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 指定node.js应用的控制台输出文件和错误信息输出文件</span></span><br><span class="line">$ forever start -o out.log -e err.log ./index.js</span><br><span class="line"></span><br><span class="line"><span class="comment"># 监听当前目录下文件改动，如有改动，立刻重启应用，不推荐的做法！如有日志文件，日志文件是频繁更改的</span></span><br><span class="line">$ forever start -w ./index.js</span><br></pre></td></tr></table></figure><hr><h1 id="Python"><a href="#Python" class="headerlink" title="Python"></a>Python</h1><h2 id="安装-python"><a href="#安装-python" class="headerlink" title="安装 python"></a>安装 python</h2><h3 id="apt-安装"><a href="#apt-安装" class="headerlink" title="apt 安装"></a>apt 安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt install python3.x</span><br></pre></td></tr></table></figure><h3 id="源码安装"><a href="#源码安装" class="headerlink" title="源码安装"></a>源码安装</h3><p>在<a href="https://www.python.org/downloads/source/">这里</a>选择版本，建议3.9.x</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装依赖</span></span><br><span class="line">$ sudo apt-get install -y make build-essential libssl-dev zlib1g-dev   </span><br><span class="line">$ sudo apt-get install -y libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm </span><br><span class="line">$ sudo apt-get install -y libncurses5-dev  libncursesw5-dev xz-utils tk-dev</span><br><span class="line"></span><br><span class="line"><span class="comment"># 下载压缩包</span></span><br><span class="line">$ wget https://www.python.org/ftp/python/3.9.16/Python-3.9.16.tgz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">$ tar zxvf Python-3.9.16.tgz</span><br><span class="line">$ <span class="built_in">cd</span> Python-3.9.16 </span><br><span class="line"></span><br><span class="line"><span class="comment"># 编译安装</span></span><br><span class="line">$ sudo ./configure &amp;&amp; sudo make -j4 &amp;&amp; sudo make install</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查</span></span><br><span class="line">$ python3 -V</span><br><span class="line">$ pip3 -V           <span class="comment"># python3.4 及 python2.7 以上版本内置了pip</span></span><br></pre></td></tr></table></figure><hr><h1 id="Java"><a href="#Java" class="headerlink" title="Java"></a>Java</h1><h2 id="安装-JDK（二选一）"><a href="#安装-JDK（二选一）" class="headerlink" title="安装 JDK（二选一）"></a>安装 JDK（二选一）</h2><br><p>安装 openjdk</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 建议安装 jdk17 是LTS长期支持版本</span></span><br><span class="line">$ sudo apt install openjdk-17-jdk-headless</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">$ java -version</span><br></pre></td></tr></table></figure><br><p>安装 OracleJDK</p><p>可以到<a href="https://www.oracle.com/cn/java/technologies/downloads/">这里</a>选择版本安装，建议是jdk17</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 下载压缩包</span></span><br><span class="line">$ wget https://download.oracle.com/java/17/latest/jdk-17_linux-aarch64_bin.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 解压</span></span><br><span class="line">$ tar -zxvf jdk-17_linux-aarch64_bin.tar.gz</span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换并新建jdk目录</span></span><br><span class="line">$ <span class="built_in">cd</span> /usr/lib</span><br><span class="line">$ sudo <span class="built_in">mkdir</span> jdk</span><br><span class="line">$ sudo <span class="built_in">mv</span> ~/download/jdk-17.0.5/ /usr/lib/jdk/</span><br><span class="line"></span><br><span class="line"><span class="comment"># 配置环境</span></span><br><span class="line">$ sudo vim /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># set java env</span></span><br><span class="line"><span class="built_in">export</span> JAVA_HOME=/usr/lib/jdk/jdk-17.0.5</span><br><span class="line"><span class="built_in">export</span> JRE_HOME=<span class="variable">$&#123;JAVA_HOME&#125;</span>/jre</span><br><span class="line"><span class="built_in">export</span> CLASSPATH=.:<span class="variable">$&#123;JAVA_HOME&#125;</span>/lib:<span class="variable">$&#123;JRE_HOME&#125;</span>/lib</span><br><span class="line"><span class="built_in">export</span> PATH=<span class="variable">$&#123;JAVA_HOME&#125;</span>/bin:<span class="variable">$PATH</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使修改生效</span></span><br><span class="line">$ <span class="built_in">source</span> /etc/profile</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">$ java -version</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加软连接，部分软件会从/usr/bin下找java</span></span><br><span class="line"><span class="comment"># $ sudo update-alternatives --install /usr/bin/java  java  /usr/lib/jdk/jdk-17.0.5/bin/java 300   </span></span><br><span class="line"><span class="comment"># $ sudo update-alternatives --install /usr/bin/javac  javac  /usr/lib/jdk/jdk-17.0.5/bin/javac 300</span></span><br></pre></td></tr></table></figure><hr><h1 id="Docker"><a href="#Docker" class="headerlink" title="Docker"></a>Docker</h1><h2 id="安装-docker"><a href="#安装-docker" class="headerlink" title="安装 docker"></a>安装 docker</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装</span></span><br><span class="line">$ sudo apt install docker.io</span><br><span class="line"></span><br><span class="line"><span class="comment"># 测试</span></span><br><span class="line">$ sudo docker run hello-world</span><br></pre></td></tr></table></figure><h2 id="docker-命令免-sudo-执行"><a href="#docker-命令免-sudo-执行" class="headerlink" title="docker 命令免 sudo 执行"></a>docker 命令免 sudo 执行</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建docker组</span></span><br><span class="line">$ sudo groupadd docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 将用户添加到docker组</span></span><br><span class="line">$ sudo gpasswd -a <span class="variable">$&#123;USER&#125;</span> docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启docker服务</span></span><br><span class="line">$ sudo systemctl restart docker</span><br><span class="line"></span><br><span class="line"><span class="comment"># 退出当前会话 重新登录即可</span></span><br><span class="line"><span class="comment"># 或切换当前会话到新 group </span></span><br><span class="line">$ newgrp - docker</span><br></pre></td></tr></table></figure><hr><h1 id="Nginx"><a href="#Nginx" class="headerlink" title="Nginx"></a>Nginx</h1><h2 id="利用apt安装"><a href="#利用apt安装" class="headerlink" title="利用apt安装"></a>利用apt安装</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># apt安装nginx</span></span><br><span class="line">$ sudo apt install nginx</span><br></pre></td></tr></table></figure><h2 id="编译安装"><a href="#编译安装" class="headerlink" title="编译安装"></a>编译安装</h2><ol start="0"><li><p>一些工具安装(也不一定需要,后面缺啥装啥)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt -y install make gcc openssl openssl-devel pcre-devel zlib zlib-devel</span><br></pre></td></tr></table></figure></li><li><p>下载其中一个版本 <a href="https://nginx.org/en/download.html">nginx官网下载</a></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> nginx &amp;&amp; <span class="built_in">cd</span> nginx</span><br><span class="line">$ wget https://nginx.org/download/nginx-1.22.1.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ tar -zxf nginx-1.22.1.tar.gz</span><br><span class="line">$ <span class="built_in">cd</span> nginx-1.22.1</span><br></pre></td></tr></table></figure></li><li><p>编译安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ ./configure</span><br><span class="line">$ sudo make &amp;&amp; sudo make install</span><br></pre></td></tr></table></figure></li><li><p>启动nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /usr/share/nginx/sbin</span><br><span class="line">$ ./nginx</span><br></pre></td></tr></table></figure></li><li><p>添加到全局变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo <span class="built_in">ln</span> -s /usr/share/nginx/sbin/nginx /usr/local/bin/</span><br></pre></td></tr></table></figure></li></ol><h2 id="安装-代理服务器-版本"><a href="#安装-代理服务器-版本" class="headerlink" title="安装 代理服务器 版本"></a>安装 代理服务器 版本</h2><ol start="0"><li><p>一些工具安装(也不一定需要,后面缺啥装啥)</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt -y install make gcc openssl openssl-devel pcre-devel zlib zlib-devel</span><br></pre></td></tr></table></figure></li><li><p>下载其中一个版本 <a href="https://nginx.org/en/download.html">nginx官网下载</a></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">mkdir</span> nginx &amp;&amp; <span class="built_in">cd</span> nginx</span><br><span class="line">$ wget https://nginx.org/download/nginx-1.22.1.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>下载正向代理模块的包 <a href="https://github.com/chobits/ngx_http_proxy_connect_module/releases">ngx_http_proxy_connect_module</a></p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ wget https://github.com/chobits/ngx_http_proxy_connect_module/archive/refs/tags/v0.0.5.tar.gz</span><br></pre></td></tr></table></figure></li><li><p>解压</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ tar -zxf nginx-1.22.1.tar.gz</span><br><span class="line">$ tar -zxf ngx_http_proxy_connect_module-0.0.5</span><br></pre></td></tr></table></figure></li><li><p>查看版本&amp;导入模块</p><p>因为这里 nginx 版本为1.22.1, 因此对应的版本为<code>proxy_connect_rewrite_102101.patch</code> <a href="https://github.com/chobits/ngx_http_proxy_connect_module#select-patch">其他版本查看</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> nginx-1.22.1</span><br><span class="line">$ patch -p1 &lt; ../ngx_http_proxy_connect_module-0.0.5/patch/proxy_connect_rewrite_102101.patch</span><br></pre></td></tr></table></figure></li><li><p>编译</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ./configure  --prefix=/usr/share/nginx --conf-path=/etc/nginx/nginx.conf --http-log-path=/var/log/nginx/access.log --error-log-path=/var/log/nginx/error.log --add-module=/home/ubuntu/dir/nginx/ngx_http_proxy_connect_module-0.0.5</span><br><span class="line"></span><br><span class="line">--prefix: 安装路径</span><br><span class="line">--conf-path: 配置路径</span><br><span class="line">--http-log-path: http的<span class="built_in">log</span>路径</span><br><span class="line">--error-log-path: 错误信息的<span class="built_in">log</span>路径</span><br><span class="line">--add-module:添加模块，这里是正向代理模块</span><br></pre></td></tr></table></figure></li><li><p>安装</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo make &amp;&amp; sudo make install</span><br></pre></td></tr></table></figure></li><li><p>启动nginx</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">cd</span> /usr/share/nginx/sbin</span><br><span class="line">$ ./nginx</span><br></pre></td></tr></table></figure></li><li><p>添加到全局变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo <span class="built_in">ln</span> -s /usr/share/nginx/sbin/nginx /usr/local/bin/</span><br></pre></td></tr></table></figure></li></ol><hr><h1 id="MySQL"><a href="#MySQL" class="headerlink" title="MySQL"></a>MySQL</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装mysql</span></span><br><span class="line">$ apt install mysql-server</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看服务状态</span></span><br><span class="line">$ service mysql status</span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">$ service mysql start</span><br></pre></td></tr></table></figure><hr><h1 id="MongoDB"><a href="#MongoDB" class="headerlink" title="MongoDB"></a>MongoDB</h1><hr><h1 id="Redis"><a href="#Redis" class="headerlink" title="Redis"></a>Redis</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装Redis</span></span><br><span class="line">$ apt install redis</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改配置</span></span><br><span class="line">$ vim /etc/redis/redis.conf</span><br><span class="line"><span class="comment"># 这两个地方开启/改为</span></span><br><span class="line"><span class="built_in">bind</span> 127.0.0.1</span><br><span class="line">daemonize <span class="built_in">yes</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 启动服务</span></span><br><span class="line">$ redis-server /etc/redis/redis.conf</span><br><span class="line"></span><br><span class="line"><span class="comment"># 未启动服务则会提示</span></span><br><span class="line"><span class="comment"># Could not connect to Redis at 127.0.0.1:6379: Connection refused</span></span><br><span class="line"><span class="comment"># not connected&gt;</span></span><br><span class="line"><span class="comment"># exit 退出即可</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进入Redis</span></span><br><span class="line">$ redis-cli</span><br><span class="line"></span><br><span class="line"><span class="comment"># 一些命令</span></span><br><span class="line">$ PING</span><br><span class="line">$ <span class="built_in">set</span> [key] value</span><br><span class="line">$ get [key]</span><br><span class="line">$ del [key]</span><br></pre></td></tr></table></figure><hr><p><br><br><br></p><p>待续未完……</p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> 树莓派 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>能一键备份的快捷方式</title>
      <link href="/%E6%8A%80%E6%9C%AF/%E8%83%BD%E4%B8%80%E9%94%AE%E5%A4%87%E4%BB%BD%E7%9A%84%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/"/>
      <url>/%E6%8A%80%E6%9C%AF/%E8%83%BD%E4%B8%80%E9%94%AE%E5%A4%87%E4%BB%BD%E7%9A%84%E5%BF%AB%E6%8D%B7%E6%96%B9%E5%BC%8F/</url>
      
        <content type="html"><![CDATA[<h1 id="一键保存"><a href="#一键保存" class="headerlink" title="一键保存"></a>一键保存</h1><p>简单描述一下就是，在桌面生成一个bash命令的快捷方式，当拖动文件在这个快捷方式上打开时，就会自动将这个文件保存到你本地的MongoDB中。</p><p>我搞来就是想写东西的时候，保存顺便备份。。。</p><hr><h2 id="首先安装好MongoDB"><a href="#首先安装好MongoDB" class="headerlink" title="首先安装好MongoDB"></a>首先安装好MongoDB</h2><p>不懂直接菜鸟教程：<a href="https://www.runoob.com/mongodb/mongodb-window-install.html">Windows 平台安装 MongoDB</a></p><h2 id="然后装好npm"><a href="#然后装好npm" class="headerlink" title="然后装好npm"></a>然后装好npm</h2><p>这个使用node.js跑的</p><h2 id="接着搞个文件夹"><a href="#接着搞个文件夹" class="headerlink" title="接着搞个文件夹"></a>接着搞个文件夹</h2><p>创建两个文件，分别是： save.js 和 savefile.bat</p><p>然后上代码：</p><p>没有 <code>mongodb</code> 和 <code>node-cmd</code> 这两个库的先npm装一下嘛，不能懒哦~<br><del>（虽然我搞这玩意就是因为懒……）</del></p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// save.js</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> &#123; <span class="title class_">MongoClient</span> &#125; = <span class="built_in">require</span>(<span class="string">&#x27;mongodb&#x27;</span>);</span><br><span class="line"><span class="keyword">const</span> fs = <span class="built_in">require</span>(<span class="string">&quot;fs&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> cmd = <span class="built_in">require</span>(<span class="string">&quot;node-cmd&quot;</span>)</span><br><span class="line"><span class="comment">// or as an es module:</span></span><br><span class="line"><span class="comment">// import &#123; MongoClient &#125; from &#x27;mongodb&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Connection URL</span></span><br><span class="line"><span class="keyword">const</span> url = <span class="string">&#x27;mongodb://localhost:27017&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> client = <span class="keyword">new</span> <span class="title class_">MongoClient</span>(url);</span><br><span class="line"></span><br><span class="line"><span class="comment">// Database Name</span></span><br><span class="line"><span class="keyword">const</span> dbName = <span class="string">&#x27;file&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">main</span>(<span class="params">path</span>) &#123;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// Use connect method to connect to the server</span></span><br><span class="line">    <span class="keyword">await</span> client.<span class="title function_">connect</span>();</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&#x27;Connected successfully to server&#x27;</span>);</span><br><span class="line">    <span class="keyword">const</span> db = client.<span class="title function_">db</span>(dbName);</span><br><span class="line">    <span class="keyword">const</span> collection = db.<span class="title function_">collection</span>(<span class="string">&#x27;file&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    path = path.<span class="title function_">replace</span>(<span class="regexp">/\\/g</span>, <span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(path)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 分割路径 + 文件名</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">getDirName</span>(<span class="params">path</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> arr = path.<span class="title function_">split</span>(<span class="string">&quot;/&quot;</span>)</span><br><span class="line">        <span class="keyword">var</span> filename = arr[arr.<span class="property">length</span> -<span class="number">1</span>]</span><br><span class="line">        <span class="keyword">var</span> fileDir = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">let</span> i = <span class="number">0</span>; i &lt; arr.<span class="property">length</span>-<span class="number">1</span>; i++) &#123;</span><br><span class="line">            fileDir += arr[i] + <span class="string">&quot;/&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> [fileDir,filename]</span><br><span class="line">    &#125;</span><br><span class="line">    [fileDir,filename] = <span class="title function_">getDirName</span>(path);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 获取文件大小</span></span><br><span class="line">    <span class="keyword">function</span> <span class="title function_">getSize</span>(<span class="params">path</span>) &#123;</span><br><span class="line">        <span class="keyword">var</span> size;</span><br><span class="line">        <span class="keyword">var</span> fileMsg = fs.<span class="title function_">statSync</span>(path);</span><br><span class="line">        <span class="keyword">if</span>(fileMsg.<span class="property">size</span> &lt; <span class="number">1024</span>)                     size = fileMsg.<span class="property">size</span> + <span class="string">&#x27;b&#x27;</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(fileMsg.<span class="property">size</span> &lt; <span class="number">1024</span> * <span class="number">1024</span>)         size = (fileMsg.<span class="property">size</span>/<span class="number">1024</span>).<span class="title function_">toFixed</span>(<span class="number">2</span>) + <span class="string">&#x27;kb&#x27;</span></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span>(fileMsg.<span class="property">size</span> &lt; <span class="number">1024</span> * <span class="number">1024</span> * <span class="number">1024</span>)  size = (fileMsg.<span class="property">size</span>/<span class="number">1024</span>/<span class="number">1024</span>).<span class="title function_">toFixed</span>(<span class="number">2</span>) + <span class="string">&#x27;MB&#x27;</span></span><br><span class="line">        <span class="keyword">return</span> size;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> size = <span class="title function_">getSize</span>(path)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取文件数据</span></span><br><span class="line">    <span class="keyword">var</span> data = fs.<span class="title function_">readFileSync</span>(path)</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 获取当前时间</span></span><br><span class="line">    <span class="keyword">var</span> time = <span class="keyword">new</span> <span class="title class_">Date</span>().<span class="title function_">toLocaleString</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 插入数据</span></span><br><span class="line">    <span class="keyword">var</span> insertResult = <span class="keyword">await</span> collection.<span class="title function_">insert</span>(</span><br><span class="line">        &#123; </span><br><span class="line">            path,</span><br><span class="line">            fileDir,</span><br><span class="line">            filename,  </span><br><span class="line">            data,</span><br><span class="line">            size,</span><br><span class="line">            time</span><br><span class="line">        &#125;</span><br><span class="line">    )</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(insertResult)</span><br><span class="line">    fs.<span class="title function_">appendFileSync</span>(<span class="string">&quot;log&quot;</span>, time + <span class="string">&quot;\t:\t&quot;</span> + path + <span class="string">&quot;\t&quot;</span> + <span class="string">&quot;insertedCount:&quot;</span> + insertResult.<span class="property">insertedCount</span> + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;done.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sleep</span>(<span class="params">ms</span>)&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span>=&gt;</span><span class="built_in">setTimeout</span>(resolve, ms))</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">pause</span>(<span class="params">ms</span>) &#123;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">sleep</span>(ms)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> args = process.<span class="property">argv</span>.<span class="title function_">splice</span>(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">var</span> path = args[<span class="number">0</span>]</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(path)</span><br><span class="line"></span><br><span class="line"><span class="title function_">main</span>(path)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="variable language_">console</span>.<span class="property">log</span>)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="variable language_">console</span>.<span class="property">error</span>)</span><br><span class="line">    .<span class="title function_">finally</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">        client.<span class="title function_">close</span>()</span><br><span class="line"></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MongoDB Server (MongoDB) 服务正在停止 .&quot;</span>)</span><br><span class="line">        cmd.<span class="title function_">run</span>(<span class="string">&quot;net stop mongodb&quot;</span>)</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;MongoDB Server (MongoDB) 服务已成功停止。&quot;</span>)</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;\nfinish\n&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="title function_">pause</span>(<span class="number">2000</span>)</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># savefile.bat</span></span><br><span class="line"></span><br><span class="line">@<span class="built_in">echo</span> off</span><br><span class="line"></span><br><span class="line"><span class="built_in">echo</span> %1<span class="comment"># 打印这个文件的路径</span></span><br><span class="line">net start mongodb<span class="comment"># 启动MongoDB服务</span></span><br><span class="line">npm start %1<span class="comment"># 启动上面的save.js</span></span><br><span class="line"></span><br><span class="line">pause</span><br></pre></td></tr></table></figure><p>然后改一下这个<code>package.json</code> ，加个 <code>scripts</code> 上去，和bat中的start一起就能跑起来了。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"># package.json</span><br><span class="line"></span><br><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;dependencies&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;mongodb&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^4.3.0&quot;</span><span class="punctuation">,</span></span><br><span class="line">    <span class="attr">&quot;node-cmd&quot;</span><span class="punctuation">:</span> <span class="string">&quot;^5.0.0&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;main&quot;</span><span class="punctuation">:</span> <span class="string">&quot;save.js&quot;</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;scripts&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">    <span class="attr">&quot;start&quot;</span><span class="punctuation">:</span> <span class="string">&quot;node save.js&quot;</span></span><br><span class="line">  <span class="punctuation">&#125;</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><hr><h2 id="然后，然后就没有然后了…"><a href="#然后，然后就没有然后了…" class="headerlink" title="然后，然后就没有然后了…"></a>然后，然后就没有然后了…</h2><p>那倒也不是，然后就是把 <code>savefile.bat</code> 创建桌面快捷方式，然后就可以把你的word文档呀，markdown呀，乱七八糟的东西，拖到桌面的快捷方式上去 松手，备份完毕，</p><p>至于怎么看嘛。。。</p><p>搞个cmd</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ mongo</span><br><span class="line">$ use file</span><br><span class="line">$ db.file.find(&#123;&#125;,&#123;data:0&#125;)<span class="comment"># 不看data，因为都是二进制数据</span></span><br><span class="line">$ db.file.find(&#123;&#125;,&#123;data:0&#125;).pretty()<span class="comment"># 格式化输出</span></span><br></pre></td></tr></table></figure><p>记录了文件名，大小，保存时间，还有保存时文件所在的路径。</p><p>而且还可以重复保存，也不会覆盖掉，时间不同嘛 就可以区分版本，所以我就搞来当备份用了</p><hr><h2 id="最后"><a href="#最后" class="headerlink" title="最后"></a>最后</h2><p>还是再唠嗑一下吧，</p><p>用这个保存过之后，会在这个文件夹下生成一个log，你就能看到自己曾今保存了什么了。</p><p>还有就是，现在这玩意是二进制存储的，还可以搞一下压缩，读完文件之后 压缩完再丢进去，虽然说是MongoDB 存个几G几T都还行，但毕竟存在本地嘛…</p><p><del>但别人删你文件的时候，清空回收站，但其实还可以恢复，就很nice!</del></p><p><del>写论文，写文档的时候就很棒，还可以存点***那些东西咳咳… 隐藏文件夹什么的有什么用嘛，光明正大的白给</del></p><p>有时间再弄个恢复文档的客户端 <del>（什么叫在线点播呀，后仰.jpg）</del></p><hr><h2 id="再说个坑吧"><a href="#再说个坑吧" class="headerlink" title="再说个坑吧"></a>再说个坑吧</h2><p>就是，.bat 中 <code>%1</code> 代表传进去的第一个参数嘛，这个挺好理解的</p><p>然后就是跑了 <code> npm start %1</code>这个时候，后面的都不生效了，跑完就直接闪退了…就很懵</p><p>本来我是想这样的：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">net start mongodb<span class="comment"># 启动服务</span></span><br><span class="line">npm start %1<span class="comment"># 跑、存文件</span></span><br><span class="line">net stop mongodb<span class="comment"># 停止服务</span></span><br><span class="line">pause<span class="comment"># 任意键退出</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>但结果就是后面两步不执行，直接闪退…</p><p>如果是用start 启动node的话，他就相当于再新建了一个cmd来跑，跑完了就不能退了，就会留了个黑框得自己关，而且这可以算是一个异步过程，要是没存完就把服务关了，就很。。。</p><p>总之就不是我所想的那样。。。</p><p>所以我就把后面两步写在node里面了，用里面的 <code>node-cmd</code> 来跑算了 </p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
          <category> 小玩意 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Mongodb </tag>
            
            <tag> bash </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu20.04下，搭建hexo个人博客</title>
      <link href="/%E6%8A%80%E6%9C%AF/Ubuntu20-04%E4%B8%8B%EF%BC%8C%E6%90%AD%E5%BB%BAhexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
      <url>/%E6%8A%80%E6%9C%AF/Ubuntu20-04%E4%B8%8B%EF%BC%8C%E6%90%AD%E5%BB%BAhexo%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
      
        <content type="html"><![CDATA[<h1 id="一些说明和资源"><a href="#一些说明和资源" class="headerlink" title="一些说明和资源"></a>一些说明和资源</h1><p>所使用到的软件版本：</p><table><thead><tr><th align="center">Ubuntu</th><th align="center">Nginx</th><th align="center">Git</th><th align="center">hexo</th></tr></thead><tbody><tr><td align="center">20.04 LTS</td><td align="center">1.18.0</td><td align="center">2.25.1</td><td align="center">5.4.0.</td></tr></tbody></table><p>其他说明：这里所演示的是在 VirtualBox 中进行的，实际工作场景可以是云服务器上<br>（因为我通常在虚拟机折腾完之后再同步到服务器hhh）</p><hr><h1 id="大致的布局和思路"><a href="#大致的布局和思路" class="headerlink" title="大致的布局和思路"></a>大致的布局和思路</h1><p><img src="https://img-blog.csdnimg.cn/4b4a0a93d9cc4cf5b5c601a8e64e2878.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16" alt="大致的布局和思路"></p><hr><h1 id="安装Ubuntu-20-04-LTS"><a href="#安装Ubuntu-20-04-LTS" class="headerlink" title="安装Ubuntu 20.04 LTS"></a>安装Ubuntu 20.04 LTS</h1><p>这里先挖个坑，后续再补充文章…</p><p>这里可以参考这位老哥的：<a href="https://blog.csdn.net/weixin_45763600/article/details/114833521">安装Ubuntu 20.04 LTS服务器的图文教程</a><br><br></p><hr><h1 id="服务端"><a href="#服务端" class="headerlink" title="服务端"></a>服务端</h1><h2 id="安装并配置Nginx"><a href="#安装并配置Nginx" class="headerlink" title="安装并配置Nginx"></a><strong>安装并配置<code>Nginx</code></strong></h2><h3 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h3><p><strong>先更新源：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">获得源上的软件包列表信息</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-get update</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">更新本地软件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-get upgrade</span></span><br></pre></td></tr></table></figure><p><strong>然后安装：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_"># </span><span class="language-bash">-y 表示<span class="built_in">yes</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-get install -y nginx</span></span><br></pre></td></tr></table></figure><p><strong>启动服务器：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl start nginx</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">systemctl <span class="built_in">enable</span> nginx</span></span><br></pre></td></tr></table></figure><p>nginx默认的配置文件的路径是：<code>/etc/nginx/ </code><br><br></p><h3 id="修改配置文件"><a href="#修改配置文件" class="headerlink" title="修改配置文件"></a>修改配置文件</h3><p>我们可以看到<code>/etc/nginx/ </code>目录下的文件<br><img src="https://img-blog.csdnimg.cn/e7965bea41a34ccc982d7a4450f7fd76.png" alt="/etc/nginx"><br>正常来说应该是 nginx.conf 这个文件，我们编辑它：<br> <figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo vim nginx.conf</span></span><br></pre></td></tr></table></figure></p><p> 打开后并没有在http下看到我们熟悉的server、listen这些熟悉的东西，但是会看到有这么两行： <img src="https://img-blog.csdnimg.cn/fa5c9882c0024755b25d80eb88faa797.png?x-oss-process=image/watermark,type_d3F5LXplbmhlaQ,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16" alt="nginx.conf"><br>所以我们可以在 <code>/etc/nginx/conf.d/*.conf</code>下进行配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">cp</span> sites-available/default conf.d/default.conf</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo vim default.conf</span></span><br></pre></td></tr></table></figure><p><strong>IP改为自己的IP<br> root改为自己的资源路径，这里要与后面Git的勾子对应</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">server &#123;</span><br><span class="line">listen 80 default_server;</span><br><span class="line">listen [::]:80 default_server;</span><br><span class="line">server_name 192.168.37.131;// 这里写自己的服务器IP</span><br><span class="line"></span><br><span class="line"># root /home/xld/hexo;</span><br><span class="line"># index index.html;</span><br><span class="line"></span><br><span class="line">location / &#123;</span><br><span class="line">root /home/xld/hexo;</span><br><span class="line">                index index.html;</span><br><span class="line">                autoindex on;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// 还可以简单的配置监听多个端口（具体的可以看其他 nginx 的配置）</span><br><span class="line">// server &#123;</span><br><span class="line">//        listen 81;</span><br><span class="line">//        listen [::]:81;</span><br><span class="line">//        server_name 192.168.37.131;</span><br><span class="line">// </span><br><span class="line">//        root /home/xld/api;</span><br><span class="line">//        #index index.html;</span><br><span class="line">// </span><br><span class="line">//        location / &#123;</span><br><span class="line">//                 root /home/xld/api;</span><br><span class="line">//                 autoindex on;</span><br><span class="line">//        &#125;</span><br><span class="line">// &#125;</span><br></pre></td></tr></table></figure><p>配置完记得保存然后重新加载一下，这里列出几个常用的nginx命令：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nginx -t// 查看nginx状态（用来测试配置是否正确）</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nginx -s reload// 重新载入配置文件</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nginx -s reopen// 重启 Nginx</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">nginx -s stop// 停止 Nginx</span></span><br></pre></td></tr></table></figure><p>*<strong>创建hexo文件夹</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> hexo</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo <span class="built_in">chmod</span> 775 hexo// 这里应该是权限问题我没搞懂，不改的话后面git钩子钩过来但权限不足，导致同步不了。</span></span><br></pre></td></tr></table></figure><br><h2 id="Git仓库"><a href="#Git仓库" class="headerlink" title="Git仓库"></a>Git仓库</h2><h3 id="Git安装和用户创建"><a href="#Git安装和用户创建" class="headerlink" title="Git安装和用户创建"></a>Git安装和用户创建</h3><p><strong>安装git：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo apt-get install git</span></span><br></pre></td></tr></table></figure><p>注：这里往后基本上都是root在进行的，注意切换！</p><p><strong>配置git用户：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">adduser git</span></span><br></pre></td></tr></table></figure><p><strong>修改权限：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span> 740 /etc/sudoers</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim /etc/sudoers</span></span><br></pre></td></tr></table></figure><p>定位到这里，加上 <code>git</code>用户这一行<br><img src="https://img-blog.csdnimg.cn/72e8a3081ab3405088041c29d27923b2.png" alt="/etc/sudoers"><br><strong>然后保存并退出，将sudoers文件权限改回原样：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span> 400 /etc/sudoers</span></span><br></pre></td></tr></table></figure><p><strong>设置git用户的密码：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo passwd git</span></span><br></pre></td></tr></table></figure><p><strong>切换到git用户，然后在<code>~</code>目录下创建 <code>.ssh </code>文件夹：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">su git</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> .ssh</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> .ssh</span></span><br></pre></td></tr></table></figure><p><strong>生成公钥密钥文件：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">ssh-keygen</span></span><br></pre></td></tr></table></figure><p><strong>将公钥文件复制一份：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> id_rsa.pub authorized_keys</span></span><br></pre></td></tr></table></figure><p><strong>修改<code>authorized_keys</code>的权限：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span> 755 ~</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span> 700 ~/.ssh</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span> 600 ~/.ssh/authorized_keys</span></span><br></pre></td></tr></table></figure><p>然后保存并退出后，我们就可以利用ssh连接和登陆<code>git</code>用户啦~<br><br></p><h3 id="Git的勾子hooks"><a href="#Git的勾子hooks" class="headerlink" title="Git的勾子hooks"></a>Git的勾子hooks</h3><p><strong>创建仓库</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">su root</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /home/git</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">git init --bare blog.git// 在/home/git下创建新仓库blog.git</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chown</span> git:git -R blog.git// 给予git用户权限</span></span><br></pre></td></tr></table></figure><p>在<code> /home/git/blog.git/hooks</code> 下创建一个 <code>post-receive</code> 文件<br>把提交到 <code>/home/git/blog.git</code> 仓库里的文件同步到 <code> /home/xld/hexo</code>（上文nginx的root资源目录） 中。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> blog.git/hooks/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">vim post-receive</span></span><br></pre></td></tr></table></figure><p>在 post-receive 中添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line">git --work-tree=/home/xld/hexo --git-dir=/home/git/blog.git checkout -f</span><br></pre></td></tr></table></figure><p>保存退出，添加可执行权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chmod +x /home/git/blog.git/hooks/post-receive</span><br></pre></td></tr></table></figure><p>给 <code>/home/xld/hexo/</code> 添加写权限：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> /home/xld/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">chmod</span> 777 hexo</span></span><br></pre></td></tr></table></figure><br><hr><h1 id="本地端"><a href="#本地端" class="headerlink" title="本地端"></a>本地端</h1><h2 id="安装node-js"><a href="#安装node-js" class="headerlink" title="安装node.js"></a>安装<code>node.js</code></h2><p>菜鸟教程，你值得拥有：<a href="https://www.runoob.com/nodejs/nodejs-install-setup.html">Node.js 安装配置</a><br><br></p><h2 id="hexo"><a href="#hexo" class="headerlink" title="hexo"></a>hexo</h2><p>进入到你的<code>blog</code>文件夹下（比如我是windows，就<code>cmd</code>进入到 <code>E:\blog</code> 目录下）</p><h3 id="安装-amp-初始化"><a href="#安装-amp-初始化" class="headerlink" title="安装&amp;初始化"></a>安装&amp;初始化</h3><p><strong>安装</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">npm install -g hexo-cli</span></span><br><span class="line"></span><br><span class="line">// 安装成功后可以查看相关信息</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo -v</span></span><br></pre></td></tr></table></figure><p><strong>初始化一个博客</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo init</span></span><br></pre></td></tr></table></figure><p><strong>启动博客</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo s</span></span><br></pre></td></tr></table></figure><p>启动之后我们就可以在浏览器输入<code>localhost:4000</code>进行访问了<br>然后你就可以看到 Hello World 文章和它的四个常用命令<br><br></p><h3 id="部署到服务端"><a href="#部署到服务端" class="headerlink" title="部署到服务端"></a>部署到服务端</h3><p><strong>打开文件夹下的 <code>_config.yml</code> 文件</strong>：</p><p>找到 <code>deploy</code> 这一项，然后按格式添加自己的仓库地址<br>（如果你有多个仓库的话，按格式接着写就能一次性git上去）<br><img src="https://img-blog.csdnimg.cn/7a4880c157cf4007891b18b1f5baa998.png" alt="deploy"><br>保存退出，然后顺便把服务端也停掉（上面的 <code>hexo s</code>）</p><p><strong>清除旧文件&amp;重新生成&amp;发布：</strong></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hexo clean &amp; hexo g &amp; hexo d</span></span><br></pre></td></tr></table></figure><p>直接 <code>$ hexo d</code> 也行，只不过说一下可以这么用而已……</p><p>之后等他自动执行发布就好了，如果有提示你输入git用户&#x2F;密码，照着输入就行<br>之后有ssh就会方便一点<br><br></p><h2 id="访问服务端进行浏览"><a href="#访问服务端进行浏览" class="headerlink" title="访问服务端进行浏览"></a>访问服务端进行浏览</h2><p>返回 <strong>Ubuntu LTS</strong> 上，在 <code>/home/xld/hexo</code> 应该能看到 <code>hexo</code> 自动发布的东西<br>如果你 <code>nginx</code> 没啥问题的话，这时在其他电脑的浏览器上，输入IP地址，就能访问到刚刚那篇 <strong>Hello World</strong> 文章啦~</p><p>再回过头来看开局的那张图。。。</p><p>这简陋的界面多少都有点接受不了吧…这时就可以去到hexo官网 找到一个自己喜欢的主题进行魔改吧~<br><br></p><hr><h1 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h1><ul><li><a href="https://blog.csdn.net/weixin_45763600/article/details/114833521">安装Ubuntu 20.04 LTS服务器的图文教程</a></li><li><a href="https://blog.csdn.net/weixin_52154011/article/details/111402551">从零搭建Hexo博客并部署腾讯云服务器（宝宝级教学）</a></li><li><a href="https://hexo.io/">hexo官网</a></li><li><a href="https://www.php.cn/nginx/434058.html">nginx怎么配置</a></li><li><a href="https://www.git-scm.com/book/zh/v2/%E8%87%AA%E5%AE%9A%E4%B9%89-Git-Git-%E9%92%A9%E5%AD%90">Git 钩子</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> 博客 </tag>
            
            <tag> hexo </tag>
            
            <tag> nginx </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型数据库（8）--- Kafka安装与配置</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Kafka%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Kafka%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>虚拟机：VirtualBox-6.1.18<br>操作系统：Ubuntu16.04LTS<br>集群情况：</p><table><thead><tr><th align="center">主机名称</th><th align="center">hadoop版本</th><th align="center">ZooKeeper版本</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">hadoop-master</td><td align="center">2.7.3</td><td align="center">3.6.3</td><td align="center">192.168.56.1</td></tr><tr><td align="center">hadoop-slave1</td><td align="center">2.7.3</td><td align="center">3.6.3</td><td align="center">192.168.56.2</td></tr><tr><td align="center">hadoop-slave2</td><td align="center">2.7.3</td><td align="center">3.6.3</td><td align="center">192.168.56.3</td></tr></tbody></table><h2 id="本次安装的Kafka"><a href="#本次安装的Kafka" class="headerlink" title="本次安装的Kafka"></a>本次安装的Kafka</h2><p>Kafka版本：2.13-2.8.0<br>下载地址：<a href="https://www.apache.org/dyn/closer.cgi?path=/kafka/2.8.1/kafka_2.13-2.8.1.tgz">kafka_2.13-2.8.1.tgz</a><br>其他：<a href="https://kafka.apache.org/">Kafka官网</a>  、<a href="https://kafka.apache.org/downloads">查看不同版本</a>、<a href="https://kafka.apache.org/documentation/#configuration">官方文档</a></p><p>都准备就绪后，我们就接着往下开始安装吧！<br>不知道怎么准备的，我之前的文章 也许可以给你带来一些参考哦 - - - ☞ <a href="https://blog.csdn.net/li1055107552/article/details/114767752">搭建hadoop集群</a><br> <a href="https://blog.csdn.net/li1055107552/article/details/120386759">大型数据库（6）— ZooKeeper安装与配置</a>.</p><hr><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><ol><li>我的两个基础软件Hadoop、Java 分别是在 &#x2F;usr&#x2F;hadoop 和 &#x2F;usr&#x2F;java下</li><li>其他的都安装在 ~&#x2F;Hadoop 的文件夹下</li><li>Kafka 不仅需安装在<strong>hadoop-master</strong>下，还需部署在<strong>slave</strong>机上</li></ol><br><h2 id="安装并配置Kafka"><a href="#安装并配置Kafka" class="headerlink" title="安装并配置Kafka"></a>安装并配置Kafka</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/下载</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> kafka_2.13-2.8.0.tgz ~/Hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar -zxvf kafka_2.13-2.8.0.tgz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> kafka_2.13-2.8.0/conf</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="server-properties"><a href="#server-properties" class="headerlink" title="server.properties"></a>server.properties</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">将此处的注释去掉</span></span><br><span class="line"><span class="string">listeners=PLAINTEXT://hadoop-master:9092</span></span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">Zookeeper中的设置改为：</span></span><br><span class="line"><span class="string">zookeeper.connect=hadoop-master:2181,hadoop-slave1:2181,hadoop-slave2:2181</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="本机测试"><a href="#本机测试" class="headerlink" title="本机测试"></a>本机测试</h4><p>&#x2F;&#x2F; 建议将master和slave都先开启zookeeper<br>此时，您可以在master主机上，稍微试试水…</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">~/Hadoop/kafka_2.13-2.8.0/bin</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./kafka-server-start.sh ../config/server.properties &amp;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>打印完一堆东西后，回车输入 <code>$ jps</code> 将会看到<br><img src="https://img-blog.csdnimg.cn/f9e02a727ef245cdad92c246ea01899e.png" alt="![成功启动](https://img-blog.csdnimg.cn/6b69477247b54134b6a553b586a86572.png"></p></blockquote><p>这样，你的master机基本上就配置好了！<br>我们先将其停掉 <code>$ ./kafka-server-stop.sh </code>，继续往后配置！</p><br><h3 id="将Kafka安装文件复制到Slave节点"><a href="#将Kafka安装文件复制到Slave节点" class="headerlink" title="将Kafka安装文件复制到Slave节点"></a>将Kafka安装文件复制到Slave节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">scp -r kafka_2.13-2.8.0/ hadoop-slave1:~/Hadoop/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">scp -r kafka_2.13-2.8.0/ hadoop-slave2:~/Hadoop/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="更改-slave-机上的-broker-id-值"><a href="#更改-slave-机上的-broker-id-值" class="headerlink" title="更改 slave 机上的 broker.id 值"></a>更改 slave 机上的 broker.id 值</h4><p>注：<strong>hadoop-master</strong> 中的 <strong>broker.id</strong> 默认应该为 0</p><p>进入到 <code>hadoop-slave1: ~/Hadoop/kafka_2.13-2.8.0/config</code> 将 <strong>server.properties</strong> 更改以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">broker.id=1 </span><br></pre></td></tr></table></figure><p>进入到 <code>hadoop-slave2: ~/Hadoop/kafka_2.13-2.8.0/config</code> 将 <strong>server.properties</strong> 更改以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">broker.id=2 </span><br></pre></td></tr></table></figure><br><h2 id="启动Kafka"><a href="#启动Kafka" class="headerlink" title="启动Kafka"></a>启动Kafka</h2><p>在各个机器上执行该命令，都应该能执行成功哦~ （不行的往下看 <strong>其他</strong> 部分）</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">~/Hadoop/kafka_2.13-2.8.0/bin</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./kafka-server-start.sh ../config/server.properties &amp;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p> 成功启动后，都应该能看到 <strong>Kafka</strong><br><img src="https://img-blog.csdnimg.cn/0bbfb8779427411585d88dc2913adb94.png" alt="在这里插入图片描述"></p></blockquote><br><h3 id="在-Master-上"><a href="#在-Master-上" class="headerlink" title="在 Master 上"></a>在 Master 上</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 创建一个topic</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./kafka-topics.sh --create -zookeeper hadoop-master:2181 -replication-factor 1 -partitions 1 -topic <span class="built_in">test</span></span></span><br><span class="line"></span><br><span class="line">// 查看刚刚创建的topic</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./kafka-topics.sh --list --zookeeper hadoop-master:2181</span></span><br><span class="line"></span><br><span class="line">// 开启生产者，发送消息</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./kafka-console-producer.sh --broker-list hadoop-master:9092 --topic <span class="built_in">test</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="在-Slave-上"><a href="#在-Slave-上" class="headerlink" title="在 Slave 上"></a>在 Slave 上</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 开启消费者，接收消息</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./kafka-console-producer.sh --broker-list hadoop-master:9092 --topic <span class="built_in">test</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>回到 <strong>Master</strong> 上，输入 ‘Hello World’ 见证历史吧！<br><img src="https://img-blog.csdnimg.cn/9da41fae01cf475f89027e7564a18463.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p><br><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="启动时-zookeeper-报错"><a href="#启动时-zookeeper-报错" class="headerlink" title="启动时 zookeeper 报错"></a>启动时 zookeeper 报错</h2><p>出现了这一堆的报错时…(我是在slave上发现这个问题)<br><img src="https://img-blog.csdnimg.cn/511aaa9c898840a0a6a46e4a05a862db.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>是你Kafka运行的 zookeeper 版本不一样所导致的<br>首先看看最上面的打印的版本是什么<br><img src="https://img-blog.csdnimg.cn/0b90a5291f19484cb4d7c9fccf50ee97.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>再看看master上正常启动时的版本<br><img src="https://img-blog.csdnimg.cn/753d6d3829ae494f82a418c2806e46f6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="master正常启动"><br>再对比 <code>~/Hadoop/kafka_2.13-2.8.0/libs</code> 下 zookeeper 的 jar 包的版本<br>然后根据下面 <strong>path</strong> 把不能启动的机器下的 不同版本的 zookeeper的jar包 删掉即可<br>嗯…没错…就是这样…(我就是把它复制出来，匹配zookeeper一个个看…)<br><img src="https://img-blog.csdnimg.cn/b53ad982309a4235a00c9963b3915138.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="path"><br>我的话…在 <code>$HADOOP_HOME/share/hadoop/common/lib</code>下有一个<br>在 <code>$HADOOP_HOME/share/hadoop/yarn/lib</code>下也有一个<br>我的 <strong>slave</strong> 是把这两个删掉就可以正常启动了</p><br><h2 id="启动时-Cluster-ID-报错"><a href="#启动时-Cluster-ID-报错" class="headerlink" title="启动时 Cluster ID 报错"></a>启动时 Cluster ID 报错</h2><p><img src="https://img-blog.csdnimg.cn/a4c8ce4d86bb4227a905944549ab1a70.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="Cluster ID"><br>这个只需要打开 <code>$ /home/xld/test/kafka_2.13-2.8.0/config/server.properties</code> 查看 <strong>log.dirs</strong><br>将该路径下的文件夹删除，然后重启即可…<br>如：log.dirs&#x3D;&#x2F;tmp&#x2F;kafka-logs 直接将 &#x2F;tmp 目录下的 kafka-logs 这个文件夹整个直接删掉即可</p><br><h2 id="创建topic时失败"><a href="#创建topic时失败" class="headerlink" title="创建topic时失败"></a>创建topic时失败</h2><p>显示超时<br><img src="https://img-blog.csdnimg.cn/26a24b9a68d045eca59960105b00dfc5.png#pic_center" alt="显示超时"><br>很有可能是你 master 机的 zookeeper 还没启动哦~<br>把 zookeeper 启动后再试试就好了。</p><br><h2 id="其他骚话…"><a href="#其他骚话…" class="headerlink" title="其他骚话…"></a>其他骚话…</h2><p>他说的是2.8之后的版本去掉自带的zookeeper，但我这发现他还是依赖运行 kafka 下的 libs 下的 jar 包，就很迷…大概是我不会弄吧…</p><p>还有就是，我发现 slave 接收信息，不开启 kafka.server 也可以…只是会多出一个 ConsoleConsumer 的玩意…<br><img src="https://img-blog.csdnimg.cn/6fb1926d31fc42469c4e23973e9bb9ee.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"><br>没搞明白…糊里糊涂，半桶水…</p><br><p><strong>参考文章：</strong><br><a href="https://www.cnblogs.com/silent2012/p/10045557.html">Kafka安装配置</a><br><a href="https://blog.csdn.net/u014039577/article/details/47731143">kafka的安装和配置</a></p><br><hr>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大型数据库 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Kafka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型数据库（7）--- Storm安装与配置</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Storm%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Storm%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>虚拟机：VirtualBox-6.1.18<br>操作系统：Ubuntu16.04LTS<br>集群情况：</p><table><thead><tr><th align="center">主机名称</th><th align="center">hadoop版本</th><th align="center">ZooKeeper版本</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">hadoop-master</td><td align="center">2.7.3</td><td align="center">3.6.3</td><td align="center">192.168.56.1</td></tr><tr><td align="center">hadoop-slave1</td><td align="center">2.7.3</td><td align="center">3.6.3</td><td align="center">192.168.56.2</td></tr><tr><td align="center">hadoop-slave2</td><td align="center">2.7.3</td><td align="center">3.6.3</td><td align="center">192.168.56.3</td></tr></tbody></table><h2 id="本次安装的Storm"><a href="#本次安装的Storm" class="headerlink" title="本次安装的Storm"></a>本次安装的Storm</h2><p>Storm版本：2.3.6<br>下载地址：<a href="https://www.apache.org/dyn/closer.lua/storm/apache-storm-2.2.0/apache-storm-2.2.0.tar.gz">apache-storm-2.2.0.tar.gz</a><br>其他：<a href="https://storm.apache.org/">Storm官网</a>  、<a href="https://storm.apache.org/downloads.html">查看不同版本</a>、<a href="http://storm.apache.org/releases/2.2.0/Setting-up-a-Storm-cluster.html">官方文档</a></p><p>都准备就绪后，我们就接着往下开始安装吧！<br>不知道怎么准备的，我之前的文章 也许可以给你带来一些参考哦 - - - ☞ <a href="https://blog.csdn.net/li1055107552/article/details/114767752">搭建hadoop集群</a><br> <a href="https://blog.csdn.net/li1055107552/article/details/120386759">大型数据库（6）— ZooKeeper安装与配置</a>.</p><hr><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><ol><li>我的两个基础软件Hadoop、Java 分别是在&#x2F;usr&#x2F;hadoop 和 &#x2F;usr&#x2F;java下</li><li>其他的都安装在 ~&#x2F;Hadoop 的文件夹下</li><li>Storm不仅需安装在<strong>hadoop-master</strong>下，还需部署在<strong>slave</strong>机上</li></ol><br><h2 id="安装并配置Storm"><a href="#安装并配置Storm" class="headerlink" title="安装并配置Storm"></a>安装并配置Storm</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/下载</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> apache-storm-2.2.0.tar.gz ~/Hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar -zxvf apache-storm-2.2.0.tar.gz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mv</span> apache-storm-2.2.0 storm-2.2.0</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> storm-2.2.0/conf</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="storm-yaml"><a href="#storm-yaml" class="headerlink" title="storm.yaml"></a>storm.yaml</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">//</span> <span class="string">将此处的部分改为：</span></span><br><span class="line"><span class="attr">storm.zookeeper.servers:</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&quot;hadoop-master&quot;</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&quot;hadoop-slave1&quot;</span></span><br><span class="line">     <span class="bullet">-</span> <span class="string">&quot;hadoop-slave2&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="attr">storm.local.dir:</span> <span class="string">&quot;/tmp/storm&quot;</span></span><br><span class="line"><span class="attr">nimbus.host:</span> <span class="string">&quot;hadoop-master&quot;</span></span><br><span class="line"><span class="attr">nimbus.seeds:</span> [<span class="string">&quot;hadoop-master&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="attr">supervisor.slots.ports:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">6700</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">6701</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">6702</span></span><br><span class="line">    <span class="bullet">-</span> <span class="number">6703</span></span><br><span class="line"></span><br><span class="line"><span class="attr">ui.port:</span> <span class="number">8888</span></span><br><span class="line"></span><br><span class="line"><span class="string">//</span> <span class="string">注意这里改为自己的master机名称，和slave机名称</span></span><br></pre></td></tr></table></figure><h4 id="本机测试"><a href="#本机测试" class="headerlink" title="本机测试"></a>本机测试</h4><p>此时，您可以在master主机上，稍微试试水…</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop/storm-2.2.0/bin</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./storm nimbus<span class="comment"># 后台托管 ./storm nimbus &gt;/dev/null 2&gt;&amp;1 &amp;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./storm ui<span class="comment"># 后台托管 ./storm ui &gt;/dev/null 2&gt;&amp;1 &amp;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>输入 <code>$ jps</code> 将会看到<br><img src="https://img-blog.csdnimg.cn/6b69477247b54134b6a553b586a86572.png" alt="成功启动"><br>打开网页  <code>http://192.168.56.1:8888/</code> 可以看到<br><img src="https://img-blog.csdnimg.cn/9ccafd67df2e4e749b65a8619547a99c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="成功启动"></p></blockquote><p>这样，你的master机基本上就配置好了！<br>我们先将其停掉，继续往后配置！</p><br><h3 id="将Storm安装文件复制到Slave节点"><a href="#将Storm安装文件复制到Slave节点" class="headerlink" title="将Storm安装文件复制到Slave节点"></a>将Storm安装文件复制到Slave节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">scp -r storm-2.2.0/ hadoop-slave1:~/Hadoop/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">scp -r storm-2.2.0/ hadoop-slave2:~/Hadoop/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="启动Storm"><a href="#启动Storm" class="headerlink" title="启动Storm"></a>启动Storm</h3><p>&#x2F;&#x2F; <strong>slave</strong> 单纯启动 <strong>supervisor</strong> 即可，UI 在 <strong>hadoop-master</strong> 查看</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">// 首先是保证 各个机器 都开启了 zookeeper</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop/zookeeper-3.6.3/bin</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./zkServer.sh start</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// hadoop-master</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop/storm-2.2.0/bin</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./storm nimbus<span class="comment"># storm nimbus &gt;/dev/null 2&gt;&amp;1 &amp;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./storm ui<span class="comment"># storm ui &gt;/dev/null 2&gt;&amp;1 &amp;</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./storm supervisor<span class="comment"># storm supervisor &gt;/dev/null 2&gt;&amp;1 &amp;</span></span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// hadoop-slave1、hadoop-slave2</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop/storm-2.2.0/bin</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./storm supervisor<span class="comment"># storm supervisor &gt;/dev/null 2&gt;&amp;1 &amp;</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p><strong>hadoop-master</strong> 成功启动<br><img src="https://img-blog.csdnimg.cn/805ba04dd29f47369be55f2afcb9d3b7.png" alt="成功启动"><br>浏览器打开 <code>http://192.168.56.1:16010</code> 往下滑 可以看到以下页面<br><img src="https://img-blog.csdnimg.cn/16c2c5a15a9241fa85df854cbd8ec4ec.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="成功启动"></p></blockquote><blockquote><p><strong>hadoop-slave1</strong>、<strong>hadoop-slave2</strong> 启动成功<br><img src="https://img-blog.csdnimg.cn/6d4ce13613644f2c87c821cbefebabc9.png" alt="启动成功"></p></blockquote><br><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>关于怎么结束掉上面几个的运行，好像没法像什么好的方法<br>我自己实验通常就暴力点 <code>$ kill -9 pid</code> 简单粗暴！</p><br><p><strong>参考文章：</strong><br><a href="https://www.w3cschool.cn/apache_storm/apache_storm_installation.html">W3Cschool Apache Storm安装</a><br><a href="https://www.cnblogs.com/panfeng412/archive/2012/11/30/how-to-install-and-deploy-storm-cluster.html">Storm集群安装部署步骤【详细版】</a></p><br><hr>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大型数据库 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Storm </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型数据库（6）--- ZooKeeper安装与配置</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/ZooKeeper%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/ZooKeeper%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>虚拟机：VirtualBox-6.1.18<br>操作系统：Ubuntu16.04LTS<br>集群情况：</p><table><thead><tr><th align="center">主机名称</th><th align="center">hadoop版本</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">hadoop-master</td><td align="center">2.7.3</td><td align="center">192.168.56.1</td></tr><tr><td align="center">hadoop-slave1</td><td align="center">2.7.3</td><td align="center">192.168.56.2</td></tr><tr><td align="center">hadoop-slave2</td><td align="center">2.7.3</td><td align="center">192.168.56.3</td></tr></tbody></table><h2 id="本次安装的ZooKeeper"><a href="#本次安装的ZooKeeper" class="headerlink" title="本次安装的ZooKeeper"></a>本次安装的ZooKeeper</h2><p>ZooKeeper版本：3.6.3<br>下载地址：<a href="https://dlcdn.apache.org/zookeeper/zookeeper-3.6.3/apache-zookeeper-3.6.3-bin.tar.gz">apache-zookeeper-3.6.3-bin.tar.gz</a><br>其他：<a href="http://zookeeper.apache.org/">ZooKeeper官网</a>  、<a href="http://zookeeper.apache.org/releases.html#download">查看不同版本</a>、<a href="http://zookeeper.apache.org/doc/r3.6.3/zookeeperStarted.html">官方文档</a></p><p>都准备就绪后，我们就接着往下开始安装吧！<br>不知道怎么准备的，我之前的文章 也许可以给你带来一些参考哦 - - - ☞ <a href="https://blog.csdn.net/li1055107552/article/details/114767752">搭建hadoop集群</a></p><p>其实还是挺简单的，自己看文档就好啦~</p><hr><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><ol><li>我的两个基础软件Hadoop、Java 分别是在&#x2F;usr&#x2F;hadoop 和 &#x2F;usr&#x2F;java下</li><li>其他的都安装在 ~&#x2F;Hadoop 的文件夹下</li><li>ZooKeeper 不仅需安装在 <strong>hadoop-master</strong> 下，还需部署在 <strong>slave</strong> 机上<br></li></ol><h2 id="安装并配置ZooKeeper"><a href="#安装并配置ZooKeeper" class="headerlink" title="安装并配置ZooKeeper"></a>安装并配置ZooKeeper</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/下载</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> apache-zookeeper-3.6.3-bin.tar.gz  ~/Hadoop/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar -zxvf apache-zookeeper-3.6.3-bin.tar.gz</span> </span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mv</span> apache-zookeeper-3.6.3 zookeeper-3.6.3</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="zoo-cfg"><a href="#zoo-cfg" class="headerlink" title="zoo.cfg"></a>zoo.cfg</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 复制一份模版</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> zookeeper-3.6.3/conf</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> zoo_sample.cfg zoo.cfg</span></span><br><span class="line"></span><br><span class="line">// 修改其中的 dataDir 路径</span><br><span class="line">dataDir=/home/xld/Hadoop/zookeeper-3.6.3/tmp</span><br><span class="line"></span><br><span class="line">// 在文件最后添加以下内容，保存退出</span><br><span class="line">server.1=hadoop-master:2888:3888</span><br><span class="line">server.2=hadoop-slave1:2888:3888</span><br><span class="line">server.3=hadoop-slave2:2888:3888</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="myid"><a href="#myid" class="headerlink" title="myid"></a>myid</h4><p>根据上面设置的 <strong>dataDir</strong> 路径，创建 <strong>myid</strong> 文件<br><code>不建议使用默认的 dataDir=/tmp/zookeeper</code>，不然每次重启之后都要重新创建myid</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 创建tmp目录，并编辑myid</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop/zookeeper-3.6.3</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> tmp</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> tmp</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">gedit myid</span></span><br><span class="line"></span><br><span class="line">// 在 myid 中添加数字&#x27;1&#x27;，保存并退出</span><br><span class="line">1</span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="将ZooKeeper安装文件复制到Slave节点"><a href="#将ZooKeeper安装文件复制到Slave节点" class="headerlink" title="将ZooKeeper安装文件复制到Slave节点"></a>将ZooKeeper安装文件复制到Slave节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">scp -r zookeeper-3.6.3 hadoop-slave1:~/Hadoop/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">scp -r zookeeper-3.6.3 hadoop-slave2:~/Hadoop/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="更改-slave-机上的-myid-值"><a href="#更改-slave-机上的-myid-值" class="headerlink" title="更改 slave 机上的 myid 值"></a>更改 slave 机上的 myid 值</h4><p>进入到 <code>hadoop-slave1:Hadoop/zookeeper-3.6.3/tmp</code> 将 <strong>myid</strong> 文件里的值改为2<br>进入到 <code>hadoop-slave2:Hadoop/zookeeper-3.6.3/tmp</code> 将 <strong>myid</strong> 文件里的值改为3</p><br><h3 id="启动ZooKeeper"><a href="#启动ZooKeeper" class="headerlink" title="启动ZooKeeper"></a>启动ZooKeeper</h3><p><strong>Zookeeper</strong> 需要各自启动，每台机都要</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 先进入到master里</span><br><span class="line">// 这里有个说明:./zkServer.sh [--config &lt;conf-dir&gt;] &#123;start|start-foreground|stop|version|restart|status|print-cmd&#125;</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop/zookeeper-3.6.3/bin</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./zkServer.sh start-foreground<span class="comment"># start也可以，start-foreground 可以查看打印的日志</span></span></span><br><span class="line"></span><br><span class="line">// 进入到其他slave里</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop/zookeeper-3.6.3/bin</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./zkServer.sh start<span class="comment"># 直接启动就好，master机同理</span></span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>master启动成功，可以看到那个大大的标志 <strong>ZooKeeper</strong><br><img src="https://img-blog.csdnimg.cn/ab917ec2b35d40b5bd36ab65c5d1e690.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="master启动成功"></p></blockquote><blockquote><p>输入 <code>$ jps</code> 可以看到 <strong>master</strong> 和 <strong>slave</strong> 都能看到 <strong><code>QuorumPeerMain</code></strong><br><img src="https://img-blog.csdnimg.cn/32e4de5f6f77435cbed0558894267441.png" alt="QuorumPeerMain"></p></blockquote><p>在 <strong>master</strong> 上，通过<code>start-foreground</code>看到 <strong>‘拒绝连接’</strong> ，是因为你的 <strong>Slave</strong> 还没开启哦~</p><br><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>通过<code>$ jps</code> 如果发现  <strong>QuorumPeerMain</strong> 开启之后 闪退<br>或是(启动&#x2F;关闭)失败<br>很有可能是没有 <strong>myid</strong> 这个文件，或是里面的 id 数值不对哦！</p><br><hr>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大型数据库 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> Hadoop </tag>
            
            <tag> ZooKeeper </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型数据库（5）--- Spark安装与配置</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Spark%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Spark%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>虚拟机：VirtualBox-6.1.18<br>操作系统：Ubuntu16.04LTS<br>集群情况：</p><table><thead><tr><th align="center">主机名称</th><th align="center">hadoop版本</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">hadoop-master</td><td align="center">2.7.3</td><td align="center">192.168.56.1</td></tr><tr><td align="center">hadoop-slave1</td><td align="center">2.7.3</td><td align="center">192.168.56.2</td></tr><tr><td align="center">hadoop-slave2</td><td align="center">2.7.3</td><td align="center">192.168.56.3</td></tr></tbody></table><h2 id="本次安装的Spark"><a href="#本次安装的Spark" class="headerlink" title="本次安装的Spark"></a>本次安装的Spark</h2><p>Spark版本：2.3.6<br>下载地址：<a href="https://www.apache.org/dyn/closer.lua/spark/spark-3.1.2/spark-3.1.2-bin-hadoop2.7.tgz">spark-3.1.2-bin-hadoop2.7.tgz</a><br>其他：<a href="https://spark.apache.org/">Spark官网</a>  、<a href="https://spark.apache.org/downloads.html">查看不同版本</a>、<a href="https://spark.apache.org/docs/3.1.2/">Spark3.1.2 官方文档</a></p><p>都准备就绪后，我们就接着往下开始安装吧！<br>不知道怎么准备的，我之前的文章 也许可以给你带来一些参考哦 - - - ☞ <a href="https://blog.csdn.net/li1055107552/article/details/114767752">搭建hadoop集群</a></p><hr><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><ol><li>我的两个基础软件Hadoop、Java 分别是在&#x2F;usr&#x2F;hadoop 和 &#x2F;usr&#x2F;java下</li><li>其他的都安装在 ~&#x2F;Hadoop 的文件夹下</li><li>Spark仅需安装在<strong>hadoop-master</strong>下哦<br></li></ol><h2 id="安装并配置Spark"><a href="#安装并配置Spark" class="headerlink" title="安装并配置Spark"></a>安装并配置Spark</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/下载</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> spark-3.1.2-bin-hadoop2.7.tgz ~/Hadoop/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar -zxvf spark-3.1.2-bin-hadoop2.7.tgz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mv</span> spark-3.1.2-bin-hadoop2.7 spark-3.1.2</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="slaves"><a href="#slaves" class="headerlink" title="slaves"></a>slaves</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">// 创建一个新的文件&quot;slaves&quot;</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> spark-3.1.2/conf/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">gedit slaves</span></span><br><span class="line"></span><br><span class="line">// 添加以下内容，保存退出</span><br><span class="line">hadoop-master</span><br><span class="line">hadoop-slave1</span><br><span class="line">hadoop-slave2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="spark-defaults-conf"><a href="#spark-defaults-conf" class="headerlink" title="spark-defaults.conf"></a>spark-defaults.conf</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 复制一份 spark-defaults.conf 并进行编辑</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> spark-defaults.conf.template spark-defaults.conf</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">gedit spark-defaults.conf</span></span><br><span class="line"></span><br><span class="line">// 去掉底部的注释部分，改为以下内容</span><br><span class="line">spark.master                     spark://hadoop-master:7077</span><br><span class="line">spark.eventLog.enabled           true</span><br><span class="line">spark.eventLog.dir               dfs://hadoop-master:8020/spark-logs</span><br><span class="line">spark.history.fs.loDirectory     hdfs://hadoop-master:8020/spark-logs</span><br><span class="line">spark.serializer                 org.apache.spark.serializer.KryoSerializer</span><br><span class="line">spark.driver.memory              5g</span><br><span class="line">spark.executor.extraJavaOptions  -XX:+PrintGCDetails -Dkey=value -Dnumbers=&quot;one two three&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="spark-env-sh"><a href="#spark-env-sh" class="headerlink" title="spark-env.sh"></a>spark-env.sh</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// 复制一份 spark-env.sh 并进行编辑</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> spark-env.sh.template spark-env.sh</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">gedit spark-env.sh</span></span><br><span class="line"></span><br><span class="line">// 在最后添加以下内容</span><br><span class="line">export JAVA_HOME=/usr/java</span><br><span class="line">export HADOOP_CONF_DIR=/usr/hadoop/etc/hadoop</span><br><span class="line">export SPARK_MASTER_IP=192.168.56.1</span><br><span class="line">export SPARK_MASTER_PORT=7077</span><br><span class="line">export SPARK_WORKER_MEMORY=1G</span><br><span class="line">export SPARK_WORKER_CORES=1</span><br><span class="line">export SPARK_EXECUTOR_MEMORY=1G</span><br><span class="line">export SPARK_EXECUTOR_CORES=1</span><br><span class="line">export SPARK_WORKER_TNSTANCES=1</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 我是添加在 /etc/profile</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo gedit /etc/profile</span></span><br><span class="line"></span><br><span class="line">// 然后在里面加入下面两句</span><br><span class="line"></span><br><span class="line">export SPARK_HOME=/home/xld/Hadoop/spark-3.1.2</span><br><span class="line">export PATH=$PATH:$SPARK_HOME/bin</span><br><span class="line"></span><br><span class="line">// 保存并退出，然后使其生效</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">source</span> .bash_profile</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="启动Spark"><a href="#启动Spark" class="headerlink" title="启动Spark"></a>启动Spark</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop/spark-3.1.2/sbin/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./mahout</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>成功启动，能看见下面一堆相关信息<br>输入 <code>$ jps</code> 可以看到 <strong>Worker</strong> 和 <strong>Master</strong><br><img src="https://img-blog.csdnimg.cn/291be9e39b1646c5bcff7d215084560e.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="成功启动"></p></blockquote><p>用浏览器打开 <code>http://192.168.56.1:8080</code> 可以看到以下界面：<br><img src="https://img-blog.csdnimg.cn/40c5c9b01e3845e8b98860dff3a695b6.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="浏览器打开"></p><br><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>最后，自己可以跑跑 <a href="https://spark.apache.org/docs/3.1.2/#running-the-examples-and-shell">官方文档 Running the Examples and Shell</a>  中的一些例子试试。</p><p>参考文章：<a href="https://blog.51cto.com/u_15127571/2888018">Spark-3.1.2搭建</a></p><br><hr>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大型数据库 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Spark </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型数据库（4）--- Sqoop安装与配置</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Sqoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Sqoop%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>虚拟机：VirtualBox-6.1.18<br>操作系统：Ubuntu16.04LTS<br>Hadoop：2.7.3<br>MySQL：5.7.33-0ubuntu0.16.04.1 (Ubuntu)</p><h2 id="本次安装的Sqoop"><a href="#本次安装的Sqoop" class="headerlink" title="本次安装的Sqoop"></a>本次安装的Sqoop</h2><p>Sqoop版本：1.99.7<br>官方文档：<a href="http://sqoop.apache.org/docs/1.99.7/admin/Installation.html">sqoop-docs&#x2F;1.99.7</a><br>下载地址：<a href="http://archive.apache.org/dist/sqoop/1.99.7/sqoop-1.99.7-bin-hadoop200.tar.gz">sqoop-1.99.7-bin-hadoop200.tar.gz</a><br>其他：<a href="http://sqoop.apache.org/">Sqoop官网</a>  、<a href="http://archive.apache.org/dist/sqoop/">查看不同版本</a>.</p><p>都准备就绪后，我们就接着往下开始安装吧！<br>不知道怎么准备的，我之前的文章 也许可以给你带来一些参考哦 - - - ☞ <a href="https://blog.csdn.net/li1055107552/article/details/114767752">传送门</a><br> <a href="https://blog.csdn.net/li1055107552/article/details/120359599">大型数据库（1）— Hive安装与配置</a>.</p><hr><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><ol><li>我的两个基础软件Hadoop、Java 分别是在&#x2F;usr&#x2F;hadoop 和 &#x2F;usr&#x2F;java下</li><li>其他的都安装在 ~&#x2F;Hadoop 的文件夹下</li><li>Sqoop仅需安装在<strong>hadoop-master</strong>下哦<br></li></ol><h2 id="配置MySQL"><a href="#配置MySQL" class="headerlink" title="配置MySQL"></a>配置MySQL</h2><p>当前是root用户登录mysql</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">drop</span> database if <span class="keyword">exists</span> sqoop;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">create</span> database sqoop;</span><br><span class="line"></span><br><span class="line">mysql<span class="operator">&gt;</span> <span class="keyword">SET</span> <span class="keyword">GLOBAL</span> sql_mode <span class="operator">=</span> ANSI_QUOTES;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>再将连接器（mysql-connector-java-5.1.27-bin.jar）CV到 <code>$SQOOP_HOME/server/lib</code> 下</p><br><h2 id="安装并配置Sqoop"><a href="#安装并配置Sqoop" class="headerlink" title="安装并配置Sqoop"></a>安装并配置Sqoop</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/下载</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> sqoop-1.99.7-bin-hadoop200.tar.gz ~/Hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar -zxvf sqoop-1.99.7-bin-hadoop200.tar.gz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mv</span> sqoop-1.99.7-bin-hadoop200 sqoop-1.99.7</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> sqoop-1.99.7/conf/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="sqoop-properties"><a href="#sqoop-properties" class="headerlink" title="sqoop.properties"></a>sqoop.properties</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">// 将此处的JDBC改为mysql的</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">JDBC repository provider configuration</span></span><br><span class="line">org.apache.sqoop.repository.jdbc.handler=org.apache.sqoop.repository.mysql.MySqlRepositoryHandler</span><br><span class="line">org.apache.sqoop.repository.jdbc.transaction.isolation=READ_COMMITTED</span><br><span class="line">org.apache.sqoop.repository.jdbc.maximum.connections=10</span><br><span class="line">org.apache.sqoop.repository.jdbc.url=jdbc:mysql://localhost:3306/sqoop</span><br><span class="line">org.apache.sqoop.repository.jdbc.driver=com.mysql.jdbc.Driver</span><br><span class="line">org.apache.sqoop.repository.jdbc.user=hadoop</span><br><span class="line">org.apache.sqoop.repository.jdbc.password=hadoop</span><br><span class="line"></span><br><span class="line">// 将此处的路径改为 自己的Hadoop的配置文件的路径</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Hadoop configuration directory</span></span><br><span class="line">org.apache.sqoop.submission.engine.mapreduce.configuration.directory=/usr/hadoop/etc/hadoop</span><br><span class="line"></span><br><span class="line">// 去掉安全部分的注释</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Authentication configuration</span></span><br><span class="line">org.apache.sqoop.security.authentication.type=SIMPLE</span><br><span class="line">org.apache.sqoop.security.authentication.handler=org.apache.sqoop.security.authentication.SimpleAuthenticationHandler</span><br><span class="line">org.apache.sqoop.security.authentication.anonymous=true</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="core-site-xml"><a href="#core-site-xml" class="headerlink" title="core-site.xml"></a>core-site.xml</h4><p>因为是sqoop2，所以我们还需要配置<code>$HADOOP_HOME/etc/hadoop</code>下的 <strong>core-site.xml</strong> 文件</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">// 在该文件中增加以下两个属性</span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.sqoop2.hosts<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.proxyuser.sqoop2.groups<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>*<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="container-executor-cfg"><a href="#container-executor-cfg" class="headerlink" title="container-executor.cfg"></a>container-executor.cfg</h4><p>添加能运行sqoop2服务器的用户<br>编辑<code>$HADOOP_HOME/etc/hadoop</code>下的 <strong>container-executor.cfg</strong> 文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">allowed.system.users=xld// 这里&#x27;xld&#x27;改为自己登陆 Ubuntu 时的用户名</span><br></pre></td></tr></table></figure><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">// 这里直接是 /etc/profile ，当然你也可以加到 .bash_profile 下也行</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo gedit .bash_profile</span></span><br><span class="line"></span><br><span class="line">// 然后添加以下内容：</span><br><span class="line">export SQOOP_HOME=/home/xld/Hadoop/sqoop-1.99.7</span><br><span class="line">export PATH=$SQOOP_HOME/bin:$PATH</span><br><span class="line">export CATALINA_HOME=$SQOOP_HOME/server</span><br><span class="line">export SQOOP_SERVER_EXTRA_LIB=$SQOOP_HOME/server/lib</span><br><span class="line">export LOGDIR=$SQOOP_HOME/logs</span><br><span class="line"></span><br><span class="line">// 保存并退出，然后使其生效</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">source</span> .bash_profile</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="启动Sqoop"><a href="#启动Sqoop" class="headerlink" title="启动Sqoop"></a>启动Sqoop</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 启用工具进行验证</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop/sqoop-1.99.7/bin</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./sqoop2-tool verify</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>验证成功，可以看到下面有successful!<br><img src="https://img-blog.csdnimg.cn/e685e399a1e84f27a9cc6692f9259b6c.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="验证成功"></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">// 验证成功后，可以开启服务器了</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./sqoop2-server start</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>启动成功，可以看到 <strong>Sqoop2 server started.</strong><br>输入 <code>$ jps</code> 可以看到 <strong>SqoopJettyServer</strong>  <br><br><img src="https://img-blog.csdnimg.cn/6abc043350b348a48d5c496fd6cd354f.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="启动成功"></p></blockquote><br><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p><strong>参考文章：</strong></p><ol><li><p><a href="https://blog.csdn.net/qq_36857730/article/details/85802920">sqoop1.99.7安装、使用及部分问题</a></p></li><li><p><a href="https://blog.csdn.net/miuiV5/article/details/83154370">sqoop2 初始化时 sql语法错误</a></p></li></ol><br><hr>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大型数据库 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Sqoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型数据库（3）--- Mahout安装与配置</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Mahout%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Mahout%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>虚拟机：VirtualBox-6.1.18<br>操作系统：Ubuntu16.04LTS<br>集群情况：</p><table><thead><tr><th align="center">主机名称</th><th align="center">hadoop版本</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">hadoop-master</td><td align="center">2.7.3</td><td align="center">192.168.56.1</td></tr><tr><td align="center">hadoop-slave1</td><td align="center">2.7.3</td><td align="center">192.168.56.2</td></tr><tr><td align="center">hadoop-slave2</td><td align="center">2.7.3</td><td align="center">192.168.56.3</td></tr></tbody></table><h2 id="本次安装的Mahout"><a href="#本次安装的Mahout" class="headerlink" title="本次安装的Mahout"></a>本次安装的Mahout</h2><p>Mahout版本：2.3.6<br>下载地址：<a href="http://archive.apache.org/dist/mahout/14.1/apache-mahout-distribution-14.1.tar.gz">apache-mahout-distribution-14.1.tar.gz</a><br>其他：<a href="http://mahout.apache.org/">Mahout官网</a>  、<a href="http://archive.apache.org/dist/mahout/">查看不同版本</a>.</p><p>都准备就绪后，我们就接着往下开始安装吧！<br>不知道怎么准备的，我之前的文章 也许可以给你带来一些参考哦 - - - ☞ <a href="https://blog.csdn.net/li1055107552/article/details/114767752">传送门</a><br> <a href="https://blog.csdn.net/li1055107552/article/details/120372265">大型数据库（2）— HBase安装与配置</a>.</p><hr><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><ol><li>我的两个基础软件Hadoop、Java 分别是在&#x2F;usr&#x2F;hadoop 和 &#x2F;usr&#x2F;java下</li><li>其他的都安装在 ~&#x2F;Hadoop 的文件夹下</li><li>Mahout仅需安装在<strong>hadoop-master</strong>下哦<br></li></ol><h2 id="安装并配置Mahout"><a href="#安装并配置Mahout" class="headerlink" title="安装并配置Mahout"></a>安装并配置Mahout</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/下载</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> apache-mahout-distribution-14.1.tar.gz ~/Hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mkdir</span> mahout-14.1</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar -zxvf hbase-2.3.6-bin.tar.gz -C ./mahout-14.1</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> mahout-14.1/bin</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="mahout"><a href="#mahout" class="headerlink" title="mahout"></a>mahout</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">// 根据它的说明，我们在开头的注释下面添加以下内容：</span><br><span class="line"></span><br><span class="line">// 你的java所在路径</span><br><span class="line">MAHOUT_JAVA_HOME=/usr/java</span><br><span class="line">// 你的hadoop配置文件所在路径</span><br><span class="line">HADOOP_CONF_DIR=/usr/hadoop/etc/hadoop</span><br><span class="line">// 你的mahout配置文件所在路径</span><br><span class="line">MAHOUT_CONF_DIR=/home/xld/Hadoop/mahout-14.1/conf</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">  MAHOUT_LOCAL       <span class="built_in">set</span> to anything other than an empty string to force</span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">                     mahout to run locally even <span class="keyword">if</span></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">                     HADOOP_CONF_DIR and HADOOP_HOME are <span class="built_in">set</span></span></span><br><span class="line">// 设置为空，不为空则为本地模式</span><br><span class="line">MAHOUT_LOCAL=&quot;&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="准备example"><a href="#准备example" class="headerlink" title="准备example"></a>准备example</h4><p>14.1的版本好像没有自带的example，所以将待会所需的例子拖到<strong>mahout</strong>的根目录下就好了<br>本地下载：<br><a href="https://www.csdn.net/">mahout-examples-0.9.jar</a>.<br><a href="https://www.csdn.net/">mahout-examples-0.9-job.jar</a>.</p><p>网上还有其他例子，可以通过mvn构建<br>但在 $MAHOUT_HOME&#x2F;example 下缺少 pom.xml 文件<br>官方的 pom.xml ：<a href="https://downloads.apache.org/mahout/14.1/apache-mahout-distribution-14.1.pom">apache-mahout-distribution-14.1.pom</a><br>需要的自己CV就好了</p><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 这里直接是 .bash_profile，当然你也可以加到 /etc/profile 下也行</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo gedit .bash_profile</span></span><br><span class="line"></span><br><span class="line">// 然后在里面加入下面两句</span><br><span class="line"></span><br><span class="line">export MAHOUT_HOME=/home/xld/Hadoop/mahout-14.1</span><br><span class="line">export PATH=$MAHOUT_HOME/bin:$PATH</span><br><span class="line">export CLASSPATH=$MAHOUT_HOME/lib</span><br><span class="line"></span><br><span class="line">// 保存并退出，然后使其生效</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">source</span> .bash_profile</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="启动mahout"><a href="#启动mahout" class="headerlink" title="启动mahout"></a>启动mahout</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop/mahout-14.1/bin</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./mahout</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>成功启动，能看见下面一堆相关信息<br><img src="https://img-blog.csdnimg.cn/5c614557fbcd43df8c47615ee4e33294.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p></blockquote><br><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><p>如果想要运行其他 jar包 的话，可以使用<code>$ hadoop jar xxx</code> 来运行哦</p><br><hr>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大型数据库 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Mahout </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型数据库（2）--- HBase安装与配置</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/HBase%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/HBase%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>虚拟机：VirtualBox-6.1.18<br>操作系统：Ubuntu16.04LTS<br>集群情况：</p><table><thead><tr><th align="center">主机名称</th><th align="center">hadoop版本</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">hadoop-master</td><td align="center">2.7.3</td><td align="center">192.168.56.1</td></tr><tr><td align="center">hadoop-slave1</td><td align="center">2.7.3</td><td align="center">192.168.56.2</td></tr><tr><td align="center">hadoop-slave2</td><td align="center">2.7.3</td><td align="center">192.168.56.3</td></tr></tbody></table><h2 id="本次安装的HBase"><a href="#本次安装的HBase" class="headerlink" title="本次安装的HBase"></a>本次安装的HBase</h2><p>HBase版本：2.3.6<br>下载地址：<a href="http://archive.apache.org/dist/hbase/stable/hbase-2.3.6-bin.tar.gz">hbase-2.3.6-bin.tar.gz</a><br>其他：<a href="http://hbase.apache.org/">HBase官网</a>  、<a href="http://archive.apache.org/dist/hbase/stable/">查看不同版本</a>.</p><p>都准备就绪后，我们就接着往下开始安装吧！<br>不知道怎么准备的，我之前的文章 也许可以给你带来一些参考哦 - - - ☞ <a href="https://blog.csdn.net/li1055107552/article/details/114767752">传送门</a><br> <a href="https://blog.csdn.net/li1055107552/article/details/120359599">大型数据库（1）— Hive安装与配置</a>.</p><hr><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><ol><li>我的两个基础软件Hadoop、Java 分别是在&#x2F;usr&#x2F;hadoop 和 &#x2F;usr&#x2F;java下</li><li>其他的都安装在 ~&#x2F;Hadoop 的文件夹下</li><li>本次没有Zookeeper，使用的是自带的zk</li><li>HBase不仅需安装在<strong>hadoop-master</strong>下，还需部署在<strong>slave</strong>机上</li></ol><br><h2 id="安装并配置HBase"><a href="#安装并配置HBase" class="headerlink" title="安装并配置HBase"></a>安装并配置HBase</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/下载</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> hbase-2.3.6-bin.tar.gz ~/Hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar -zxvf hbase-2.3.6-bin.tar.gz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> hbase-2.3.6/conf</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="hbase-env-sh"><a href="#hbase-env-sh" class="headerlink" title="hbase-env.sh"></a>hbase-env.sh</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">// 将下面的注释去掉，改为：</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">export</span> JAVA_HOME=/usr/java/jdk1.8.0/</span></span><br><span class="line">export JAVA_HOME=/usr/java// 自己Java所在位置</span><br><span class="line"></span><br><span class="line">// 将下面的注释去掉，改为：</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">export</span> HBASE_CLASSPATH=</span></span><br><span class="line">export HBASE_CLASSPATH=/usr/hadoop// 自己hadoop所在位置</span><br><span class="line"></span><br><span class="line">// 这里是后面装的zookeeper,可以不写</span><br><span class="line">export HBASE_CLASSPATH=/home/xld/Hadoop/zookeeper-3.6.3/conf</span><br><span class="line"></span><br><span class="line">// 将下面的注释去掉，改为：</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash"><span class="built_in">export</span> HBASE_OPTS</span></span><br><span class="line">export HBASE_OPTS=&quot;-XX:+UseConcMarkSweepGC&quot;</span><br><span class="line"></span><br><span class="line">// 将下面的注释去掉即可，若使用自己的zookeeper，则改为false</span><br><span class="line">export HBASE_MANAGES_ZK=true</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="hbase-site-xml"><a href="#hbase-site-xml" class="headerlink" title="hbase-site.xml"></a>hbase-site.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line">// 将以下内容</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.cluster.distributed<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>./tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.unsafe.stream.capability.enforce<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// 改为这些内容</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.cluster.distributed<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.rootdir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://hadoop-master:9000/hbase<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hbase.zookeeper.quorum<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop-slave1,hadoop-slave2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// 注意这里改为自己的master机名称，和slave机名称</span><br></pre></td></tr></table></figure><h4 id="regionservers"><a href="#regionservers" class="headerlink" title="regionservers"></a>regionservers</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">// 将里面的localhost，改为自己slave机的名称即可</span><br><span class="line">hadoop-slave1</span><br><span class="line">hadoop-slave2</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">// 这里直接是 .bash_profile，当然你也可以加到 /etc/profile 下也行</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo gedit .bash_profile</span></span><br><span class="line"></span><br><span class="line">// 然后在里面加入下面两句</span><br><span class="line"></span><br><span class="line">export HBASE_HOME=/home/xld/Hadoop/hbase-2.3.6</span><br><span class="line">export HADOOP_CLASSPATH=$HBASE_HOME/lib/*</span><br><span class="line">export PATH=$HBASE_HOME/bin:$PATH</span><br><span class="line"></span><br><span class="line">// 保存并退出，然后使其生效</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">source</span> .bash_profile</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="将HBase安装文件复制到Slave节点"><a href="#将HBase安装文件复制到Slave节点" class="headerlink" title="将HBase安装文件复制到Slave节点"></a>将HBase安装文件复制到Slave节点</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> Hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">scp -r hbase-2.3.6 hadoop-slave1:~/Hadoop/</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">scp -r hbase-2.3.6 hadoop-slave2:~/Hadoop/</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="启动HBase"><a href="#启动HBase" class="headerlink" title="启动HBase"></a>启动HBase</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop/hbase-2.3.6/bin</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">./start-hbase.sh</span></span><br><span class="line"></span><br><span class="line">// 可以使用 $ jps 查看</span><br><span class="line">// hadoop-master：HMaster</span><br><span class="line">// hadoop-slave1、hadoop-slave2 ：HRegionServer、HQuorumPeer</span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>成功启动<br><img src="https://img-blog.csdnimg.cn/37d8d16502004273bd5c477156fe8d8b.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="成功启动"><br><img src="https://img-blog.csdnimg.cn/805ba04dd29f47369be55f2afcb9d3b7.png#pic_center" alt="成功启动"></p></blockquote><p>浏览器打开 <code>http://192.168.56.1:16010</code> 可以看到以下页面<br><img src="https://img-blog.csdnimg.cn/cd6f34e88e8242c7bfc08169fb7df61d.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16" alt="成功启动"></p><br><hr><h1 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h1><h2 id="若需使用自己安装的zookeeper"><a href="#若需使用自己安装的zookeeper" class="headerlink" title="若需使用自己安装的zookeeper"></a>若需使用自己安装的zookeeper</h2><p> 需要更改 hbase-env.sh 以下配置：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">// 添加</span><br><span class="line">export HBASE_CLASSPATH=/home/xld/Hadoop/zookeeper-3.6.3/conf</span><br><span class="line"></span><br><span class="line">// true 改为 false</span><br><span class="line">export HBASE_MANAGES_ZK=false</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>启动时，需要先将每一台机器的zookeeper都启动后，再启动hbase</p><br><hr>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大型数据库 </tag>
            
            <tag> HBase </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大型数据库（1）--- Hive安装与配置</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Hive%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/Hive%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="安装说明"><a href="#安装说明" class="headerlink" title="安装说明"></a>安装说明</h1><h2 id="安装环境"><a href="#安装环境" class="headerlink" title="安装环境"></a>安装环境</h2><p>虚拟机：VirtualBox-6.1.18<br>操作系统：Ubuntu16.04LTS</p><h2 id="基础软件"><a href="#基础软件" class="headerlink" title="基础软件"></a>基础软件</h2><p>JDK：jdk-8u281-linux-x64.tar.gz<br>hadoop：hadoop2.7.3<br>MySQL：Server version: 5.7.33-0ubuntu0.16.04.1 (Ubuntu)</p><p>集群情况：</p><table><thead><tr><th align="center">主机名称</th><th align="center">hadoop版本</th><th align="center">IP地址</th></tr></thead><tbody><tr><td align="center">hadoop-master</td><td align="center">2.7.3</td><td align="center">192.168.56.1</td></tr><tr><td align="center">hadoop-slave1</td><td align="center">2.7.3</td><td align="center">192.168.56.2</td></tr><tr><td align="center">hadoop-slave2</td><td align="center">2.7.3</td><td align="center">192.168.56.3</td></tr></tbody></table><h2 id="本次安装的Hive"><a href="#本次安装的Hive" class="headerlink" title="本次安装的Hive"></a>本次安装的Hive</h2><p>Hive版本：3.1.2<br>下载地址：<a href="https://apache.website-solution.net/hive/hive-3.1.2/apache-hive-3.1.2-bin.tar.gz">apache-hive-3.1.2-bin.tar.gz</a>.<br>其他：<a href="https://hive.apache.org/">Hive官网</a>  、<a href="https://apache.website-solution.net/hive/">查看不同版本</a>.</p><p>都准备就绪后，我们就接着往下开始安装吧！<br>不知道怎么准备的，我之前的文章 也许可以给你带来一些参考哦 - - - ☞ <a href="https://blog.csdn.net/li1055107552/article/details/114767752">传送门</a></p><hr><h1 id="开始安装"><a href="#开始安装" class="headerlink" title="开始安装"></a>开始安装</h1><p>我的两个基础软件Hadoop、Java 分别是在&#x2F;usr&#x2F;hadoop 和 &#x2F;usr&#x2F;java下<br>其他的都安装在 ~&#x2F;Hadoop 的文件夹下<br>Hive的安装仅在<strong>hadoop-master</strong>下安装即可，无需在slave机上部署</p><br><h2 id="配置MySQL"><a href="#配置MySQL" class="headerlink" title="配置MySQL"></a>配置MySQL</h2><p>没安装的直接用<code>apt install </code>安装即可，一搜一大把<br>当前是root用户登录mysql</p><p>1.创建hadoop用户</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> hadoop@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;hadoop&#x27;</span>;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> hadoop@<span class="string">&#x27;localhost&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;hadoop&#x27;</span>;</span><br><span class="line"><span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> hadoop@<span class="string">&#x27;hadoop-master&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;hadoop&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="operator">/</span><span class="operator">/</span> mysql<span class="operator">&gt;</span> <span class="keyword">grant</span> <span class="keyword">all</span> <span class="keyword">on</span> <span class="operator">*</span>.<span class="operator">*</span> <span class="keyword">to</span> <span class="string">&#x27;hadoop&#x27;</span>@<span class="string">&#x27;%&#x27;</span> identified <span class="keyword">by</span> <span class="string">&#x27;hadoop&#x27;</span> <span class="keyword">with</span> <span class="keyword">grant</span> option;</span><br></pre></td></tr></table></figure><p>2.刷新权限</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flush privileges;</span><br></pre></td></tr></table></figure><p>3.创建Hive数据库</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">create</span> database hive</span><br></pre></td></tr></table></figure><p>重启mysql服务：<code>$ sudo service mysql restart</code></p><br><h2 id="安装并配置Hive"><a href="#安装并配置Hive" class="headerlink" title="安装并配置Hive"></a>安装并配置Hive</h2><h3 id="解压"><a href="#解压" class="headerlink" title="解压"></a>解压</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/下载</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> apache-hive-3.1.2-bin.tar.gz ~/Hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> ~/Hadoop</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">tar -zxvf apache-hive-3.1.2-bin.tar.gz</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">mv</span> apache-hive-3.1.2-bin hive-3.1.2</span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span> hive-3.1.2/conf</span></span><br></pre></td></tr></table></figure><br><h3 id="配置"><a href="#配置" class="headerlink" title="配置"></a>配置</h3><h4 id="hive-env-sh"><a href="#hive-env-sh" class="headerlink" title="hive-env.sh"></a>hive-env.sh</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 复制一份 hive-env.sh 的模版</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cp</span> hive-env.sh.template hive-env.sh</span></span><br><span class="line"></span><br><span class="line">// hive-env.sh 将第48行注释去掉，改为</span><br><span class="line">HADOOP_HOME=/usr/hadoop（你hadoop安装的位置）</span><br></pre></td></tr></table></figure><h4 id="hive-site-xml"><a href="#hive-site-xml" class="headerlink" title="hive-site.xml"></a>hive-site.xml</h4><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">// 创建一个新文件 hive-site.xml</span><br><span class="line">$ gedit hive-site.xml</span><br><span class="line"></span><br><span class="line">// 添加以下内容</span><br><span class="line"><span class="meta">&lt;?xml version=<span class="string">&quot;1.0&quot;</span>?&gt;</span></span><br><span class="line"><span class="meta">&lt;?xml-stylesheet type=<span class="string">&quot;text/xsl&quot;</span> href=<span class="string">&quot;configuration.xsl&quot;</span>?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.metastore.local<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionURL<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">         <span class="tag">&lt;<span class="name">value</span>&gt;</span>jdbc:mysql://192.168.56.1:3306/hive?createDatabaseIfNotExist=true<span class="symbol">&amp;amp;</span>characterEncoding=UTF-8<span class="symbol">&amp;amp;</span>serverTimezone=GMT<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionDriverName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>com.mysql.jdbc.Driver<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionUserName<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">name</span>&gt;</span>javax.jdo.option.ConnectionPassword<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">name</span>&gt;</span>datanucleus.schema.autoCreateAll<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">name</span>&gt;</span>hive.metastore.schema.verification<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">value</span>&gt;</span>false<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line">// 注意这里本机(hadoop-master)的ip是192.168.56.1</span><br><span class="line">// 连接mysql时用的hadoop用户和密码</span><br></pre></td></tr></table></figure><h4 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">// 这里直接是 /etc/profile，当然你也可以加到 .bash_profile 下也行</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">sudo gedit /etc/profile</span></span><br><span class="line"></span><br><span class="line">// 然后在里面加入下面两句</span><br><span class="line"></span><br><span class="line">export HIVE_HOME=/home/xld/Hadoop/hive</span><br><span class="line">export PATH=$HIVE_HOME/bin:$PATH</span><br><span class="line"></span><br><span class="line">// 保存并退出，然后使其生效</span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">source</span> /etc/profile</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><br><h3 id="导入mysql-connector"><a href="#导入mysql-connector" class="headerlink" title="导入mysql-connector"></a>导入mysql-connector</h3><p>直接将mysql-connector的jar包丢到 <code>~/Hadoop/hive-3.1.2/lib</code> 目录下就好了<br>这里用的是 mysql-connector-java-5.1.27-bin.jar，当然很多版本都可以啦，支持当前mysql版本都行<br>下载地址：<a href="https://cdn.mysql.com/archives/mysql-connector-java-5.1/mysql-connector-java-5.1.27.tar.gz">mysql-connector-java-5.1.27.tar.gz</a></p><br><h3 id="启动hive"><a href="#启动hive" class="headerlink" title="启动hive"></a>启动hive</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta prompt_">$ </span><span class="language-bash"><span class="built_in">cd</span></span></span><br><span class="line"><span class="meta prompt_">$ </span><span class="language-bash">hive</span></span><br><span class="line"></span><br><span class="line">// 成功进入到hive页面后</span><br><span class="line"><span class="meta prompt_">hive&gt; </span><span class="language-bash">show databases;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><blockquote><p>成功启动<br><img src="https://img-blog.csdnimg.cn/76d8e2c755704f8791072aa5772465c7.png?x-oss-process=image/watermark,type_ZHJvaWRzYW5zZmFsbGJhY2s,shadow_50,text_Q1NETiBA57uG57KS5LiB,size_20,color_FFFFFF,t_70,g_se,x_16#pic_center" alt="在这里插入图片描述"></p></blockquote><br><hr><h1 id="其他错误"><a href="#其他错误" class="headerlink" title="其他错误"></a>其他错误</h1><h2 id="hive启动Failed-to-get-schema-version报错"><a href="#hive启动Failed-to-get-schema-version报错" class="headerlink" title="hive启动Failed to get schema version报错"></a>hive启动Failed to get schema version报错</h2><p>推荐参考：<a href="https://blog.csdn.net/liliblue/article/details/102594664">hive安装Failed to get schema version报错</a><br>解决方法：注释掉  &#x2F;etc&#x2F;mysql&#x2F;mysql.conf.d&#x2F;mysqld.cnf   里面的这一句    bind-address &#x3D; 127.0.0.1 </p><br><h2 id="显示有“拒绝连接”"><a href="#显示有“拒绝连接”" class="headerlink" title="显示有“拒绝连接”"></a>显示有“拒绝连接”</h2><p>推荐参考：<a href="https://blog.csdn.net/weixin_45627031/article/details/104554136">Exception in thread “main” java.lang.RuntimeException: java.net.ConnectException错误问题</a><br>解决方法：启动Hadoop集群</p><br><hr>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 大型数据库 </tag>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> Hadoop </tag>
            
            <tag> Hive </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用命令语句</title>
      <link href="/%E7%AC%94%E8%AE%B0/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AF%AD%E5%8F%A5/"/>
      <url>/%E7%AC%94%E8%AE%B0/%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4%E8%AF%AD%E5%8F%A5/</url>
      
        <content type="html"><![CDATA[<h2 id="Git"><a href="#Git" class="headerlink" title="Git"></a>Git</h2><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">新建文件夹</span><br><span class="line">进入文件夹，右击git bash here</span><br><span class="line"> $ git init</span><br><span class="line">    #（添加用户名+email）方法在底下 #</span><br><span class="line"> $ git remote add origin XXX// 添加远程仓库地址</span><br><span class="line"> $ git pull</span><br><span class="line">  -$ git add 文件名// 工作区→暂存区</span><br><span class="line">  -$ git commit -m &#x27;描述&#x27;// 暂存区→Git仓库</span><br><span class="line"> $ git push origin main</span><br><span class="line"> $ git push -u origin main</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>$ git clone -b dev origin &#x2F;&#x2F; 拉取特定分支(dev:分支名称)<br>$ git fetch origin dev<br>$ git pull origin dev</p><p>$ git checkout -b main&#x2F;&#x2F; 切换到main分支上（没有则创建）<br>$ git branch&#x2F;&#x2F; 展示分支<br>$ git merge master&#x2F;&#x2F; 将master分支合并到main上<br>$ gie branch -d master&#x2F;&#x2F; 将master分支删除</p><p>$ git push origin main&#x2F;&#x2F; 推到main分支上</p><p>$ git remote -v&#x2F;&#x2F; 查看远程仓库详细信息，可以看到仓库名称<br>$ git remote remove orign&#x2F;&#x2F; 删除orign仓库（如果把origin拼写成orign，删除错误名称仓库）<br>$ git remote add origin XXX&#x2F;&#x2F; 重新添加远程仓库地址</p><p>$ gti push -u origin master&#x2F;&#x2F; 提交到远程仓库的master主干<br>$ git push -f origin master&#x2F;&#x2F; 强制上传覆盖</p><p>$ git config –global user.name ‘username’<br>$ git config –global user.email ‘<a href="mailto:&#121;&#111;&#117;&#x72;&#x5f;&#x65;&#x6d;&#x61;&#105;&#108;&#x40;&#120;&#x78;&#x2e;&#x63;&#111;&#109;">&#121;&#111;&#117;&#x72;&#x5f;&#x65;&#x6d;&#x61;&#105;&#108;&#x40;&#120;&#x78;&#x2e;&#x63;&#111;&#109;</a>‘<br>$ git config –list&#x2F;&#x2F; 查看设置<br>$ git config  credential.helper store&#x2F;&#x2F; 不用每次push都输入账号密码</p><p>$ git status &#x2F;&#x2F; 查看当前文件的状况（工作区&#x2F;暂存区）<br>$ git add 文件名&#x2F;&#x2F; 工作区→暂存区<br>$ git commit -m ‘描述’&#x2F;&#x2F; 暂存区→Git仓库</p><p>&#x2F;&#x2F;查<br>git config –global –list<br>git config –global user.name<br>git remote -v</p><p>&#x2F;&#x2F;增<br>git config  –global –add user.name xld<br>git remote set-url –add origin “XXX”&#x2F;&#x2F; 添加多个仓库地址</p><p>&#x2F;&#x2F;删<br>git config  –global –unset user.name</p><p>&#x2F;&#x2F;改<br>git config –global user.name xld</p><p>&#x2F;&#x2F;开VPN代理，push失败 但能打开页面<br>$ git config http.proxy</p><p><a href="https://www.runoob.com/git/git-basic-operations.html">https://www.runoob.com/git/git-basic-operations.html</a></p><p>npm换源：<br>$ npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></p><p>运行单独的Vue页面<br>$ npm install -g @vue&#x2F;cli-service-global<br>$ vue serve</p><ol><li>下载安装 Node.js </li><li>npm 换源</li><li>npm安装Vue</li><li>运行</li></ol><p>哪个命令不能用，就删掉哪个 *.ps1 的文件<br>C:\Users\asus\AppData\Roaming\npm</p><h3 id="github-com"><a href="#github-com" class="headerlink" title="github.com"></a>github.com</h3><p>13.114.40.48<br>13.250.177.223<br>13.229.188.59<br>52.74.223.119<br>52.192.72.89<br>140.82.112.4<br>192.30.255.113</p><h2 id="Node"><a href="#Node" class="headerlink" title="Node"></a>Node</h2><p>$ <strong>npm config set registry <a href="https://registry.npm.taobao.org/">https://registry.npm.taobao.org</a></strong> &#x2F;&#x2F; 更换成淘宝的源</p><h2 id="vsCode："><a href="#vsCode：" class="headerlink" title="vsCode："></a>vsCode：</h2><p>File(文件)-&gt;Preferences(首选项)-&gt;Usersettings(设置)<br>搜索encoding，修改默认编码</p><p><strong>终端：</strong><br>write-host “hello world” -foregroundcolor “green”&#x2F;&#x2F; 打印颜色</p><p><strong>右键菜单：</strong></p><ol><li>win-R  “regedit”</li><li>“ 计算机\HKEY_CLASSES_ROOT\Directory\Background\shell “</li></ol><p><strong>linux：</strong><br>$ ps -e | grep apt</p><p><strong>服务端网卡：</strong><br>$ sudo dhclient enp0s8<br>$ sudo dhclient enp0s3</p><p><strong>Ubuntu桌面：</strong></p><ol><li><p>在命令行运行以下命令更新<br>$ apt-get update<br>$ apt-get upgrade</p></li><li><p>安装桌面<br>$ apt-get install -y ubuntu-desktop</p></li><li><p>安装xrdp<br>$ apt-get install -y xrdp<br>安装完成后，即可使用Windows远程桌面工具登录Ubuntu。</p></li></ol><p><strong>Ubuntu换源：</strong><br>$ sudo vim &#x2F;etc&#x2F;apt&#x2F;sources.list<br>将 <a href="http://cn.archive.ubuntu.com/ubuntu">http://cn.archive.ubuntu.com/ubuntu</a><br>换成<a href="https://mirrors.aliyun.com/ubuntu/">https://mirrors.aliyun.com/ubuntu/</a></p><p>ubuntu查看处理器和系统架构：<br>$ uname -a;<br>$ uname -m;<br>$ dpkg –print-architecture；<br>$ getconf LONG_BIT;<br>$ file &#x2F;sbin&#x2F;init;</p><p>清华开源镜像站<br><a href="https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu-ports/">https://mirrors.tuna.tsinghua.edu.cn/help/ubuntu-ports/</a></p><p>关于 cdn.jsdelivr.net 挂了：<br>（npm版本）<br>将：<a href="https://cdn.jsdelivr.net/npm">https://cdn.jsdelivr.net/npm</a><br>更换为：   <a href="https://unpkg.com/">https://unpkg.com</a><br>国内镜像源：<a href="https://unpkg.zhimg.com/">https://unpkg.zhimg.com/</a><br>（gh版本）<br>自重吧！</p><p>Ubuntu删除无用的dpkg包<br>dpkg -l 命令可以查看所有安装的包，其中rc状态的包是卸载了包但配置文件还在，可以使用以下命令进行清理：<br>$ dpkg -l | grep ^rc | cut -d’ ‘ -f3 | sudo xargs dpkg –purge</p><p>包管理 dpkg 解释<br><a href="https://blog.csdn.net/qiuchangyong/article/details/97505379">https://blog.csdn.net/qiuchangyong/article/details/97505379</a><br>$ sudo dpkg –add-architecture arm64(当前状态，不行就remove掉)<br>$ sudo dpkg –remove-architecture arm64</p><p>21.04 hirsute<br>20.04 focal<br>18.04 bionic<br>16.04 xenial<br>14.04 trusty<br>12.04 precise</p><p>MongoDB</p><p>修复mongodb启动失败问题（service mongodb start）：<a href="https://blog.csdn.net/qq_41420747/article/details/82988472">https://blog.csdn.net/qq_41420747/article/details/82988472</a><br>sudo pkill mongod                              # 杀死mongod服务<br>sudo mongod -f &#x2F;etc&#x2F;mongod.conf –fork –auth  # –auth 表示以认证模式启动服务，不加则关闭</p><p>树莓派安装非官方系统没有raspi-config命令的解决方法：<br>1、安装依赖<br>sudo apt install whiptail parted lua5.1 alsa-utils psmisc<br>2、从Raspberrypi官网下载最新的deb安装包<br>wget <a href="http://archive.raspberrypi.org/debian/pool/main/r/raspi-config/raspi-config_20200707_all.deb">http://archive.raspberrypi.org/debian/pool/main/r/raspi-config/raspi-config_20200707_all.deb</a><br>3、安装Deb安装包<br>sudo dpkg -i raspi-config_20200707_all.deb<br>4、装好软件还是提示缺少依赖执行错误<br>sudo apt install -f -y<br>5、运行raspi-config，需要sudo或以上权限<br>sudo raspi-config</p><p>树莓派通过raspi-config启动摄像头时，出错:Your firmwave appears to be out of date (no start_x.elf). Please update：<br>1、查看boot分区所在的设备号，设备号可能是：&#x2F;dev&#x2F;mmcblk0p1<br>df -h<br>2、将该设备号挂载在&#x2F;boot上<br>mount &#x2F;dev&#x2F;mmcblk0p1 &#x2F;boot</p><p>Windows创建软连接:<br>$ mklink 目标文件夹路径 文件夹实际存储路径<br>eg: <a href="https://blog.csdn.net/sg_knight/article/details/121202084">微信开发者工具更换存储目录将C盘数据User Data迁移到D盘</a></p><p>Windows快速复制&#x2F;移动 大量文件（多线程）<br><code>$ robocopy D:\备份 J:\D\备份 *.* /mt /z /move /e</code></p>]]></content>
      
      
      <categories>
          
          <category> 笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于</title>
      <link href="//about/"/>
      <url>//about/</url>
      
        <content type="html"><![CDATA[<p>欢迎光临来到本小站~</p><p>这里是细粒丁の个人博客哦~</p><hr><h2 id="先介绍下自己吧"><a href="#先介绍下自己吧" class="headerlink" title="先介绍下自己吧~"></a>先介绍下自己吧~</h2><p>这里细粒丁，坐标广东广州，是个男孩纸~</p><p>昂有很多个名字哦，嗯…有… 细粒丁、来自火星の细粒丁、女娲&amp;兔兔</p><p>关于我的称呼还挺多的，比如：细粒丁、粒粒、丁丁、兔兔 ……</p><p>至于为什么嘛。。。呃…本兔也不知道呢！</p><h3 id="技术方面嘛"><a href="#技术方面嘛" class="headerlink" title="技术方面嘛"></a>技术方面嘛</h3><p>目前还是个小白了啦~<br>玩前端比较多，之前玩的小程序，然后就玩了会儿uni-app（Vue），现在就搞搞博客这样咯~</p><hr><h2 id="再说说这个博客"><a href="#再说说这个博客" class="headerlink" title="再说说这个博客"></a>再说说这个博客</h2><p>建个人博客是从我刚学前端没多久，就想做的一件事了啦，因为自己有个炫酷的网站真的好像挺帅气的。</p><p>当时刚开始接触三件套，就想着 要不就建一个静态的吧，把内容都写死在html里不就好了，当时真的挺天真的~</p><p>后来到了暑期，玩了小程序之后，技术有个小阶梯的飞跃吧，后面再学Vue还是挺容易的，然后就想，要不建个动态的吧，就用Vue！这也就是这个博客的初态。</p><p>我大概已经构思好了怎么用Vue来搭建了，然后在我做完两三个页面之后，发现问题了……虽然说动态是好，完整搭出来可能和做一个完整小程序差不多，但…真的有这个必要吗？一个博客最多就是像个朋友圈一样，能实时展示最新的消息，但好像没这个必要：</p><ol><li>首先是时效性。博客只是像单纯的写文章、写日记、做笔记差不多，并不需要很高的时效性，有些内容迟一天发和早一天发，甚至可以说没影响</li><li>资源问题。如果用Vue，从前端-云开发（云函数+云数据库），前端可以挂静态托管，但后端的资源消耗会很大。我做过小程序，如果所有服务都通过云函数调用获取，资源都存储在云存储和云数据库中，这个每天或是每个月的消耗还是挺大的，最起码免费的不够用。</li><li>管理问题。动态的可以说使用方便，但需要有人去管理，管理的成本也不少，一旦说哪一环出现问题了，都要自己去维护，对于我一个学生党来说挺花时间的。相反静态就不怎么需要维护了，放着就好了……</li></ol><p>所以就想到了用hexo，直接打包成静态的发布，维护小、成本低…….就它了！</p><hr><h2 id="关于本站"><a href="#关于本站" class="headerlink" title="关于本站"></a>关于本站</h2><h4 id="2022-09-12"><a href="#2022-09-12" class="headerlink" title="2022-09-12"></a>2022-09-12</h4><ol><li>Twikoo评论部署迁移。<blockquote><p>腾讯！云开发！真的！太贵了！</p><p><del>39元&#x2F;月</del> 19.9元&#x2F;月的套餐费用 + 按量付费<br><del>(他还给我打折，还给我一个月缓冲操作时间，他真的，我哭死)</del></p><p>然后日志还要收钱，CDN 云函数调用 容量 还涨价<br><del>(虽然说套餐的不一定用得完，毕竟寒舍嘛)</del></p><p>然后，我用docker不香嘛……</p></blockquote></li></ol><h4 id="2022-06-05"><a href="#2022-06-05" class="headerlink" title="2022-06-05"></a>2022-06-05</h4><ol><li>将国外的CDN资源迁移至国内或本地<blockquote><p>这也无奈呀~ 怎么会有人不封github 反倒把github的CDN封了，秘制操作……</p></blockquote></li></ol><h4 id="2021-7-19"><a href="#2021-7-19" class="headerlink" title="2021-7-19"></a>2021-7-19</h4><ol><li>本站的大致结构基本形成，并发布在了github的个人主页上进行测试</li><li>本站采用的是hexo框架-butterfly主题</li><li>本站设置了评论系统，可邮箱通知最新消息</li><li>设置了贡献面板</li><li>不知道了啦……太多了……</li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>C语言实现TCP/IP连接</title>
      <link href="/%E6%8A%80%E6%9C%AF/C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0TCPIP%E8%BF%9E%E6%8E%A5/"/>
      <url>/%E6%8A%80%E6%9C%AF/C%E8%AF%AD%E8%A8%80%E5%AE%9E%E7%8E%B0TCPIP%E8%BF%9E%E6%8E%A5/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言实现TCP-x2F-IP连接"><a href="#C语言实现TCP-x2F-IP连接" class="headerlink" title="C语言实现TCP&#x2F;IP连接"></a>C语言实现TCP&#x2F;IP连接</h1><p>利用C语言，实现TCP&#x2F;IP连接。其中采用CS模式+套接字的方式。</p><p>先上代码：</p><h3 id="Server-c服务端"><a href="#Server-c服务端" class="headerlink" title="Server.c服务端"></a>Server.c服务端</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Server.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ws2tcpip.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SERVER_PORT 6666</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 套接字连接--全局</span></span><br><span class="line"><span class="type">int</span> client;</span><br><span class="line"><span class="comment">// 调用socket函数返回的文件描述符</span></span><br><span class="line"><span class="type">int</span> serverSocket;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> buffer[<span class="number">200</span>]; <span class="comment">//存储 发送和接收的信息</span></span><br><span class="line"><span class="type">int</span> iDataNum;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化服务端，等待客户端连接</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">sockInit</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">监听后，一直处于accept阻塞状态，</span></span><br><span class="line"><span class="comment">直到有客户端连接，</span></span><br><span class="line"><span class="comment">当客户端如数quit后，断开与客户端的连接</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//声明两个套接字sockaddr_in结构体变量，分别表示客户端和服务器</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">server_addr</span>;</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">clientAddr</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> addr_len = <span class="keyword">sizeof</span>(clientAddr);</span><br><span class="line"></span><br><span class="line"><span class="comment">//必须先初始化</span></span><br><span class="line">WSADATA wsaData;</span><br><span class="line">WSAStartup(MAKEWORD(<span class="number">2</span>, <span class="number">2</span>), &amp;wsaData);</span><br><span class="line"><span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">2</span> || HIBYTE(wsaData.wVersion) != <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;require version fail!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//socket函数，失败返回-1</span></span><br><span class="line"><span class="comment">//int socket(int domain, int type, int protocol);</span></span><br><span class="line"><span class="comment">//第一个参数表示使用的地址类型，一般都是ipv4，AF_INET</span></span><br><span class="line"><span class="comment">//第二个参数表示套接字类型：tcp：面向连接的稳定数据传输SOCK_STREAM</span></span><br><span class="line"><span class="comment">//第三个参数设置为0</span></span><br><span class="line"><span class="comment">//建立socket</span></span><br><span class="line"><span class="keyword">if</span> ((serverSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">&quot;socket&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化 server_addr</span></span><br><span class="line"><span class="built_in">memset</span>(&amp;server_addr, <span class="number">0</span>, <span class="keyword">sizeof</span>(server_addr));</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化服务器端的套接字，并用htons和htonl将端口和地址转成网络字节序</span></span><br><span class="line">server_addr.sin_family = AF_INET;</span><br><span class="line">server_addr.sin_port = htons(SERVER_PORT);</span><br><span class="line"></span><br><span class="line"><span class="comment">//ip可是是本服务器的ip，也可以用宏INADDR_ANY代替，代表0.0.0.0，表明所有地址</span></span><br><span class="line">server_addr.sin_addr.s_addr = htonl(INADDR_ANY);</span><br><span class="line"></span><br><span class="line"><span class="comment">//对于bind，accept之类的函数，里面套接字参数都是需要强制转换成(struct sockaddr *)</span></span><br><span class="line"><span class="comment">//bind三个参数：服务器端的套接字的文件描述符，</span></span><br><span class="line"><span class="keyword">if</span> (bind(serverSocket, (<span class="keyword">struct</span> sockaddr *)&amp;server_addr, <span class="keyword">sizeof</span>(server_addr)) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">&quot;connect&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//设置服务器上的socket为监听状态</span></span><br><span class="line"><span class="keyword">if</span> (listen(serverSocket, <span class="number">5</span>) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">&quot;listen&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n监听端口: %d\n&quot;</span>, SERVER_PORT);</span><br><span class="line"><span class="comment">//调用accept函数后，会进入阻塞状态</span></span><br><span class="line"><span class="comment">//accept返回一个套接字的文件描述符，这样服务器端便有两个套接字的文件描述符，</span></span><br><span class="line"><span class="comment">//serverSocket和client。</span></span><br><span class="line"><span class="comment">//serverSocket仍然继续在监听状态，client则负责接收和发送数据</span></span><br><span class="line"><span class="comment">//clientAddr是一个传出参数，accept返回时，传出客户端的地址和端口号</span></span><br><span class="line"><span class="comment">//addr_len是一个传入-传出参数，传入的是调用者提供的缓冲区的clientAddr的长度，以避免缓冲区溢出。</span></span><br><span class="line"><span class="comment">//传出的是客户端地址结构体的实际长度。</span></span><br><span class="line"><span class="comment">//出错返回-1</span></span><br><span class="line">client = accept(serverSocket, (<span class="keyword">struct</span> sockaddr *)&amp;clientAddr, (<span class="type">socklen_t</span> *)&amp;addr_len);</span><br><span class="line"><span class="keyword">if</span> (client &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">&quot;accept&quot;</span>);</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// inet_ntoa ip地址转换函数，将网络字节序IP转换为点分十进制IP</span></span><br><span class="line"><span class="comment">// 表达式：char *inet_ntoa (struct in_addr);</span></span><br><span class="line"><span class="comment">// printf(&quot;IP is %s\n&quot;, inet_ntoa(clientAddr.sin_addr)); //把来访问的客户端的IP地址打出来</span></span><br><span class="line"><span class="comment">// printf(&quot;Port is %d\n\n&quot;, htons(clientAddr.sin_port));</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;host: %s:%d\n\n&quot;</span>, inet_ntoa(clientAddr.sin_addr), htons(clientAddr.sin_port));</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">get_msg</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 接收数据</span></span><br><span class="line"><span class="built_in">memset</span>(buffer, <span class="number">0</span>, <span class="keyword">sizeof</span>(buffer));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;等待信息...\n&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">iDataNum = recv(client, buffer, <span class="keyword">sizeof</span>(buffer), <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (iDataNum &gt;= <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">buffer[iDataNum] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;收到的信息：%s\n\n&quot;</span>,buffer);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 发送信息</span></span><br><span class="line"><span class="built_in">memset</span>(buffer, <span class="number">0</span>, <span class="keyword">sizeof</span>(buffer));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入发送的内容：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;buffer);</span><br><span class="line">        send(client, buffer, <span class="built_in">strlen</span>(buffer), <span class="number">0</span>); <span class="comment">//向服务端发送消息</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">sockInit();</span><br><span class="line">get_msg();</span><br><span class="line">getchar();</span><br><span class="line">close(serverSocket);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="Client-c客户端"><a href="#Client-c客户端" class="headerlink" title="Client.c客户端"></a>Client.c客户端</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Client.c</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fcntl.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ws2tcpip.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> SERVER_PORT 6666</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 套接字连接--全局</span></span><br><span class="line"><span class="comment">// 客户端只需要一个套接字文件描述符，用于和服务器通信</span></span><br><span class="line"><span class="type">int</span> serverSocket;</span><br><span class="line"><span class="type">unsigned</span> <span class="type">char</span> buffer[<span class="number">200</span>]; <span class="comment">//存储 发送的信息</span></span><br><span class="line"><span class="type">int</span> iDataNum;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 连接服务端</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">sockInit</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line"><span class="comment">//描述服务器的socket</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">sockaddr_in</span> <span class="title">serverAddr</span>;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//下面代码初始化</span></span><br><span class="line">WSADATA wsaData;</span><br><span class="line">WSAStartup(MAKEWORD(<span class="number">2</span>, <span class="number">2</span>), &amp;wsaData);</span><br><span class="line"><span class="keyword">if</span> (LOBYTE(wsaData.wVersion) != <span class="number">2</span> || HIBYTE(wsaData.wVersion) != <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;require version fail!&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> ((serverSocket = socket(AF_INET, SOCK_STREAM, IPPROTO_TCP)) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">&quot;socket&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">serverAddr.sin_family = AF_INET;</span><br><span class="line">serverAddr.sin_port = htons(SERVER_PORT);</span><br><span class="line"></span><br><span class="line"><span class="comment">//指定服务器端的ip，本地测试：127.0.0.1</span></span><br><span class="line"><span class="comment">//inet_addr()函数，将点分十进制IP转换成网络字节序IP</span></span><br><span class="line">serverAddr.sin_addr.s_addr = inet_addr(<span class="string">&quot;127.0.0.1&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (connect(serverSocket, (<span class="keyword">struct</span> sockaddr *)&amp;serverAddr, <span class="keyword">sizeof</span>(serverAddr)) &lt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">perror(<span class="string">&quot;connect&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (sockInit() != <span class="number">1</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n连接成功...\n\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(<span class="number">1</span>)&#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 发送信息</span></span><br><span class="line"><span class="built_in">memset</span>(buffer, <span class="number">0</span>, <span class="keyword">sizeof</span>(buffer));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;请输入发送的内容：&quot;</span>);</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>,&amp;buffer);</span><br><span class="line">        send(serverSocket, buffer, <span class="built_in">strlen</span>(buffer), <span class="number">0</span>); <span class="comment">//向服务端发送消息</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">// 接收数据</span></span><br><span class="line"><span class="built_in">memset</span>(buffer, <span class="number">0</span>, <span class="keyword">sizeof</span>(buffer));</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;等待信息...\n&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">iDataNum = recv(serverSocket, buffer, <span class="keyword">sizeof</span>(buffer), <span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (iDataNum &gt;= <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">buffer[iDataNum] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;收到的信息：%s\n\n&quot;</span>,buffer);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">getchar();</span><br><span class="line">close(serverSocket);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>其中，send()是用来发送数据的，recv()是用来接收数据的</p><p><strong>接收数据</strong>的时候，通常情况下是不知道大小的，所以使用的是缓冲区的大小<em>sizeof(buffer)</em></p><p>但在<strong>发送数据</strong>的时候，是可以知道数据的长度&#x2F;大小的，所以可以直接用*strlen(buffer)*来获取和确定要发送的长度</p><p>注：直接在cmd用gcc编译时，记得加上 -lwsock32(当前是Windows 10)</p><p><code>$ gcc .\Server.c -o .\Server.exe -lwsock32</code></p><hr><h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><p>还有一点需要注意的是，我试过：先写好客户端只发送数据，服务端只接收数据</p><p>然后利用Client端 连续不间断地向Server端发送长度较大的数据，这时在Server端打印接收到的数据时，往往会显示（接收）不完全，或许是recv()中的数据并没有被完全读进buffer中去。</p><p>怎么说呢，就像是我Server端要接收一大串的数据，我这一大串(来自recv的)数据还没有读到尾(‘\0’) 内存还没读完，buffer就要被拿去printf了，printf完就被填充全0，准备下一次的数据接收。</p><p>那怎么办呢，要确保Server端完整读取发送过来的数据呀，那我加延时呗 等内存读完呗，延时完再打印和初始化buffer。</p><p>实验结果发现，确实可以，但！这个延时加在Server端却没用，对于Server端来说 每一条语句执行的顺序都是一样的，速度也是相当的，你不可能说加了个延时它就不接收数据了呀，对吧。</p><p>然后我把延时加在了Client端发送那里，确保每次发送都有一段不会太短的时间间隔，这样Server端就能完整读取完数据再处理下一次的接收。</p><p>真是非常的amazing啊，当初我还是搞网安玩加密的时候试出来的，调了半天，以为是因为加密后乱码 发过去了读不出来，结果才发现可能是内存没读完导致的，郁闷了两天（托腮.jpg）</p><p>不过这也只不过是我猜测的啦，真正具体是什么原因导致读不完我还不怎么清楚了啦……(蹲个大佬 我插个眼)</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C </tag>
            
            <tag> 笔记 </tag>
            
            <tag> TCP </tag>
            
            <tag> 网络编程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JS闭包异步问题</title>
      <link href="/%E6%8A%80%E6%9C%AF/JS%E9%97%AD%E5%8C%85%E5%BC%82%E6%AD%A5%E9%97%AE%E9%A2%98/"/>
      <url>/%E6%8A%80%E6%9C%AF/JS%E9%97%AD%E5%8C%85%E5%BC%82%E6%AD%A5%E9%97%AE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<h1 id="JS闭包异步问题"><a href="#JS闭包异步问题" class="headerlink" title="JS闭包异步问题"></a>JS闭包异步问题</h1><p>假设我们现在想要先执行f2，执行完f2之后在紧跟执行f1。我们应该这样写：👇</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">f1</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>( <span class="function">()=&gt;</span>&#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;this is f1&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">  &#125;,<span class="number">2000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f2</span>(<span class="params">callback</span>)&#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>( <span class="function">()=&gt;</span>&#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;this is f2&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>())</span><br><span class="line">     <span class="title function_">callback</span>()</span><br><span class="line">  &#125;,<span class="number">2000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;start time:&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>())</span><br><span class="line"><span class="title function_">f2</span>(f1)</span><br></pre></td></tr></table></figure><p>这样他会先打印”start time”，过两秒后打印”f2”的时间，再过2s后再打印”f1”</p><p><img src="/./%E6%8A%80%E6%9C%AF/JS%E9%97%AD%E5%8C%85%E5%BC%82%E6%AD%A5%E9%97%AE%E9%A2%98/image-20210713003026939.png#pic_center" alt="image-20210713003026939"></p><img src="image-20210713003317016.png" alt="image-20210713003317016"  /><hr><p>若换一种写法：</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">function</span> <span class="title function_">f1</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>( <span class="function">()=&gt;</span>&#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;this is f1&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>());</span><br><span class="line">  &#125;,<span class="number">2000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">f2</span>(<span class="params"></span>)&#123;</span><br><span class="line">  <span class="built_in">setTimeout</span>( <span class="function">()=&gt;</span>&#123;</span><br><span class="line">     <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;this is f2&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>())</span><br><span class="line">  &#125;,<span class="number">2000</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;start time:&quot;</span>,<span class="keyword">new</span> <span class="title class_">Date</span>())</span><br><span class="line"></span><br><span class="line"><span class="title function_">f2</span>()</span><br><span class="line"><span class="title function_">f1</span>()</span><br></pre></td></tr></table></figure><p>这样并不能达到异步的效果，它会先打印”start time”，之后在接下来的语句中，它会执行f2()、f1() ，f1打印的时间应该和f2打印的时间是一样的</p><p>解释：这里f1的执行，并不需要等待f2执行完 跳出来之后再执行，这里就像是解析语句一般，解析完“要执行f2()”，之后解析“要执行f1()”，它两之间就几个微秒的间隔</p><p><img src="/./%E6%8A%80%E6%9C%AF/JS%E9%97%AD%E5%8C%85%E5%BC%82%E6%AD%A5%E9%97%AE%E9%A2%98/image-20210713004030715.png" alt="image-20210713004030715"></p><hr><div class="mermaid">sequenceDiagramNote over 主 线: 解析&quot;start time&quot;Note over 主 线: 解析f2()主 线-&gt;&gt;+支线1: 给我去执行f2()Note over 支线1: 执行f2()Note over 主 线: 解析f1()主 线-&gt;&gt;+支线2: 给我去执行f1()Note over 支线2: 执行f1()</div><ol><li><p>主线先解析”start time”</p></li><li><p>主线解析“要执行f2()”，然后把f2的具体内容交给支线1去执行，支线1与主线互不干扰，两者并行</p></li><li><p>主线解析“要执行f1()”，然后把f1的具体内容交给支线2去执行，支线2与主线互不干扰，两者并行</p><p>（与此同时，支线1继续执行f2的内容，理论上应该还没执行完f2  因为主线从解析f2()到解析f1()仅需大概6微秒左右[视芯片而定吧]）</p></li></ol><p>这里用 <code>new Date().getTime()</code> 打印了时间戳，</p><p>“start time” 与f2 相差 2012ms，也就是2s + 12ms</p><p>f2和f1的时间就差了1ms</p><p><img src="/./%E6%8A%80%E6%9C%AF/JS%E9%97%AD%E5%8C%85%E5%BC%82%E6%AD%A5%E9%97%AE%E9%A2%98/image-20210713010648477.png" alt="image-20210713010648477"></p><hr><p>若直接用 <code>new Date().getMilliseconds()</code> 打印ms：</p><p><img src="/./%E6%8A%80%E6%9C%AF/JS%E9%97%AD%E5%8C%85%E5%BC%82%E6%AD%A5%E9%97%AE%E9%A2%98/image-20210713011331809.png" alt="image-20210713011331809"><img src="/./%E6%8A%80%E6%9C%AF/JS%E9%97%AD%E5%8C%85%E5%BC%82%E6%AD%A5%E9%97%AE%E9%A2%98/image-20210713011353347.png" alt="image-20210713011353347"></p><p>大概就是看进位吧？！</p><p>反正就是两者的间隔时间很短，并不会出现执行完f2()在执行f1()的情况</p>]]></content>
      
      
      <categories>
          
          <category> 技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> JS </tag>
            
            <tag> 异步 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机+Ubuntu，搭建hadoop集群</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/%E8%99%9A%E6%8B%9F%E6%9C%BA+Ubuntu%EF%BC%8C%E6%90%AD%E5%BB%BAhadoop%E9%9B%86%E7%BE%A4/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/%E8%99%9A%E6%8B%9F%E6%9C%BA+Ubuntu%EF%BC%8C%E6%90%AD%E5%BB%BAhadoop%E9%9B%86%E7%BE%A4/</url>
      
        <content type="html"><![CDATA[<h1 id="一些说明和资源"><a href="#一些说明和资源" class="headerlink" title="一些说明和资源"></a>一些说明和资源</h1><p>虚拟机：VirtualBox-6.1.18<br>Ubuntu：16.04桌面版<br>JDK：<a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">jdk-8u281-linux-x64.tar.gz</a><br>hadoop：<a href="http://archive.apache.org/dist/hadoop/core/hadoop-2.7.3/hadoop-2.7.3.tar.gz">hadoop2.7.3</a><br>可能用到的资源：<a href="https://download.csdn.net/download/li1055107552/15776196">hadoop-instead</a></p><hr><h2 id="安装虚拟机和Ubuntu16-04"><a href="#安装虚拟机和Ubuntu16-04" class="headerlink" title="安装虚拟机和Ubuntu16.04"></a>安装虚拟机和Ubuntu16.04</h2><p>传送门：<a href="https://blog.csdn.net/li1055107552/article/details/114766651">下载及安装教程</a></p><blockquote><p> 稍有不同的地方：<br><img src="https://img-blog.csdnimg.cn/20210313233828663.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></blockquote><hr><h2 id="安装hadoop"><a href="#安装hadoop" class="headerlink" title="安装hadoop"></a>安装hadoop</h2><br/><h4 id="1-配置虚拟机网卡"><a href="#1-配置虚拟机网卡" class="headerlink" title="1. 配置虚拟机网卡"></a>1. 配置虚拟机网卡</h4><pre><code>     1. 打开VirtualBox     2. 点击右上角 管理 --&gt; 主机网络管理器 --&gt; 创建网卡    </code></pre><p><img src="https://img-blog.csdnimg.cn/img_convert/c8c9b55601207655f98a85d995350e45.png#pic_center" alt="在这里插入图片描述"></p><br/><h4 id="2-配置主机网卡"><a href="#2-配置主机网卡" class="headerlink" title="2. 配置主机网卡"></a>2. 配置主机网卡</h4><p><img src="https://img-blog.csdnimg.cn/img_convert/f47ddb53bc42e835fb6e7a75c4d37d92.png#pic_center" alt="在这里插入图片描述"></p><br/><h4 id="3-进入到Ubuntu"><a href="#3-进入到Ubuntu" class="headerlink" title="3.进入到Ubuntu"></a>3.进入到Ubuntu</h4><p><font size=3>以下操作在 hadoop-master 下完成</font></p><h5 id="3-1-配置hosts文件"><a href="#3-1-配置hosts文件" class="headerlink" title="3.1 配置hosts文件"></a>3.1 配置hosts文件</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/hosts</span><br></pre></td></tr></table></figure><blockquote><p>&#x2F;&#x2F;  配置如下，后面的ipv6部分无需更改：<br/><br><img src="https://img-blog.csdnimg.cn/20210314030323120.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></blockquote><br/><h5 id="3-2-下载和配置Java"><a href="#3-2-下载和配置Java" class="headerlink" title="3.2 下载和配置Java"></a>3.2 下载和配置Java</h5><p>JDK下载：<a href="https://www.oracle.com/java/technologies/javase/javase-jdk8-downloads.html">官方下载地址</a><br>本地下载：<a href="https://download.csdn.net/download/li1055107552/15773067">jdk-8u281-linux-x64.tar.gz</a></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 进入到jdk的存放位置 解压</span><br><span class="line">$ tar -xvf jdk-8u281-linux-x64.tar.gz</span><br><span class="line"></span><br><span class="line">// 将文件夹复制到/usr/java 目录下</span><br><span class="line">$ sudo <span class="built_in">cp</span> -r jdk1.8.0_281/ /usr/java</span><br></pre></td></tr></table></figure><p>接着配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/profile</span><br></pre></td></tr></table></figure><p>在 profile 中添加以下内容：</p><pre><code>export JAVA_HOME=/usr/javaexport CLASSPATH=.:$JAVA_HOME/lib:$JRE_HOME/lib:$CLASSPATHexport PATH=$JAVA_HOME/bin:$JRE_HOME/bin:$PATHexport JRE_HOME=$JAVA_HOME/jre# 下面是 后面hadoop的环境变量# export HADOOP_HOME=/usr/hadoop# export CLASSPATH=$($HADOOP_HOME/bin/hadoop classpath):$CLASSPATH# export HADOOP_COMMON_LIB_NATIVE_DIR=$HADOOP_HOME/lib/native# export PATH=$PATH:$HADOOP_HOME/bin:$HADOOP_HOME/sbin</code></pre><p>然后是保存 并使profile文件立即生效：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ <span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p>接着可以输入以下命令查看是否安装成功：</p><pre><code>$ java -version</code></pre><p>若能成功打印版本信息则为成功。</p><br/><h5 id="3-3-下载和配置Hadoop"><a href="#3-3-下载和配置Hadoop" class="headerlink" title="3.3 下载和配置Hadoop"></a>3.3 下载和配置Hadoop</h5><p>官方地址：<a href="http://archive.apache.org/dist/hadoop/core/">传送门</a><br>一步到位：<a href="http://archive.apache.org/dist/hadoop/core/hadoop-2.7.3/hadoop-2.7.3.tar.gz">hadoop-2.7.3.tar.gz</a></p><pre><code>整体的布局：NameNode：hadoop-masterDataNode：hadoop-master、hadoop-slave1、hadoop-slave2ResourceManager：hadoop-masterNodeManager：hadoop-master</code></pre><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 进入到目录下解压</span><br><span class="line">$ tar -xvf hadoop-2.7.3.tar.gz</span><br><span class="line"></span><br><span class="line">// 将文件夹复制到/usr/hadoop 目录下</span><br><span class="line">$ sudo <span class="built_in">cp</span> -r hadoop-2.7.3/ /usr/hadoop </span><br></pre></td></tr></table></figure><p>配置环境变量</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 把上面刚刚Java的环境变量 hadoop部分注释去掉即可</span><br><span class="line">$ sudo vim /etc/profile</span><br><span class="line"></span><br><span class="line">// 同样使profile文件立即生效：</span><br><span class="line">$ <span class="built_in">source</span> /etc/profile</span><br></pre></td></tr></table></figure><p>接下来需要更改几个文件的内容：</p><p><img src="https://img-blog.csdnimg.cn/20210314021000410.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>注：mapred-site.xml 没有此文件，将mapred-site.xml.template复制一份改即可</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line">// hadoop-env.sh 将java的目录改为绝对路径，以免启动hadoop时找不到Java目录而报错</span><br><span class="line"># The java implementation to use.</span><br><span class="line">export JAVA_HOME=/usr/java</span><br><span class="line"></span><br><span class="line">// slaves 修改为以下内容，三台主机的名称：</span><br><span class="line">hadoop-master</span><br><span class="line">hadoop-slave1</span><br><span class="line">hadoop-slave2</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// core-site.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>hadoop.tmp.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/usr/hadoop/tmp<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>fs.defaultFS<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>hdfs://hadoop-master:9000<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// hdfs-site.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.replication<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>2<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.secondary.http-address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop-master:50090<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.namenode.name.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/usr/hadoop/tmp/dfs/name<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>dfs.datanode.data.dir<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>file:/usr/hadoop/tmp/dfs/data<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// mapred-site.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.framework.name<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>yarn<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop-master:10020<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>mapreduce.jobhistory.webapp.address<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop-master:19888<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">// yarn-site.xml</span><br><span class="line"><span class="tag">&lt;<span class="name">configuration</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.resourcemanager.hostname<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>hadoop-master<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.aux-services<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>mapreduce_shuffle<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.log-aggregation-enable<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>true<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">property</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">name</span>&gt;</span>yarn.nodemanager.log-dirs<span class="tag">&lt;/<span class="name">name</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">value</span>&gt;</span>$&#123;yarn.log.dir&#125;/userlogs<span class="tag">&lt;/<span class="name">value</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">property</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">configuration</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">故意写在后面：</span><br><span class="line">懒人专属：当你懒到一定程度时，可以直接利用 hadoop-instead 里的文件替换掉 /usr/.../etc/hadoop 里的文件就好了</span><br></pre></td></tr></table></figure><p>配置好之后，保存并关闭该主机 hadoop-master 。<br>复制另外两台主机，分别名为hadoop-slave1、hadoop-slave2</p><p>复制好之后，启动三台主机。</p><br/><h5 id="3-4-分别更改三台主机的网络配置"><a href="#3-4-分别更改三台主机的网络配置" class="headerlink" title="3.4 分别更改三台主机的网络配置"></a>3.4 分别更改三台主机的网络配置</h5><br/><h5 id="3-4-1-hadoop-master"><a href="#3-4-1-hadoop-master" class="headerlink" title="3.4.1 hadoop-master"></a>3.4.1 hadoop-master</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ ifconfig -a</span><br></pre></td></tr></table></figure><p>应该能看到一个网卡是没有ip地址的，那就是需要配置的。（如：enp0s8）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo vim /etc/network/interfaces</span><br></pre></td></tr></table></figure><p>在后面添加以下内容：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">auto enp0s8</span><br><span class="line">iface enp0s8 inet static</span><br><span class="line">address 192.168.56.1</span><br><span class="line">netmask 255.255.255.0</span><br></pre></td></tr></table></figure><blockquote><p>&#x2F;&#x2F; &#x2F;etc&#x2F;network&#x2F;interfaces：<br/><br><img src="https://img-blog.csdnimg.cn/20210314031531869.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"></p></blockquote><p>开启网卡</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo ifup enp0s8</span><br></pre></td></tr></table></figure><p>开启后，再次查看状态，应该是有ip地址的，如192.168.56.1</p><br/><h5 id="3-4-2-hadoop-slave1、hadoop-slave2"><a href="#3-4-2-hadoop-slave1、hadoop-slave2" class="headerlink" title="3.4.2 hadoop-slave1、hadoop-slave2"></a>3.4.2 hadoop-slave1、hadoop-slave2</h5><p>更改一下设备名称，不然host不认…</p><p><img src="https://img-blog.csdnimg.cn/20210314032451455.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20210314032451368.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><br>其他操作与 3.4.1 同理。<br>配置好之后，三台主机之间，应该是可以成功ping通的。</p><br/><h5 id="3-5-配置SSH免密登录"><a href="#3-5-配置SSH免密登录" class="headerlink" title="3.5 配置SSH免密登录"></a>3.5 配置SSH免密登录</h5><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 若没有安装ssh的可以先下载更新一下(所有主机都要)</span><br><span class="line">$ sudo apt-get install openssh-server openssh-client</span><br></pre></td></tr></table></figure><p>回到我们的 hadoop-master 主机上</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ ssh-keygen -t rsa -P <span class="string">&#x27;&#x27;</span> -f ~/.ssh/id_rsa</span><br><span class="line"></span><br><span class="line">// 分发到不同主机上</span><br><span class="line">$ ssh-copy-id username@hadoop-slave1</span><br><span class="line">$ ssh-copy-id username@hadoop-slave2</span><br><span class="line"></span><br><span class="line">// 本机免密登录</span><br><span class="line">$ <span class="built_in">cd</span> ~/.ssh</span><br><span class="line">$ <span class="built_in">cat</span> id_rsa.pub &gt;&gt; authorized_keys</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注：链接时提示输入密码，是需要链接的主机的密码，不是本机的密码。<br>连接后，若想要退出链接，可以执行 <code>$exit</code></p><hr><h2 id="启动hadoop"><a href="#启动hadoop" class="headerlink" title="启动hadoop"></a>启动hadoop</h2><p>三台主机都开启后，在 master主机 上执行指令，格式化HDFS文件系统：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hdfs namenode -format</span><br></pre></td></tr></table></figure><p>在master节点启动hadoop集群</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ start-all.sh</span><br><span class="line">或</span><br><span class="line">$ start-dfs.sh</span><br><span class="line">$ start-yarn.sh</span><br></pre></td></tr></table></figure><p>然后可以通过<code>$ jps</code> 查看信息，各主机的信息 应该与上文中 3.3 的整体的布局相一致</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">还可以通过以下命令查看hadoop集群系统的状态：</span><br><span class="line">$ hdfs dfsadmin -report</span><br><span class="line"></span><br><span class="line">或直接打开网页，查看更详细的信息：</span><br><span class="line">http://192.168.56.1:50070</span><br></pre></td></tr></table></figure><hr><h2 id="启动程序"><a href="#启动程序" class="headerlink" title="启动程序"></a>启动程序</h2><p>先跑个demo，算个π</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hadoop jar /usr/hadoop/share/hadoop/mapreduce/hadoop-mapreduce-examples-2.7.3.jar pi 10 10</span><br></pre></td></tr></table></figure><p>第一次执行，时间会较长，可能需要2-5分钟</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">// 试过一次好像启动的时候报错了，说要把这个关掉，先写在这吧：</span><br><span class="line">$ hdfs dfsadmin -safemode leave</span><br></pre></td></tr></table></figure><br/><p>其他：（我在另一本书上看到的，大家也可以拿来试着跑一下）</p><ul><li><p>日志分析：<br>  github：<a href="https://github.com/bdintro/bdintro.git">https://github.com/bdintro/bdintro.git</a><br> 编译源代码采用mvn package，测试数据为hadoop-user-datanode-dell119.log.zip<br> 在测试前先把对应数据上传到HDFS集群中，把使用mvn package编译好的jar包</p> <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 上传日志到hadoop</span><br><span class="line">$ hadoop fs -copyFromLocal hadoop-yangyaru-datanode-dell119.log /</span><br><span class="line"></span><br><span class="line">// 启动</span><br><span class="line">$ hadoop jar 打包好的jar包路径/bigdata-0.0.1.jar bigdata.bigdaba.Grep WARN 需分析的日志路径/hadoop-user-datanode-dell119.<span class="built_in">log</span> 结果输出的路径/output</span><br></pre></td></tr></table></figure></li><li><p>交通流量分析：<br>   github：<a href="https://github.com/bdintro/bdintro.git">https://github.com/bdintro/bdintro.git</a><br>   详细的交通流量数据格式描述如网站所述：<a href="https://www.kaggle.com/jana36/us-traffic-violations-montgomery-county-poliet">https://www.kaggle.com/jana36/us-traffic-violations-montgomery-county-poliet</a><br>  编译源代码采用mvn package，测试数据为Traffic_Violations.csv.zip<br>  在测试前先把对应数据上传到HDFS集群中，把使用mvn package编译好的jar包</p>  <figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">// 上传交通记录到hadoop</span><br><span class="line">$ hadoop fs -copyFromLocal Traffic_Violations.csv /</span><br><span class="line"></span><br><span class="line">// 启动</span><br><span class="line">$ hadoop jar 打包好的jar包路径/bigdata-0.0.1.jar bigdata.bigdaba.TrafficTotal WARN 需分析的日志路径/Traffic_Violations.csv 结果输出的路径/output</span><br></pre></td></tr></table></figure></li></ul><br/><hr><h2 id="完"><a href="#完" class="headerlink" title="完"></a>完</h2>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> Hadoop </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VirtualBox安装Ubuntu16.04</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/VirtualBox%E5%AE%89%E8%A3%85Ubuntu16.04/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/VirtualBox%E5%AE%89%E8%A3%85Ubuntu16.04/</url>
      
        <content type="html"><![CDATA[<h1 id="VirtualBox安装Ubuntu16-04"><a href="#VirtualBox安装Ubuntu16-04" class="headerlink" title="VirtualBox安装Ubuntu16.04"></a>VirtualBox安装Ubuntu16.04</h1><hr><h2 id="一、VirtualBox的安装"><a href="#一、VirtualBox的安装" class="headerlink" title="一、VirtualBox的安装"></a>一、VirtualBox的安装</h2><p>下载地址：<a href="https://download.virtualbox.org/virtualbox/">官方下载地址</a><br>一键下载：<a href="https://download.virtualbox.org/virtualbox/6.1.18/VirtualBox-6.1.18-142142-Win.exe">VirtualBox-6.1.18-142142-Win.exe</a></p><p>然后就是傻瓜式安装……</p><hr><h2 id="二、安装Ubuntu16-04"><a href="#二、安装Ubuntu16-04" class="headerlink" title="二、安装Ubuntu16.04"></a>二、安装Ubuntu16.04</h2><p>之前VMware上我也出过一篇，大家直接去看就好了。</p><p>传送门：<a href="https://blog.csdn.net/li1055107552/article/details/108478620">虚拟机上安装Ubuntu16.04及ROS</a></p><blockquote><p><img src="https://img-blog.csdnimg.cn/20210313235018808.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">点击下一步</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20210313235220779.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">这里看自己的配置，建议最小2GB，我这里是4GB</p></blockquote><blockquote><p>磁盘：<img src="https://img-blog.csdnimg.cn/20210313235414288.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">下一步<img src="https://img-blog.csdnimg.cn/20210313235508195.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">下一步<img src="https://img-blog.csdnimg.cn/2021031323553961.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">这里看自己吧<img src="https://img-blog.csdnimg.cn/20210313235623128.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述">建议20GB，10GB也不是不行</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>虚拟机上安装Ubuntu及ROS</title>
      <link href="/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85Ubuntu16.04%E5%8F%8AROS/"/>
      <url>/%E7%B2%BE%E9%80%9A%E5%90%84%E8%BD%AF%E4%BB%B6%E7%9A%84%E5%AE%89%E8%A3%85/%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B8%8A%E5%AE%89%E8%A3%85Ubuntu16.04%E5%8F%8AROS/</url>
      
        <content type="html"><![CDATA[<h1 id="虚拟机上安装Ubuntu及ROS"><a href="#虚拟机上安装Ubuntu及ROS" class="headerlink" title="虚拟机上安装Ubuntu及ROS"></a>虚拟机上安装Ubuntu及ROS</h1><p>使用的虚拟机 VMware为15.x的版本<br>Ubuntu的版本为16.04的版本</p><hr><h2 id="Ubuntu的安装"><a href="#Ubuntu的安装" class="headerlink" title="Ubuntu的安装"></a>Ubuntu的安装</h2><ul><li><p>安装好虚拟机VMware</p></li><li><p>下载 Ubuntu-16.04.7-desktop-amd64 镜像源</p><blockquote><p>官网：<a href="https://releases.ubuntu.com/16.04/">https://releases.ubuntu.com/16.04/</a><br>官方镜像源：<a href="https://releases.ubuntu.com/16.04/ubuntu-16.04.7-desktop-amd64.iso">点击下载官方镜像源</a><br>阿里云镜像源：<a href="http://mirrors.aliyun.com/ubuntu-releases/16.04/ubuntu-16.04.7-desktop-amd64.iso">点击下载阿里云镜像源</a><br>该文档的PDF：<a href="https://download.csdn.net/download/li1055107552/12829008">下载</a></p></blockquote></li><li><p>安装Ubuntu-16.04.7-desktop-amd64</p></li></ul><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908223146462.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="选择自定义，点击下一步"><br>选择自定义，点击下一步</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908224802632.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="点击下一步"><br>点击下一步</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908225124372.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="选择“稍后安装操作系统”，点击下一步"><br>选择“稍后安装操作系统”，点击下一步</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908225215382.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="选择“Linux”，版本选择“Ubuntu 64位”，点击下一步"><br>选择“Linux”，版本选择“Ubuntu 64位”，点击下一步</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908225314218.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="选择该虚拟机的安装位置，点击下一步"><br>选择该虚拟机的安装位置，点击下一步</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908225350572.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><img src="https://img-blog.csdnimg.cn/20200908225412144.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>根据自己的电脑，选择相应的配置，建议不低于2核2G内存</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908225502494.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="这里选择NAT即可"><br>这里选择NAT即可。（安装好Ubuntu之后，选择右上角，点击“自动以太网”即可）</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908225548299.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="在这里插入图片描述"><img src="https://img-blog.csdnimg.cn/20200908225558141.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>这里选择默认推荐的即可，点击下一步</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908230931724.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><img src="https://img-blog.csdnimg.cn/20200908231010709.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>如图，点击下一步</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908231311332.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><img src="https://img-blog.csdnimg.cn/2020090823133270.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>选择好磁盘文件存储的位置之后，点击下一步，即可看到大致的配置信息，点击完成</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908232849729.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>点击完成后，点击该虚拟机的CD&#x2F;DVD</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/2020090823293182.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>    - 选择CD&#x2F;DVD（SATA），选择“使用ISO映像文件”，选择上一步骤下载的镜像源<br>    - 同时您还可以把“打印机”移除<br>    - 设置好之后，点击确定<br>    - 点击 开启此虚拟机</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908233040219.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>    拉到最下面，选择中文（简体）</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908233114680.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>    点击“安装Ubuntu”</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908233423384.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>    不做选择，点击“继续”</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908233510512.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>    选择“清除整个磁盘并安装Ubuntu”，点击现在安装</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908233625651.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>    弹出提示，点击继续</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908233648901.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>时间选择shanghai即可，点击继续</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908233715890.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>选择“汉语-汉语”，点击继续</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908233742933.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>设置好用户名以及密码，点击继续</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908233811864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><img src="https://img-blog.csdnimg.cn/20200908233841416.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>    - 稍等片刻，即可安装完成<br>    - 安装完毕，点击现在重启。（若出现一行命令行后没反应，关闭虚拟机重启）</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908234032864.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>现在已经安装好Ubuntu了，登录刚刚设置的密码即可。</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908234108519.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>    成功进入到Ubuntu主界面，您可以把这几项从启动器解锁</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908234149401.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>打开第一项的搜索，打开终端</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908234204463.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>打开一个终端，并锁定到启动器</p></blockquote><blockquote><p>运行终端，输入su命令，当你输入刚才登录的密码时发现su：认证失败。<br>你可以输入 $ sudo passwd root 更新密码（可以与原来相同）<br><img src="https://img-blog.csdnimg.cn/20200908234432239.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>设置完成后，在此输入su，输入密码即可认证成功。</p></blockquote><blockquote><p><img src="https://img-blog.csdnimg.cn/20200908234530775.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>接下来打开 设置—系统 软件和更新，如图设置好即可。</p></blockquote><p>届时，你的Ubuntu 已经完全配置好了。</p><hr><h2 id="ROS的安装"><a href="#ROS的安装" class="headerlink" title="ROS的安装"></a>ROS的安装</h2><ol><li>首先添加ROS的镜像源（此处使用‘中国科学技术大学’的镜像源）</li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> sudo sh –c <span class="string">&#x27;. /etc/lsb-release &amp;&amp; echo &quot;deb http://mirrors.ustc.edu.cn/ros/ubuntu/ $DISTRIB_CODENAME main&quot; &gt; /etc/apt/sources.list.d/ros-latest.list&#x27;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>添加密钥</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ sudo apt-key adv --keyserver hkp://ha.pool.sks-keyservers.net:80 --recv-key 421C365BD9FF1F717815A3895523BAEEB01FA116</span><br></pre></td></tr></table></figure><blockquote><p><img src="https://img-blog.csdnimg.cn/20200909233036934.png#pic_center" alt="Alt"></p></blockquote><ol start="3"><li>更新软件源<figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> sudo apt<span class="literal">-get</span> update</span><br></pre></td></tr></table></figure><blockquote><p><img src="https://img-blog.csdnimg.cn/20200909233257485.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>接下来就是漫长的等待.. …（有条件的可以连个VPN，会快很多）</p></blockquote></li></ol><blockquote><p>若上方的 ‘ $ sudo apt-get update ‘ 更新失败了，<br>可以打开“设置-系统 软件和更新”，随意勾选一项 然后提示输入密码，接着再还原勾选的选项 点击“关闭”，即会提示以下信息<br><img src="https://img-blog.csdnimg.cn/20200909233705924.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>保证联网后，点击重新载入 便会出现如下界面。只需等待自动更新即可。<br><img src="https://img-blog.csdnimg.cn/20200909233824310.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>4. 安装ROS桌面完整版</p></blockquote><p>执行完上面的步骤后，执行命令安装ROS的桌面完整版</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> sudo apt<span class="literal">-get</span> install ros<span class="literal">-kinetic-desktop-full</span></span><br></pre></td></tr></table></figure><p>可能有包无法下载，所以执行完之后，输入命令</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> sudo apt<span class="literal">-get</span> install ros<span class="literal">-kinetic-desktop-full</span> –fix<span class="literal">-missing</span></span><br></pre></td></tr></table></figure><p>将检查是否有漏的包，并且自动进行相关的设置</p><blockquote><p><img src="https://img-blog.csdnimg.cn/20200909234101581.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>5. 初始化rosdep</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> sudo rosdep init</span><br></pre></td></tr></table></figure><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> rosdep update</span><br></pre></td></tr></table></figure><blockquote><p><img src="https://img-blog.csdnimg.cn/20200909234436782.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alr"><img src="https://img-blog.csdnimg.cn/20200909234446771.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"></p></blockquote><ol start="6"><li>设置环境变量</li></ol><p>（默认）终端为bash的：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> <span class="built_in">echo</span> <span class="string">&quot;source /opt/ros/kinetic/setup.bash&quot;</span> &gt;&gt; ~/.bashrc</span><br><span class="line"><span class="variable">$</span> source ~/.bashrc</span><br></pre></td></tr></table></figure><p>zsh终端的：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> <span class="built_in">echo</span> <span class="string">&quot;source /opt/ros/kinetic/setup.zsh&quot;</span> &gt;&gt; ~/.zshrc</span><br><span class="line"><span class="variable">$</span> source ~/.zshrc</span><br></pre></td></tr></table></figure><blockquote><p>若不知道自己是什么终端的，可以输入 <code>$ env</code> 查看<br><img src="https://img-blog.csdnimg.cn/20200909234808788.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"><br>7. （选）你还可以安装 rosinsall  ROS中的一个常用工具，来便于后续的开发</p></blockquote><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> sudo apt<span class="literal">-get</span> install python<span class="literal">-rosinstall</span> python<span class="literal">-rosinstall-generator</span> python<span class="literal">-wstool</span> <span class="built_in">build-essential</span></span><br></pre></td></tr></table></figure><blockquote><p><img src="https://img-blog.csdnimg.cn/20200909235002169.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"></p></blockquote><p><strong>附：<code>$ apt-cache search package</code>   可以用来查询是否已经安装某个package</strong></p><h2 id="到此，ROS-也已经安装完成了。输入-roscore-即可启动ROS了-gt"><a href="#到此，ROS-也已经安装完成了。输入-roscore-即可启动ROS了-gt" class="headerlink" title=" 到此，ROS 也已经安装完成了。输入 $ roscore  即可启动ROS了&gt; "></a> <strong>到此，ROS 也已经安装完成了。</strong><br><br>输入 <strong><code>$ roscore</code></strong>  即可启动ROS了<br>&gt; <img src="https://img-blog.csdnimg.cn/20200909235148976.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"></h2><h2 id="运行小海龟"><a href="#运行小海龟" class="headerlink" title="运行小海龟"></a>运行小海龟</h2><ol><li><p>启动ROS。先打开一个终端，然后输入命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> roscore</span><br></pre></td></tr></table></figure></li><li><p>启动turtlesim仿真节点。再打开一个终端，输入命令：</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> rosrun turtlesim turtlesim_node</span><br></pre></td></tr></table></figure></li><li><p>再打开一个终端，使得可以用键盘上的方向键操控小乌龟：</p></li></ol><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$</span> rosrun turtlesim turtle_teleop_key</span><br></pre></td></tr></table></figure><blockquote><p><img src="https://img-blog.csdnimg.cn/20200909235510599.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpMTA1NTEwNzU1Mg==,size_16,color_FFFFFF,t_70#pic_center" alt="Alt"></p></blockquote><h3 id="到此，你的ROS已经能够正常运行啦！"><a href="#到此，你的ROS已经能够正常运行啦！" class="headerlink" title="到此，你的ROS已经能够正常运行啦！"></a>到此，你的ROS已经能够正常运行啦！</h3><p><strong>开始进阶学习吧~</strong> </p><hr>]]></content>
      
      
      <categories>
          
          <category> 精通各软件的安装 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 虚拟机 </tag>
            
            <tag> Linux </tag>
            
            <tag> ROS </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
